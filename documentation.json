{
    "pipes": [
        {
            "name": "RoundCurrencyDisplayPipe",
            "id": "pipe-RoundCurrencyDisplayPipe-b87e51ce06c5a439159a7eba5f7891b0",
            "file": "src/app/pipes/round-currency-display.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "input",
                            "type": "any"
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 7,
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "roundCurrencyDisplay",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"roundCurrencyDisplay\",\r\n})\r\nexport class RoundCurrencyDisplayPipe implements PipeTransform {\r\n  transform(input: any, args?: any): any {\r\n    var exp,\r\n      oneMillion = 1000000,\r\n      suffixes = [\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"];\r\n\r\n    if (Number.isNaN(input)) {\r\n      return null;\r\n    }\r\n \r\n    if (input < oneMillion) {\r\n      return Number(input).toLocaleString('en-US');\r\n    }\r\n\r\n    exp = Math.floor(Math.log(input) / Math.log(1000));\r\n\r\n    return (input / Math.pow(1000, exp)).toFixed(args) + suffixes[exp - 1];\r\n  }\r\n}\r\n"
        },
        {
            "name": "RoundCurrencyPipe",
            "id": "pipe-RoundCurrencyPipe-63d563b36244d3db1f408a054cb8fb84",
            "file": "src/app/vv-charts/round-currency.pipe.ts",
            "type": "pipe",
            "description": "",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "input",
                            "type": "any"
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "optional": true
                        },
                        {
                            "name": "threshold",
                            "type": "any",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 7,
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "threshold",
                            "type": "any",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "roundCurrency",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"roundCurrency\",\r\n})\r\nexport class RoundCurrencyPipe implements PipeTransform {\r\n  transform(input: any, args?: any, threshold?: any): any {\r\n    var exp,\r\n      oneMillion = 1000000,\r\n      minimum = Number.isNaN(threshold) ? oneMillion : Number(threshold),\r\n      suffixes = [\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"];\r\n\r\n    if (Number.isNaN(input)) {\r\n      return null;\r\n    }\r\n \r\n    // if (input < oneMillion) {\r\n    if (input < minimum || input < 1000) {\r\n      return Number(input).toLocaleString('en-US');\r\n    }\r\n\r\n    exp = Math.floor(Math.log(input) / Math.log(1000));\r\n\r\n    return (input / Math.pow(1000, exp)).toFixed(args) + suffixes[exp - 1];\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "Candidate",
            "id": "interface-Candidate-32cd8119131c5916f178848d0e646cbf",
            "file": "src/app/candidate.ts",
            "type": "interface",
            "sourceCode": "export interface Candidate {\r\n    name: string;\r\n    title: string;\r\n    raised: string;\r\n    donors: string;\r\n}\r\n\r\nexport interface CandidateTree {\r\n    title: string;\r\n    name: string;\r\n    candidates: Record<string, string>;\r\n}\r\n",
            "properties": [
                {
                    "name": "donors",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "raised",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "CandidateAssetsPaths",
            "id": "interface-CandidateAssetsPaths-5132922e88c1d38407eea2fb3bba8232",
            "file": "src/app/interfaces/candidateAssetPaths.ts",
            "type": "interface",
            "sourceCode": "export interface CandidateAssetsPaths {\r\n  id: string;\r\n  calculationsPath: string;\r\n  imagePath: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "calculationsPath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imagePath",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "CandidateCard",
            "id": "interface-CandidateCard-852df1778f2d535ed9f449576c606024",
            "file": "src/app/interfaces/candidateCard.ts",
            "type": "interface",
            "sourceCode": "export interface CandidateCard {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  raised: number;\r\n  donors: number;\r\n  candidateImgURL: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "candidateImgURL",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "donors",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "raised",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "CandidateJSON",
            "id": "interface-CandidateJSON-f0ed91d64b61b4663aa0426f660caad2",
            "file": "src/app/interfaces/candidateJSON.ts",
            "type": "interface",
            "sourceCode": "export interface CandidateJSON {\r\n  \"by industry\": [\r\n    { \"industry 1\": string[] },\r\n    { \"industry 2\": string[] },\r\n    { \"industry 3\": string[] },\r\n    { \"industry 4\": string[] },\r\n    { \"industry 5\": string[] },\r\n  ],\r\n  \"candidate name\": string,\r\n  \"committee name\": string,\r\n  \"description\": string,\r\n  \"first\": string,\r\n  \"in general\": boolean,\r\n  \"in vs out district\": [{\r\n    \"in\": string,\r\n    \"out\": string,\r\n  }],\r\n  \"last\": string,\r\n  \"oppose\": string,\r\n  \"raised vs spent\": [{\r\n    \"Raised\": string,\r\n    \"Spent\": string,\r\n    \"Donors\": string,\r\n    \"Average Donor\": string\r\n  }],\r\n  \"support\": string,\r\n  \"website\": string,\r\n}\r\n",
            "properties": [
                {
                    "name": "by industry",
                    "type": "[literal type, literal type, literal type, literal type, literal type]",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "candidate name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "committee name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "first",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "in general",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "in vs out district",
                    "type": "[literal type]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "last",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "oppose",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "raised vs spent",
                    "type": "[literal type]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "support",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "website",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "CandidateNavigation",
            "id": "interface-CandidateNavigation-cec1c71f0e605098328d33fd6951d102",
            "file": "src/app/interfaces/candidateNavigation.ts",
            "type": "interface",
            "sourceCode": "export interface CandidateNavigation {\r\n  id: string;\r\n  fullName: string;\r\n  officeType: string;\r\n  fullOfficeName: string;\r\n  seat: { name: string, type: string };\r\n  inGeneralElection: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "fullName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "fullOfficeName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "inGeneralElection",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "officeType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "seat",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "CandidateNavigationWithRoute",
            "id": "interface-CandidateNavigationWithRoute-9943543333f440d59cd1905559294c7d",
            "file": "src/app/components/candidate-navigation/candidate-navigation.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { toArray } from 'rxjs/operators';\r\n\r\nimport { CandidateNavigation } from '../../interfaces/candidateNavigation'\r\nimport { CandidateDataService } from '../../services/candidate-data.service';\r\n\r\ninterface CandidateNavigationWithRoute extends CandidateNavigation {\r\n  routeLink: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-candidate-navigation',\r\n  templateUrl: './candidate-navigation.component.html',\r\n})\r\nexport class CandidateNavigationComponent implements OnInit {\r\n  offices = [];\r\n  selectedOffice: string = '';\r\n  selectedSeatName: string = '';\r\n  selectedCandidateId: string = '';\r\n  seatType: string = 'District';\r\n\r\n  constructor(\r\n    private candidateDataService: CandidateDataService ) { }\r\n\r\n  addRoute(candidate: CandidateNavigation): CandidateNavigationWithRoute {\r\n    let path = `${candidate.officeType}`;\r\n\r\n    if (candidate.seat !== null) {\r\n      path += `_${candidate.seat.type}-${candidate.seat.name}`;\r\n    }\r\n\r\n    return {\r\n      ...candidate,\r\n      routeLink: `${path}/${candidate.id}`.toLowerCase().split(' ').join('-'),\r\n      seat: candidate.seat ? { ...candidate.seat } : null,\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.candidateDataService.getCandidates().pipe( toArray() ).subscribe(candidates => {\r\n      const officeTitles: string[] = candidates.map(candidate => candidate.officeType).sort().reverse();\r\n      const distinctOfficeTitles: string[] = [... new Set(officeTitles)]; // remove duplicates\r\n      \r\n      const candidatesWithRoute = candidates.map(candidate => this.addRoute(candidate));\r\n\r\n      this.offices = this.getOffices(candidatesWithRoute, distinctOfficeTitles);\r\n    })\r\n  }\r\n\r\n  getOffices(candidates: CandidateNavigation[], officeTitles: string[]) {\r\n    const offices = officeTitles.map(officeTitle => {\r\n      let seatsWithCandidates = null;\r\n\r\n      let candidatesForOffice: CandidateNavigation[] = candidates\r\n        .filter(candidate => candidate.officeType === officeTitle);\r\n\r\n      const hasSeats: boolean = candidatesForOffice.some(candidate => candidate.seat !== null);\r\n\r\n      if (hasSeats) {\r\n        const seatNames: string[] = candidatesForOffice.map(candidate => candidate.seat.name);\r\n\r\n        const distinctSeatNames: string[] = [... new Set(seatNames)].sort(); // remove duplicates\r\n        seatsWithCandidates = distinctSeatNames\r\n          .map(seatName => ({\r\n            title: `${this.seatType} ${seatName}`,\r\n            route: `${officeTitle}_${this.seatType}-${seatName}`.toLowerCase().split(' ').join('-'),\r\n            candidates: candidatesForOffice.filter(candidate => candidate.seat.name === seatName),\r\n            hasSeats: false,\r\n            seats: null,\r\n        }));\r\n      }\r\n\r\n      return {\r\n        title: officeTitle,\r\n        route: officeTitle.toLowerCase().split(' ').join('-'),\r\n        candidates: candidatesForOffice,\r\n        hasSeats,\r\n        seats: seatsWithCandidates,\r\n      }\r\n    });\r\n\r\n    return offices;\r\n  }\r\n\r\n  setSelectedOffice(officeTitle: string) {\r\n    this.selectedOffice = officeTitle;\r\n  }\r\n  setSelectedSeat(seatName: string) {\r\n    this.selectedSeatName = seatName;\r\n  }\r\n  setSelectedCandidate(candidateId: string) {\r\n    this.selectedCandidateId = candidateId;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "routeLink",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": [],
            "extends": "CandidateNavigation"
        },
        {
            "name": "CandidateTree",
            "id": "interface-CandidateTree-32cd8119131c5916f178848d0e646cbf",
            "file": "src/app/candidate.ts",
            "type": "interface",
            "sourceCode": "export interface Candidate {\r\n    name: string;\r\n    title: string;\r\n    raised: string;\r\n    donors: string;\r\n}\r\n\r\nexport interface CandidateTree {\r\n    title: string;\r\n    name: string;\r\n    candidates: Record<string, string>;\r\n}\r\n",
            "properties": [
                {
                    "name": "candidates",
                    "type": "Record<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "DonationsByGroup",
            "id": "interface-DonationsByGroup-28401e49a87d627fbaeffd80b90d35f7",
            "file": "src/app/vv-charts/interfaces/donationsByGroup.ts",
            "type": "interface",
            "sourceCode": "interface Group {\r\n  name: string,\r\n  amount: number,\r\n  percent: number,\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n",
            "properties": [
                {
                    "name": "groups",
                    "type": "Array<Group>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "Group",
            "id": "interface-Group-28401e49a87d627fbaeffd80b90d35f7",
            "file": "src/app/vv-charts/interfaces/donationsByGroup.ts",
            "type": "interface",
            "sourceCode": "interface Group {\r\n  name: string,\r\n  amount: number,\r\n  percent: number,\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "percent",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "OutsideMoney",
            "id": "interface-OutsideMoney-ff24c038fc3eafb9f9914f37c1364754",
            "file": "src/app/vv-charts/interfaces/outsideMoney.ts",
            "type": "interface",
            "sourceCode": "export interface OutsideMoney {\r\n  id: string;\r\n  support: number;\r\n  oppose: number;\r\n  scale?: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "oppose",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "scale",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "support",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "RaisedInOut",
            "id": "interface-RaisedInOut-0dbd08c70d54f84dff048f68ffd87033",
            "file": "src/app/vv-charts/interfaces/raisedInOut.ts",
            "type": "interface",
            "sourceCode": "export interface RaisedInOut {\r\n  id: string;\r\n  inside: number;\r\n  outside: number;\r\n  areaName: string; // Example: 'City of San Diego'\r\n  jurisdiction: string; // Example: 'City' || 'District'\r\n  jurisdictionSuffix?: string; // Examples: '1', '5'\r\n}\r\n",
            "properties": [
                {
                    "name": "areaName",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "inside",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "jurisdiction",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "jurisdictionSuffix",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "outside",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CandidateDataService",
            "id": "injectable-CandidateDataService-be08c8c3e876eb294fac6fef7972e74c",
            "file": "src/app/services/candidate-data.service.ts",
            "properties": [
                {
                    "name": "areaName",
                    "defaultValue": "'City of San Diego'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "CandidateStore",
                    "type": "CandidateStoreService",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "defaultJurisdiction",
                    "defaultValue": "'City'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        112
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCandidateCards",
                    "args": [
                        {
                            "name": "office",
                            "type": "string",
                            "optional": true
                        },
                        {
                            "name": "seat",
                            "type": "string",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateCard>",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "office",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "seat",
                            "type": "string",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCandidates",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CandidateNavigation>",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "getDonationsByGroupChart",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<DonationsByGroup>",
                    "typeParameters": [],
                    "line": 110,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOutsideMoneyChart",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<OutsideMoney>",
                    "typeParameters": [],
                    "line": 95,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRaisedInOutChart",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<RaisedInOut>",
                    "typeParameters": [],
                    "line": 77,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable, } from 'rxjs';\r\nimport { map, toArray, mergeMap, filter, } from 'rxjs/operators';\r\n\r\n/**\r\n * candidate-data.service: This service obtains data from the candidate-store.service and \r\n *  provides the application with access to the data. This service is intended to be used \r\n *  as an intermediatory for accessing the source data used in the application. Data \r\n *  provided by this service is in the form of observables that match specific interfaces.\r\n * \r\n */\r\n\r\nimport { CandidateStoreService } from './candidate-store.service';\r\n\r\nimport { CandidateNavigation } from '../interfaces/candidateNavigation'\r\nimport { CandidateCard } from '../interfaces/candidateCard';\r\n\r\nimport { RaisedInOut } from '../vv-charts/interfaces/raisedInOut';\r\nimport { OutsideMoney } from '../vv-charts/interfaces/outsideMoney';\r\nimport { DonationsByGroup } from '../vv-charts/interfaces/donationsByGroup';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateDataService {\r\n  private areaName = 'City of San Diego';\r\n  private defaultJurisdiction = 'City';\r\n\r\n  constructor(public CandidateStore: CandidateStoreService) { }\r\n\r\n  getCandidates(): Observable<CandidateNavigation> {\r\n    \r\n    return this.CandidateStore.getCandidateList().pipe(\r\n      toArray(),\r\n      mergeMap(candidates => {\r\n        return candidates.sort((firstCandidate, secondCandidate) => {\r\n          const firstCandidateName = firstCandidate.fullName.toLowerCase();\r\n          const secondCandidateName = secondCandidate.fullName.toLowerCase();\r\n    \r\n          if (firstCandidateName < secondCandidateName) return -1;\r\n          if (firstCandidateName > secondCandidateName) return 1;\r\n          return 0;\r\n        });\r\n      }),\r\n    )\r\n\r\n  }\r\n\r\n  getCandidateCards(office?: string, seat?: string): Observable<CandidateCard> {\r\n\r\n    return this.getCandidates().pipe(\r\n      filter(candidate => \r\n        office ? candidate.officeType.toLowerCase() === office.toLowerCase() : true\r\n      ),\r\n      filter(candidate => \r\n        seat ? candidate.seat.name.toLowerCase() === seat.toLowerCase() : true\r\n      ),\r\n      mergeMap(candidate => this.CandidateStore.getCandidateExpandedData(candidate.id).pipe(\r\n        map(expandedData => ({candidate, expandedData}))\r\n      )),\r\n      mergeMap( ({candidate, expandedData})  => this.CandidateStore.getCandidateImageUrl(candidate.id).pipe(\r\n        map(imageUrl => ({candidate, expandedData, imageUrl}))\r\n      )),\r\n      map( ({candidate, expandedData, imageUrl}) => ({\r\n        id: candidate.id,\r\n        name: candidate.fullName,\r\n        description: expandedData['description'],\r\n        raised: Number(expandedData['raised vs spent'][0]['Raised']),\r\n        donors: Number(expandedData['raised vs spent'][0]['Donors']),\r\n        candidateImgURL: imageUrl,\r\n      }))\r\n    );\r\n\r\n  }\r\n\r\n  getRaisedInOutChart(id: string): Observable<RaisedInOut> {\r\n\r\n    return this.CandidateStore.getCandidate(id).pipe(\r\n      mergeMap(candidate => this.CandidateStore.getCandidateExpandedData(candidate.id).pipe(\r\n        map(expandedData => ({candidate, expandedData}))\r\n      )),\r\n      map( ({candidate, expandedData}) => ({\r\n        id: candidate.id,\r\n        inside: Number(expandedData[\"in vs out district\"][0]['in']),\r\n        outside: Number(expandedData[\"in vs out district\"][0]['out']),\r\n        areaName: this.areaName,\r\n        jurisdiction: candidate?.seat ? candidate.seat.type : this.defaultJurisdiction,\r\n        jurisdictionSuffix: candidate?.seat?.name,\r\n      }))\r\n    );\r\n\r\n  }\r\n\r\n  getOutsideMoneyChart(id: string): Observable<OutsideMoney>  {\r\n\r\n    return this.CandidateStore.getCandidate(id).pipe(\r\n      mergeMap(candidate => this.CandidateStore.getCandidateExpandedData(candidate.id).pipe(\r\n        map(expandedData => ({candidate, expandedData}))\r\n      )),\r\n      map( ({candidate, expandedData}) => ({\r\n        id: candidate.id,\r\n        support: Number(expandedData[\"oppose\"]),\r\n        oppose: Number(expandedData[\"support\"])\r\n      }))\r\n    );\r\n\r\n  }\r\n\r\n  getDonationsByGroupChart(id: string): Observable<DonationsByGroup> {\r\n\r\n    return this.CandidateStore.getCandidate(id).pipe(\r\n      mergeMap(candidate => this.CandidateStore.getCandidateExpandedData(candidate.id).pipe(\r\n        map(expandedData => ({candidate, expandedData}))\r\n      )),\r\n      map( ({candidate, expandedData}) => {\r\n        const groups = Object.values(expandedData[\"by industry\"][0]).map(group => \r\n          ({\r\n            name: group[0],\r\n            amount: Number(group[1]),\r\n            percent:Number( group[2])\r\n          })\r\n        );\r\n\r\n        return { id: candidate.id, groups }\r\n      })\r\n    );\r\n\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "CandidateStore",
                        "type": "CandidateStoreService"
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "CandidateStore",
                        "type": "CandidateStoreService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CandidateService",
            "id": "injectable-CandidateService-fbca2523ed5a375084f8cf8ad11ab017",
            "file": "src/app/services/candidate.service.ts",
            "properties": [
                {
                    "name": "http",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getAll",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 37
                },
                {
                    "name": "getCampaignTotals",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 14
                },
                {
                    "name": "getCampaignTotalsByOffice",
                    "args": [
                        {
                            "name": "office",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 31,
                    "jsdoctags": [
                        {
                            "name": "office",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCityAttorneys",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 74
                },
                {
                    "name": "getCityCouncilorsByDistrict",
                    "args": [
                        {
                            "name": "districtNumber",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 83,
                    "jsdoctags": [
                        {
                            "name": "districtNumber",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLastUpdated",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 93
                },
                {
                    "name": "getMayors",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 65
                },
                {
                    "name": "getNumberOfCandidates",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 41
                },
                {
                    "name": "getNumberOfCandidatesByOffice",
                    "args": [
                        {
                            "name": "office",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 58,
                    "jsdoctags": [
                        {
                            "name": "office",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { CandidateTree } from '../candidate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CandidateService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  getCampaignTotals(): Observable<any> {\r\n    const campaignTotalsFilePath = \"assets/candidates/2020/campaign_race_totals.json\";\r\n\r\n    const campaignTotals = this.http.get<any>(campaignTotalsFilePath)\r\n      .pipe( // transform the property names used from those in the json file\r\n        map(result => {\r\n          return {\r\n            'mayor': result['mayor'],\r\n            'cityAttorney': result['city attorney'],\r\n            'cityCouncil': result['city council']\r\n          }\r\n        })\r\n      );\r\n\r\n    return campaignTotals;\r\n  }\r\n\r\n  getCampaignTotalsByOffice(office: string): Observable<any> {\r\n    return this.getCampaignTotals().pipe(\r\n      map(offices => offices[office])\r\n    )\r\n  }\r\n\r\n  getAll() {\r\n    return this.http.get(\"assets/candidates/2020/candidates.json\").toPromise();\r\n  }\r\n\r\n  getNumberOfCandidates(): Observable<any> {\r\n    const campaignCandidateTotalsFilePath = \"assets/candidates/2020/campaign_candidate_totals.json\";\r\n\r\n    const candidateCounts = this.http.get<any>(campaignCandidateTotalsFilePath)\r\n      .pipe( // transform the property names used from those in the json file\r\n        map(result => {\r\n          return {\r\n            'mayor': result['mayor'],\r\n            'cityAttorney': result['city attorney'],\r\n            'cityCouncil': result['city council']\r\n          }\r\n        })\r\n      );\r\n\r\n    return candidateCounts;\r\n  }\r\n\r\n  getNumberOfCandidatesByOffice(office: string): Observable<any> {\r\n    return this.getNumberOfCandidates().pipe(\r\n      map(offices => offices[office])\r\n    )\r\n  }\r\n\r\n  // Mayoral Candidates\r\n  getMayors() {\r\n    return this.getAll().then(\r\n      (all: Record<string, CandidateTree>) => Promise.all(\r\n        Object.values(all[\"mayor\"].candidates).map(url => this.http.get(url).toPromise())\r\n      )\r\n    );\r\n  }\r\n\r\n  // City Attorney Candidates\r\n  getCityAttorneys() {\r\n    return this.getAll().then(\r\n      (all: Record<string, CandidateTree>) => Promise.all(\r\n        Object.values(all[\"city-attorney\"].candidates).map(url => this.http.get(url).toPromise())\r\n      )\r\n    );\r\n  }\r\n\r\n  // City Council Candidates\r\n  getCityCouncilorsByDistrict(districtNumber: string) {\r\n    let districtName = `city-council-district-${districtNumber}`;\r\n\r\n    return this.getAll().then(\r\n      (all: Record<string, CandidateTree>) => Promise.all(\r\n        Object.values(all[districtName].candidates).map(url => this.http.get(url).toPromise())\r\n      )\r\n    );\r\n  }\r\n\r\n  getLastUpdated(): Observable<any> {\r\n    const campaignTotalsFilePath = \"assets/candidates/2020/campaign_race_totals.json\";\r\n\r\n    const lastUpdate = this.http.get<any>(campaignTotalsFilePath)\r\n      .pipe( // transform the property names used from those in the json file\r\n        map(result => result[\"last update\"])\r\n      );\r\n\r\n    return lastUpdate;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CandidateStoreService",
            "id": "injectable-CandidateStoreService-13115dd927c729ec725c421c798b4889",
            "file": "src/app/services/candidate-store.service.ts",
            "properties": [
                {
                    "name": "defaultImagePath",
                    "defaultValue": "'assets/candidate-card/profile.png'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "http",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCandidate",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateNavigation>",
                    "typeParameters": [],
                    "line": 51,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCandidateExpandedData",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateJSON>",
                    "typeParameters": [],
                    "line": 59,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCandidateImageUrl",
                    "args": [
                        {
                            "name": "id",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<string>",
                    "typeParameters": [],
                    "line": 68,
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCandidateList",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<CandidateNavigation>",
                    "typeParameters": [],
                    "line": 38
                },
                {
                    "name": "hasCalculationsPath",
                    "args": [
                        {
                            "name": "navigationItem",
                            "type": "CandidateNavigation"
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 31,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "navigationItem",
                            "type": "CandidateNavigation",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of, from, iif } from 'rxjs';\r\nimport { first, map, mergeMap } from 'rxjs/operators';\r\n\r\n/**\r\n * candidate-store.service: Provides access to data sources so that the dependents of this service \r\n *  can use the data without needing to know its source. Current data sources are imported .ts files \r\n *  and JSON files. Future sources will include data from an API. Data provided by this service is \r\n *  in the form of observables that match specific interfaces. The application's components should\r\n *  not directly access this service. This service is intended to be primarily accessed by the \r\n *  candidate-data.service.\r\n *  \r\n */\r\n\r\nimport { CandidateNavigation } from '../interfaces/candidateNavigation';\r\nimport { CandidateJSON } from '../interfaces/candidateJSON';\r\n\r\nimport { candidateNavigationItems } from '../../assets/candidates/mock-candidateNavigationItems';\r\nimport { candidateAssets } from '../../assets/candidates/mock-candidateAssetPaths';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateStoreService {\r\n  private defaultImagePath = 'assets/candidate-card/profile.png';\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  private hasCalculationsPath(navigationItem: CandidateNavigation): boolean {\r\n\r\n    return candidateAssets\r\n      .some(asset => asset.id === navigationItem.id && asset.calculationsPath.length > 0);\r\n\r\n  }\r\n\r\n  getCandidateList(): Observable<CandidateNavigation> {\r\n\r\n    return from(candidateNavigationItems).pipe(\r\n      mergeMap(\r\n        navigationItem => iif(\r\n          () => this.hasCalculationsPath(navigationItem),\r\n          of(navigationItem),\r\n        )\r\n      ),\r\n    );\r\n\r\n  }\r\n\r\n  getCandidate(id: string): Observable<CandidateNavigation> {\r\n    \r\n    return from(candidateNavigationItems).pipe(\r\n      first(candidate => candidate.id === id),\r\n    );\r\n\r\n  }\r\n\r\n  getCandidateExpandedData(id: string): Observable<CandidateJSON> {\r\n\r\n    return from(candidateAssets).pipe(\r\n      first(candidate => candidate.id === id),\r\n      mergeMap(candidate => this.http.get<CandidateJSON>(candidate.calculationsPath)),\r\n    );\r\n\r\n  }\r\n\r\n  getCandidateImageUrl(id: string): Observable<string> {\r\n\r\n    return from(candidateAssets).pipe(\r\n      first(candidate => candidate.id === id),\r\n      map(candidate => \r\n        candidate.imagePath.length > 0 \r\n          ? candidate.imagePath \r\n          : this.defaultImagePath\r\n      ),\r\n    );\r\n\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SidenavService",
            "id": "injectable-SidenavService-26112954d9766ad0de48381817f05b9d",
            "file": "src/app/services/sidenav.service.ts",
            "properties": [
                {
                    "name": "candidateKeyEmittedFromSidenav$",
                    "defaultValue": "this.emitCandidateKeyFromSidenav.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "candidateNameEmittedFromCard$",
                    "defaultValue": "this.emitCandidateNameFromCard.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "candidateTypeEmittedFromSplash$",
                    "defaultValue": "this.emitCandidateTypeFromSplash.asObservable()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "emitCandidateKeyFromSidenav",
                    "defaultValue": "new Subject<any>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "emitCandidateNameFromCard",
                    "defaultValue": "new Subject<any>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "emitCandidateTypeFromSplash",
                    "defaultValue": "new Subject<any>()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "emitCandidateKeySidenav",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitCandidateNameCard",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitCandidateTypeSplash",
                    "args": [
                        {
                            "name": "key",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidenavService {\r\n  emitCandidateKeyFromSidenav = new Subject<any>();\r\n  emitCandidateNameFromCard = new Subject<any>();\r\n  emitCandidateTypeFromSplash = new Subject<any>();\r\n\r\n  candidateKeyEmittedFromSidenav$ = this.emitCandidateKeyFromSidenav.asObservable();\r\n  candidateNameEmittedFromCard$ = this.emitCandidateNameFromCard.asObservable();\r\n  candidateTypeEmittedFromSplash$ = this.emitCandidateTypeFromSplash.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  emitCandidateKeySidenav(key: string) {\r\n    this.emitCandidateKeyFromSidenav.next(key);\r\n  }\r\n\r\n  emitCandidateNameCard(key: string) {\r\n    this.emitCandidateNameFromCard.next(key);\r\n  }\r\n\r\n  emitCandidateTypeSplash(key: string) {\r\n    this.emitCandidateTypeFromSplash.next(key);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 14
            },
            "type": "injectable"
        }
    ],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-b37de36ad1c2262e6765c9da49016e22",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  navigateTo() {\r\n    return browser.get(browser.baseUrl) as Promise<any>;\r\n  }\r\n\r\n  getTitleText() {\r\n    return element(by.css('app-root h1')).getText() as Promise<string>;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-cffad1970b8f0f82bb2bb9dfa6bd6390",
            "file": "src/app/components/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [
                "./about.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n@import \"../../styles/global\";\r\n\r\n.about_container{\r\n    padding:20px 40px 0px 30px;\r\n}\r\n.about{\r\n    margin: 20px auto 20px auto;\r\n    text-align:center;\r\n    padding:40px 40px 40px 40px;\r\n    font-weight: 100;\r\n    box-shadow: $vvshadow;\r\n    color:#4E4E4E;\r\n    background-color: #fff;\r\n    h1{\r\n      margin: 0px;\r\n    }\r\n    p{\r\n      margin:10px 0px 20px 0px;\r\n      line-height: 1.4;\r\n    }\r\n    .about_caption{\r\n        max-width: 650px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n\r\n    .orgs{\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        column-gap: 40px;\r\n        margin: 40px auto 40px auto;\r\n        max-width: 870px;\r\n        row-gap: 20px;\r\n        a{\r\n            font-weight: bold;\r\n        }\r\n        p{ \r\n            font-size: 14px;\r\n        }\r\n        img{\r\n            margin-bottom: 20px;\r\n            margin-top: 20px;\r\n            max-width: 100%;\r\n        }\r\n    }\r\n\r\n    .transparent{\r\n        display:grid;\r\n        grid-template-columns: 1fr 425px;\r\n        padding:0px;\r\n\r\n        .transparent_copy{\r\n\r\n            text-align: left;\r\n            align-self: center;\r\n            \r\n        }\r\n\r\n        h1{\r\n            text-align: left !important;\r\n            align-self: center;\r\n        }\r\n\r\n        .transparent_photo{\r\n            align-self: end;\r\n            justify-self: end;\r\n            img{\r\n                transform: translate(40px,45px);\r\n            }\r\n        }\r\n        .transparent_photo_mobile{\r\n            display: none;\r\n            visibility: hidden;\r\n        }\r\n    }\r\n\r\n   \r\n    \r\n\r\n\r\n    @media only screen and (max-width: 1000px) {\r\n        .orgs{\r\n            grid-template-columns: 1fr !important;\r\n            max-width: 600px;\r\n        }\r\n        .transparent{\r\n     \r\n            grid-template-columns: 1fr;\r\n\r\n            .transparent_copy{\r\n\r\n                text-align: center;\r\n                \r\n            }\r\n            \r\n            .transparent_photo{\r\n                display: none;\r\n                visibility: hidden;\r\n            }\r\n            .transparent_photo_mobile{\r\n                display: inherit;\r\n                visibility: visible;\r\n                align-self: center;\r\n                justify-self: center;\r\n                img{\r\n                    transform: translate(0px,40px);\r\n                    max-height: 400px;\r\n                    width:auto;\r\n                    max-width: 100%;\r\n                }\r\n\r\n            }\r\n\r\n            h1{\r\n                text-align: center !important;\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./about.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"about_container\">\r\n  <div class=\"about\">\r\n    <h1>About Us</h1>\r\n    <p class=\"about_caption\">We are a coalition of non-partisan organizations working together to create transparency for campaign contributions and expenditures with local San Diego candidates.\r\n    </p>\r\n    <div class=\"orgs\">\r\n        <div>\r\n          <a href=\"https://opensandiego.org/\"><img src=\"../../../assets/about/osd.svg\" width=\"auto\" height=\"50\" alt=\"Open San Diego\"/></a>\r\n          <p><a href=\"https://opensandiego.org/\">Open San Diego</a> is a group of San Diegans who believe data and technology can better serve citizens, sparking a more vibrant democracy and civic life. We are a brigade of the national, non-partisan Code for America, leveraging their resources, but keenly focused on our improving local issues here at home.</p>\r\n        </div>\r\n        <div>\r\n          <a href=\"https://represent.us/\"><img src=\"../../../assets/about/repus.svg\" width=\"auto\" height=\"50\"  alt=\"Represent Us\"/></a>\r\n          <p><a href=\"https://represent.us/\">RepresentUs</a> brings together conservatives, progressives, and everyone in between to pass powerful anti-corruption laws that stop political bribery, end secret money, and fix our broken elections.</p>\r\n        </div>\r\n        <div>\r\n          <a href=\"https://www.lwv.org/\"><img src=\"../../../assets/about/lwv.svg\" width=\"auto\" height=\"50\" alt=\"The League of Women Voters\"/></a>\r\n          <p><a href=\"https://www.lwv.org/\">The League of Women Voters</a> challenges all efforts and tactics that threaten our democracy and limit the ability of voters to exercise their right to vote.</p>\r\n        </div>\r\n        <div>\r\n          <a href=\"https://www.commoncause.org/\"><img src=\"../../../assets/about/commoncause.svg\" width=\"auto\" height=\"50\"  alt=\"Common Cause\"/></a>\r\n          <p><a href=\"https://www.commoncause.org/\">Common Cause</a> is made up of more than 1 million powerful, fearless, ordinary Americans working together to build a democracy that works for us all.</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"transparent\">\r\n      <div class=\"transparent_copy\">\r\n        <h1>We Fight for Transparency</h1>\r\n        <p>Currently, campaign finance information for candidates running for local offices as well as money spent by outside groups to support or defeat them is not readily accessible to the public. When the amount of money being spent as well as the source is not known, voters feel disenfranchised by the election process. Making campaign finance data easy to find and read will increase public trust and confidence in the election process.</p>\r\n     </div>\r\n     <div class=\"transparent_photo\">\r\n      <img src=\"../../../assets/about/VV_FooterBG-AboutUs.png\" width=\"100%\" height=\"auto\" alt=\"Voter\"/>\r\n     </div>\r\n     <div class=\"transparent_photo_mobile\">\r\n      <img src=\"../../../assets/about/VV_FooterBG-AboutUs-Mobile.png\" width=\"auto\" height=\"auto\" alt=\"Voter\"/>\r\n     </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-ed70cef04d923be5933c6b1146af4bf0",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'sdvv-frontend'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'sdvv-frontend';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-home></app-home>"
        },
        {
            "name": "CandidateCardComponent",
            "id": "component-CandidateCardComponent-4f939e1df248d5601918a8a85c428750",
            "file": "src/app/components/candidate-card/candidate-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-candidate-card",
            "styleUrls": [
                "./candidate-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./candidate-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "candidate",
                    "line": 11,
                    "type": "any"
                },
                {
                    "name": "candidateImg",
                    "line": 12,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "emitCandidateData",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 13,
                    "type": "EventEmitter"
                },
                {
                    "name": "emitCandidateImage",
                    "defaultValue": "new EventEmitter<any>()",
                    "line": 14,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24
                },
                {
                    "name": "outputCandidateData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SidenavService } from '../../services';\r\n\r\n@Component({\r\n  selector: 'app-candidate-card',\r\n  templateUrl: './candidate-card.component.html',\r\n  styleUrls: ['./candidate-card.component.scss']\r\n})\r\n\r\nexport class CandidateCardComponent implements OnInit {\r\n  @Input() candidate: any;\r\n  @Input() candidateImg: string;\r\n  @Output() private emitCandidateData = new EventEmitter<any>();\r\n  @Output() private emitCandidateImage = new EventEmitter<any>();\r\n\r\n  constructor(private sidenavService: SidenavService) {\r\n    sidenavService.candidateKeyEmittedFromSidenav$.subscribe(res => {\r\n      if (res === this.candidate['candidate name']) {\r\n        this.outputCandidateData();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  outputCandidateData() {\r\n    this.emitCandidateData.emit(this.candidate);\r\n    this.emitCandidateImage.emit(this.candidateImg);\r\n    this.sidenavService.emitCandidateNameCard(this.candidate['candidate name']);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n.candidate {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    .candidate-image-container {\r\n        height: 125px;\r\n        width: 125px;\r\n    }\r\n    .candidate-image {\r\n        display: flex;\r\n        height: 125px;\r\n        width: 125px;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        border: 1px solid $vvbackground;\r\n        \r\n        img {\r\n            object-fit: cover;\r\n            object-position: center top;\r\n            width: 100%;\r\n            height: auto;\r\n            background-color: $vvbackground;\r\n        }\r\n    }\r\n}\r\n\r\n.candidate-card {\r\n    text-align: center;\r\n    height: 320px;\r\n    margin: 10px;\r\n    padding: 15px 25px 15px 25px;\r\n    background: #fff;\r\n    box-shadow: $vvshadow;\r\n    width: 180px !important;\r\n    h1 {\r\n        font-size: 20px;\r\n        color: $vvdarkblue;\r\n    }\r\n    h2 {\r\n        font-weight: normal;\r\n        font-size: 12px;\r\n        color: $vvgrey;\r\n        margin: 5px 0px 10px 0px;\r\n    }\r\n    h3 {\r\n        font-size: 18px;\r\n        color: $vvdarkgrey;\r\n    }\r\n    .first{\r\n        margin-top:10px;\r\n    }\r\n\r\n    .candidate-numbers {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom:10px;\r\n        div {\r\n            padding: 0 6px;\r\n            h2, h3{\r\n                margin: 1px 0;\r\n            }\r\n        }\r\n        .raised h3 {\r\n            color: $vvgreen;\r\n        }\r\n    } \r\n    .candidate-button {\r\n        @include button-styles;\r\n        padding: 0 16px;\r\n        \r\n    }\r\n    .candidate-button:hover {\r\n        background-color: $vvlightblue;\r\n        text-decoration: none;\r\n    }\r\n}\r\n",
                    "styleUrl": "./candidate-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "sidenavService",
                        "type": "SidenavService"
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "sidenavService",
                        "type": "SidenavService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"candidate-card p-grid p-justify-center p-align-center p-nogutter\">\r\n\r\n  <div class=\"candidate p-col-12\">\r\n    <div class=\"candidate-image-container\">\r\n      <div class=\"candidate-image\">\r\n        <img [src]=\"candidateImg\" [alt]=\"candidate['candidate name']\" onError=\"this.src='../../../assets/candidate-card/profile.png'\">\r\n      </div>\r\n    </div>\r\n\r\n    <h1 class=\"first\">{{candidate.first}}</h1>\r\n    <h1>{{candidate.last}}</h1>\r\n    <h2>{{candidate.description}}</h2>\r\n  </div>\r\n\r\n  <div class=\"candidate-numbers\">\r\n    <div class=\"raised\">\r\n      <h2>Raised</h2>\r\n      <h3>{{candidate[\"raised vs spent\"][0].Raised | currency : 'USD' : 'symbol' : '1.0-0'}}</h3>\r\n    </div>\r\n\r\n    <div class=\"donors\">\r\n      <h2>Donors</h2>\r\n      <h3>{{candidate[\"raised vs spent\"][0].Donors}}</h3>\r\n    </div>\r\n  </div>\r\n\r\n  <button class=\"candidate-button\" mat-flat-button (click)=\"outputCandidateData()\">See Details</button>\r\n\r\n</div>\r\n"
        },
        {
            "name": "CandidateCardExpandedComponent",
            "id": "component-CandidateCardExpandedComponent-2bb9c8f739e5c5a1d67bd661170b8be0",
            "file": "src/app/components/candidate-card-expanded/candidate-card-expanded.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-candidate-card-expanded",
            "styleUrls": [
                "./candidate-card-expanded.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./candidate-card-expanded.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "candidate",
                    "line": 264,
                    "type": ""
                },
                {
                    "name": "candidateImg",
                    "line": 15,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "isExpanded",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_c",
                    "type": "Candidate",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "barChartData",
                    "defaultValue": "[\r\n    {\r\n      data: [150000],\r\n      label: 'Raised',\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(40, 154, 88, 0.8)',\r\n      borderColor: 'rgba(40, 154, 88, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(40, 154, 88, 1)',\r\n      hoverBorderColor:'rgba(40, 154, 88, 1)',\r\n\r\n    },\r\n    {\r\n      data: [150000],\r\n      label: 'Spent',\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(255, 44, 25, 0.8)',\r\n      borderColor: 'rgba(255, 44, 25, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(255, 44, 25, 1)',\r\n      hoverBorderColor:'rgba(255, 44, 25, 1)',\r\n    },\r\n  ]",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "barChartOptions",
                    "defaultValue": "{\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    \r\n\r\n    title: {\r\n      display: true,\r\n      fontSize: 15,\r\n      fontColor: '#16375d',\r\n      fontStyle: 'bold',\r\n    },\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    plugins: {\r\n      datalabels: {\r\n        anchor: 'end',\r\n        align: 'end',\r\n        textAlign: 'center',\r\n        color: '#4e4e4e',\r\n        \r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n        \r\n\r\n        formatter: (val, ctx) => {\r\n          return ctx.dataset.label === 'Raised' ? `Raised\\n$${this.mNumberFormatter(val)}` : `Spent\\n$${this.mNumberFormatter(val)}`;\r\n        },\r\n      },\r\n    },\r\n\r\n    scales: {\r\n      xAxes: [{\r\n        \r\n        ticks: {\r\n          min: 0,\r\n        },\r\n      }],\r\n\r\n      yAxes: [{\r\n        display: false,\r\n        ticks: {\r\n          suggestedMin: 0,\r\n          suggestedMax: 3000000\r\n        },\r\n      }],\r\n    },\r\n  }",
                    "type": "ChartOptions",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "barChartType",
                    "defaultValue": "'bar'",
                    "type": "ChartType",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "chartPlugins",
                    "defaultValue": "[pluginDataLabels]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "doughnutChartColors",
                    "defaultValue": "[\r\n    { backgroundColor: ['#3392ff', '#bfd63b'] },\r\n  ]",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "doughnutChartData",
                    "defaultValue": "[\r\n    {\r\n      data: [5000, 1200],\r\n      \r\n    }\r\n  ]",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "doughnutChartOptions",
                    "defaultValue": "{\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    cutoutPercentage:60,\r\n    animation:{animateRotate:true},\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    plugins: {\r\n      datalabels: {\r\n        anchor: 'start',\r\n        align: 'start',\r\n        color: '#4e4e4e',\r\n        textAlign:'center',\r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n          \r\n        },\r\n\r\n        formatter: (val, ctx) => {\r\n          return ctx.dataIndex === 0 ? `In\\n$${this.mNumberFormatter(val)}` : `Out\\n$${this.mNumberFormatter(val)}`;\r\n        },\r\n      },\r\n    },\r\n  }",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "doughnutChartType",
                    "defaultValue": "'doughnut'",
                    "type": "ChartType",
                    "optional": false,
                    "description": "",
                    "line": 113
                },
                {
                    "name": "faQuestionCircle",
                    "defaultValue": "faQuestionCircle",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "faTimesCircle",
                    "defaultValue": "faTimesCircle",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "stackedHorizontalBarChartData",
                    "defaultValue": "[\r\n    {\r\n      data: [200000],\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(0, 119, 255, 0.8)',\r\n      borderColor: 'rgba(0, 119, 255, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0, 119, 255, 1)',\r\n      hoverBorderColor:'rgba(0, 119, 255, 1)',\r\n\r\n      datalabels: {\r\n        anchor: 'end',\r\n        align: 'end',\r\n        textAlign: 'left',\r\n        color: '#ffffff',\r\n\r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n        \r\n        formatter: (val) => `Support\\n$${this.mNumberFormatter(val)}`,\r\n      },\r\n    },\r\n\r\n    {\r\n      data: [5000],\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(255, 113, 25, 0.8)',\r\n      borderColor: 'rgba(255, 113, 25, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(255, 113, 25, 1)',\r\n      hoverBorderColor:'rgba(255, 113, 25, 1)',\r\n\r\n      datalabels: {\r\n        anchor: 'end',\r\n        align: 'end',\r\n        textAlign: 'left',\r\n        color: '#ffffff',\r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n\r\n        formatter: (val) => `Oppose\\n$${this.mNumberFormatter(val)}`,\r\n      },\r\n    },\r\n   \r\n  ]",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 161
                },
                {
                    "name": "stackedHorizontalBarChartOptions",
                    "defaultValue": "{\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n\r\n    layout: {\r\n      padding: {\r\n        left: 0,\r\n        right: 20,\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n        \r\n        ticks: {\r\n          suggestedMin: 0,\r\n          suggestedMax: 900000\r\n        }\r\n      }],\r\n\r\n      yAxes: [{\r\n        display: false,\r\n        gridLines: {\r\n          color: \"#727272\",\r\n        },\r\n        ticks: {\r\n          min: 0,\r\n        }\r\n\r\n      }],\r\n    },\r\n  }",
                    "type": "ChartOptions",
                    "optional": false,
                    "description": "",
                    "line": 216
                },
                {
                    "name": "stackedHorizontalBarChartType",
                    "defaultValue": "'horizontalBar'",
                    "type": "ChartType",
                    "optional": false,
                    "description": "",
                    "line": 160
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 308
                },
                {
                    "name": "commaNumberFormatter",
                    "args": [
                        {
                            "name": "num",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 304,
                    "jsdoctags": [
                        {
                            "name": "num",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ConvertToInt",
                    "args": [
                        {
                            "name": "val",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 313,
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "currencyToNumber",
                    "args": [
                        {
                            "name": "currencyString",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 294,
                    "jsdoctags": [
                        {
                            "name": "currencyString",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "mNumberFormatter",
                    "args": [
                        {
                            "name": "num",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 299,
                    "jsdoctags": [
                        {
                            "name": "num",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setChartsData",
                    "args": [
                        {
                            "name": "c",
                            "type": "Candidate"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 271,
                    "jsdoctags": [
                        {
                            "name": "c",
                            "type": "Candidate",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import * as pluginDataLabels from 'chartjs-plugin-datalabels';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\r\nimport { Candidate } from '../../candidate';\r\nimport { Color } from 'ng2-charts';\r\n\r\nimport { faQuestionCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-candidate-card-expanded',\r\n  templateUrl: './candidate-card-expanded.component.html',\r\n  styleUrls: ['./candidate-card-expanded.component.scss']\r\n})\r\nexport class CandidateCardExpandedComponent {\r\n  @Input() candidateImg: string;\r\n  @Output() isExpanded = new EventEmitter<boolean>();\r\n\r\n  public _c: Candidate;\r\n  faQuestionCircle = faQuestionCircle;\r\n  faTimesCircle = faTimesCircle;\r\n  // All Charts\r\n  chartPlugins = [pluginDataLabels];\r\n\r\n  // Raised v. Spent Chart\r\n  barChartType: ChartType = 'bar';\r\n  barChartData: ChartDataSets[] = [\r\n    {\r\n      data: [150000],\r\n      label: 'Raised',\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(40, 154, 88, 0.8)',\r\n      borderColor: 'rgba(40, 154, 88, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(40, 154, 88, 1)',\r\n      hoverBorderColor:'rgba(40, 154, 88, 1)',\r\n\r\n    },\r\n    {\r\n      data: [150000],\r\n      label: 'Spent',\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(255, 44, 25, 0.8)',\r\n      borderColor: 'rgba(255, 44, 25, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(255, 44, 25, 1)',\r\n      hoverBorderColor:'rgba(255, 44, 25, 1)',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  barChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    \r\n\r\n    title: {\r\n      display: true,\r\n      fontSize: 15,\r\n      fontColor: '#16375d',\r\n      fontStyle: 'bold',\r\n    },\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    plugins: {\r\n      datalabels: {\r\n        anchor: 'end',\r\n        align: 'end',\r\n        textAlign: 'center',\r\n        color: '#4e4e4e',\r\n        \r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n        \r\n\r\n        formatter: (val, ctx) => {\r\n          return ctx.dataset.label === 'Raised' ? `Raised\\n$${this.mNumberFormatter(val)}` : `Spent\\n$${this.mNumberFormatter(val)}`;\r\n        },\r\n      },\r\n    },\r\n\r\n    scales: {\r\n      xAxes: [{\r\n        \r\n        ticks: {\r\n          min: 0,\r\n        },\r\n      }],\r\n\r\n      yAxes: [{\r\n        display: false,\r\n        ticks: {\r\n          suggestedMin: 0,\r\n          suggestedMax: 3000000\r\n        },\r\n      }],\r\n    },\r\n  }\r\n\r\n  // In v. Out District\r\n  doughnutChartType: ChartType = 'doughnut';\r\n  doughnutChartData: ChartDataSets[] = [\r\n    {\r\n      data: [5000, 1200],\r\n      \r\n    }\r\n  ];\r\n\r\n  doughnutChartColors: Color[] = [\r\n    { backgroundColor: ['#3392ff', '#bfd63b'] },\r\n  ];\r\n\r\n  doughnutChartOptions: any = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    cutoutPercentage:60,\r\n    animation:{animateRotate:true},\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    plugins: {\r\n      datalabels: {\r\n        anchor: 'start',\r\n        align: 'start',\r\n        color: '#4e4e4e',\r\n        textAlign:'center',\r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n          \r\n        },\r\n\r\n        formatter: (val, ctx) => {\r\n          return ctx.dataIndex === 0 ? `In\\n$${this.mNumberFormatter(val)}` : `Out\\n$${this.mNumberFormatter(val)}`;\r\n        },\r\n      },\r\n    },\r\n  }\r\n\r\n  // Oppose v. Support Chart\r\n  stackedHorizontalBarChartType: ChartType = 'horizontalBar';\r\n  stackedHorizontalBarChartData: ChartDataSets[] = [\r\n    {\r\n      data: [200000],\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(0, 119, 255, 0.8)',\r\n      borderColor: 'rgba(0, 119, 255, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0, 119, 255, 1)',\r\n      hoverBorderColor:'rgba(0, 119, 255, 1)',\r\n\r\n      datalabels: {\r\n        anchor: 'end',\r\n        align: 'end',\r\n        textAlign: 'left',\r\n        color: '#ffffff',\r\n\r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n        \r\n        formatter: (val) => `Support\\n$${this.mNumberFormatter(val)}`,\r\n      },\r\n    },\r\n\r\n    {\r\n      data: [5000],\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(255, 113, 25, 0.8)',\r\n      borderColor: 'rgba(255, 113, 25, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(255, 113, 25, 1)',\r\n      hoverBorderColor:'rgba(255, 113, 25, 1)',\r\n\r\n      datalabels: {\r\n        anchor: 'end',\r\n        align: 'end',\r\n        textAlign: 'left',\r\n        color: '#ffffff',\r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n\r\n        formatter: (val) => `Oppose\\n$${this.mNumberFormatter(val)}`,\r\n      },\r\n    },\r\n   \r\n  ];\r\n\r\n\r\n  stackedHorizontalBarChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n\r\n    layout: {\r\n      padding: {\r\n        left: 0,\r\n        right: 20,\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n        \r\n        ticks: {\r\n          suggestedMin: 0,\r\n          suggestedMax: 900000\r\n        }\r\n      }],\r\n\r\n      yAxes: [{\r\n        display: false,\r\n        gridLines: {\r\n          color: \"#727272\",\r\n        },\r\n        ticks: {\r\n          min: 0,\r\n        }\r\n\r\n      }],\r\n    },\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  get candidate() {\r\n    return this._c;\r\n  }\r\n\r\n  @Input() set candidate(c: Candidate) {\r\n    this._c = c;\r\n    // console.debug(c);\r\n    this.setChartsData(c);\r\n  }\r\n\r\n  // Setting Chart Data\r\n  setChartsData(c: Candidate) {\r\n    // Raised v. Spent\r\n    this.barChartData = [\r\n      {...this.barChartData[0], data: [this.currencyToNumber(c['raised vs spent'][0].Raised)]},\r\n      {...this.barChartData[1], data: [this.currencyToNumber(c['raised vs spent'][0].Spent)]}\r\n    ];\r\n\r\n    // In V. Out District\r\n    if (c['in vs out district']) {\r\n      this.doughnutChartData[0].data = [\r\n        this.currencyToNumber(c['in vs out district'][0].in),\r\n        this.currencyToNumber(c['in vs out district'][0].out)\r\n      ];\r\n    }\r\n\r\n    // Oppose v. Support\r\n    this.stackedHorizontalBarChartData = [\r\n      {...this.stackedHorizontalBarChartData[0], data: [this.currencyToNumber(c['support'])]},\r\n      {...this.stackedHorizontalBarChartData[1], data: [this.currencyToNumber(c['oppose'])]}\r\n    ];\r\n  }\r\n\r\n  // Convert Currency String to Number\r\n  currencyToNumber(currencyString: string) {\r\n    return Number(currencyString.replace(/[^0-9\\.-]+/g,\"\"))\r\n  }\r\n\r\n  // Adding K At The End of Values Over 9999 (i.e. 10K, 100K)\r\n  mNumberFormatter(num: number) {\r\n    return Math.abs(num) > 1e6 ? Math.sign(num)*((Math.round(num/1e4))/100) + 'M' : this.commaNumberFormatter(Math.sign(num)*Math.abs(num));\r\n  }\r\n\r\n  // Adding Comma Separators for Values Over 999\r\n  commaNumberFormatter(num: number) {\r\n    return num.toLocaleString('en');\r\n  }\r\n\r\n  close() {\r\n    this.isExpanded.emit(false);\r\n  }\r\n  \r\n  //convert string to int\r\n  ConvertToInt(val){\r\n    return parseInt(val);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n.vv-grid{\r\n    display: grid;\r\n    grid-template-columns:180px 1fr 1fr 1fr;\r\n    align-self: start;\r\n    justify-items: center;\r\n    padding:20px;\r\n    \r\n\r\n}\r\n.candidate-card-expanded {\r\n    padding: 15px 25px 15px 25px;\r\n    margin: 10px;\r\n    text-align: center;\r\n    background: #fff;\r\n    box-shadow: $vvshadow;\r\n \r\n\r\n    h1 {\r\n        font-size: 20px;\r\n        color: $vvdarkblue;\r\n    }\r\n\r\n    h2 {\r\n        font-weight: normal;\r\n        font-size: 12px;\r\n        color: $vvgrey;\r\n        margin: 5px 0px 10px 0px;\r\n    }\r\n\r\n    h3 {\r\n        font-size: 18px;\r\n        color: $vvdarkgrey;\r\n    }\r\n\r\n    i {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .title {\r\n        padding: 0;\r\n        font-size: 18px;\r\n        font-weight: bold;\r\n        color: $vvdarkblue;\r\n    }\r\n\r\n    .candidate {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        padding: 0px 0px 15px 25px;\r\n\r\n        .first{\r\n            margin-top:10px;\r\n        }\r\n      \r\n        .candidate-numbers {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            margin-bottom:10px;\r\n            div {\r\n                padding: 0 6px;\r\n                h2, h3{\r\n                    margin: 1px 0;\r\n                }\r\n            }\r\n            .raised h3 {\r\n                color: $vvgreen;\r\n            }\r\n        } \r\n\r\n\r\n        \r\n        .candidate-image-container {\r\n            height: 125px;\r\n            width: 125px;\r\n        }\r\n\r\n        .candidate-image {\r\n            display: flex;\r\n            height: 125px;\r\n            width: 125px;\r\n            border-radius: 50%;\r\n            overflow: hidden;\r\n\r\n            img {\r\n  \r\n                object-fit: cover;\r\n                object-position: center top;\r\n                width: 100%;\r\n                height: auto;\r\n                background-color: #ECEFF2;\r\n            }\r\n        }\r\n    }\r\n  \r\n    .chart-container{\r\n        position: relative; \r\n        height:20vh; \r\n        width:20vw;\r\n        margin:auto;\r\n    }\r\n\r\n    .raised-spent{\r\n        .chart-container-raised{\r\n            position: relative; \r\n            height:21vh; \r\n            width:12vw;\r\n            max-height: 200px;\r\n            margin:auto;\r\n        }\r\n        .raised-spent-footer-title,.raised-spent-footer-content{\r\n            margin:5px 0px;\r\n        }\r\n    }\r\n\r\n    .industries {\r\n        .industries-table {\r\n            width: 100%;\r\n            text-align: left;\r\n        }\r\n\r\n        .mat-cell {\r\n            font-size: 13px;\r\n            color: $vvgrey;\r\n            padding:8px;\r\n        }\r\n        \r\n        .mat-cell:nth-last-child(2), .mat-cell:last-child, \r\n        .mat-header-cell:nth-last-child(2), .mat-header-cell:last-child {\r\n            text-align: right;\r\n        }\r\n\r\n        .mat-cell:last-child {\r\n            font-size: 20px;\r\n            font-weight: bold;\r\n        }\r\n    }\r\n    .outside-money{\r\n        grid-column: 1 / 5;\r\n        border:1px solid #efefef;\r\n        margin-bottom: 10px;\r\n        padding-bottom: 30px;\r\n        justify-self: stretch;\r\n        background-color: $vvdarkgrey;\r\n        color:#fff;\r\n\r\n        .title, .helper-tip, .donors, .raised{\r\n            color:#fff;\r\n            h2, h3{\r\n                color:#fff;\r\n                margin: 0px 0px 5px 0px;\r\n            }\r\n        }\r\n\r\n\r\n        .chart-container-outside{\r\n            \r\n            height:10vh; \r\n            width:58vw;\r\n            border-left:1px solid #727272;\r\n            margin-left:40px;\r\n           \r\n            \r\n        }\r\n        \r\n        .outside-grid{\r\n            display: grid;\r\n            grid-template-columns:60vw 0.8fr;\r\n            justify-self: stretch;\r\n           \r\n\r\n            .donors{\r\n                \r\n                padding:20px 0px 20px 30px;\r\n                text-align: left;\r\n                align-self: center;\r\n            }\r\n            .raised{\r\n                padding:20px 0px 20px 30px;\r\n                text-align: left;\r\n                border-left: 1px solid #727272;\r\n                align-self: center;\r\n            }\r\n        }\r\n        \r\n\r\n    }\r\n    \r\n\r\n    .helper-tip {\r\n        color: $vvgrey;\r\n        font-size: 10px;\r\n    }\r\n\r\n    .close {\r\n        position: absolute;\r\n        top: 30px;\r\n        right: 45px;\r\n    }\r\n}\r\n\r\n.website-link {\r\n    display: flex;\r\n    justify-content: center;\r\n    vertical-align: middle;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    font-size: 14px;\r\n    color: $vvlightblue;\r\n\r\n    .mat-icon {\r\n        padding-right: 5px;\r\n    }\r\n}\r\n\r\n.full-details-btn {\r\n    @include button-styles;\r\n    padding: 0 16px;\r\n}\r\n\r\n.full-details-btn:hover {\r\n    background-color: $vvlightblue;\r\n}\r\n\r\n.divider {\r\n    width: 100%;\r\n    border: 1px solid #e4e4e4;\r\n    margin: 30px 0 10px;\r\n}\r\n\r\n.remove-border {\r\n    border: none;\r\n}\r\n\r\n\r\n\r\n// Expanded Card Adjustments for Smaller Screens\r\n@media only screen and (max-width: 1200px) {\r\n   .vv-grid{\r\n    display:block !important;\r\n   }\r\n   .in-out-district{\r\n       margin-bottom:40px;\r\n   }\r\n   .chart-container{\r\n        height:20vh !important; \r\n        width:60vw !important;\r\n    }   \r\n    .chart-container-raised{\r\n        height:25vh !important; \r\n        width:60vw !important;  \r\n    }\r\n \r\n\r\n    \r\n\r\n   \r\n \r\n}\r\n\r\n::ng-deep .mat-tooltip {\r\n    font-size: 16px;\r\n}\r\n",
                    "styleUrl": "./candidate-card-expanded.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 256
            },
            "accessors": {
                "candidate": {
                    "name": "candidate",
                    "setSignature": {
                        "name": "candidate",
                        "type": "void",
                        "args": [
                            {
                                "name": "c",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 264,
                        "jsdoctags": [
                            {
                                "name": "c",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "candidate",
                        "type": "",
                        "returnType": "",
                        "line": 260
                    }
                }
            },
            "templateData": "<div class=\"candidate-card-expanded vv-grid\">\r\n\r\n  <div>\r\n    <div class=\"candidate\">\r\n\r\n      <div class=\"candidate-image-container\">\r\n        <div class=\"candidate-image\">\r\n          <img [src]=\"candidateImg\" [alt]=\"candidate['candidate name']\" onError=\"this.src='../../../assets/candidate-card/profile.png'\">\r\n        </div>\r\n      </div>\r\n      <h1 class=\"first\">{{candidate['first']}}</h1>\r\n      <h1>{{candidate['last']}}</h1>\r\n      <h2>{{ candidate['description'] }}</h2>\r\n\r\n      <div class=\"candidate-numbers\">\r\n        <div class=\"raised\">\r\n          <h2>Raised</h2>\r\n          <h3>{{candidate[\"raised vs spent\"][0].Raised | currency : 'USD' : 'symbol' : '1.0-0'}}</h3>\r\n        </div>\r\n\r\n        <div class=\"donors\">\r\n          <h2>Donors</h2>\r\n          <h3>{{candidate[\"raised vs spent\"][0].Donors}}</h3>\r\n        </div>\r\n      </div>\r\n  \r\n      \r\n      <div>\r\n        <button class=\"full-details-btn\" routerLink=\"/under-construction\" mat-flat-button>See Full Details</button>\r\n      </div>\r\n      <div class=\"website-link\">\r\n        <mat-icon>link</mat-icon>\r\n        <a href=\"{{ candidate['website'] }}\">Website</a>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n  <div class=\"raised-spent\">\r\n\r\n      <div class=\"title\">\r\n        <p>\r\n          Raised v. Spent\r\n          <sup>\r\n            <i\r\n              class=\"helper-tip\"\r\n              aria-hidden=\"true\"\r\n              matTooltip=\"Total campaign funds raised and spent by the candidate.\"\r\n            >\r\n              <fa-icon [icon]=\"faQuestionCircle\"></fa-icon>\r\n            </i>\r\n          </sup>\r\n        </p>\r\n      </div>\r\n  \r\n      <div class=\"raised-spent-chart chart-container-raised\">\r\n        <canvas baseChart\r\n          width=\"350\"\r\n          height=\"550\"\r\n          [chartType]=\"barChartType\"\r\n          [datasets]=\"barChartData\"\r\n          [options]=\"barChartOptions\"\r\n          [plugins]=\"chartPlugins\"\r\n        ></canvas>\r\n      </div>\r\n  \r\n      <div class=\"raised-spent-footer\">\r\n        <div class=\"avg-donation\">\r\n          <h2 class=\"raised-spent-footer-title\">Average Donation</h2>\r\n          <h3 class=\"raised-spent-footer-content\">{{ candidate['raised vs spent'][0]['Average Donor'] | currency:'USD':'symbol':'1.0-0' }}</h3>\r\n        </div>\r\n      </div>\r\n  </div>\r\n\r\n  <app-donations-by-group [candidate]=\"_c\"></app-donations-by-group>\r\n\r\n  <div class=\"in-out-district\">\r\n\r\n    <div class=\"title\">\r\n      <p>\r\n        In v. Out City\r\n        <sup>\r\n          <i\r\n            class=\"helper-tip\"\r\n            aria-hidden=\"true\"\r\n            matTooltip=\"Total campaign funds raised in the city of San Diego versus funds raised outside of city limits.\"\r\n          >\r\n            <fa-icon [icon]=\"faQuestionCircle\"></fa-icon>\r\n          </i>\r\n        </sup>\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"chart-container\">\r\n      <canvas baseChart\r\n        width=\"260\"\r\n        height=\"260\"\r\n        [chartType]=\"doughnutChartType\"\r\n        [datasets]=\"doughnutChartData\"\r\n        [colors]=\"doughnutChartColors\"\r\n        [options]=\"doughnutChartOptions\"\r\n        [plugins]=\"chartPlugins\"\r\n      >\r\n      </canvas>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"close\">\r\n    <i style=\"font-size: 25px;\" aria-hidden=\"true\" (click)=\"close()\">\r\n      <fa-icon [icon]=\"faTimesCircle\"></fa-icon>\r\n    </i>\r\n  </div>\r\n  \r\n\r\n\r\n  <div class=\"outside-money\">\r\n    <div class=\"title\">\r\n      <p>\r\n        Outside Money\r\n        <sup>\r\n          <i\r\n            class=\"helper-tip\"\r\n            aria-hidden=\"true\"\r\n            matTooltip=\"Amount of money raised and spent by independent expenditure committees spent in support or opposition of a candidate but not contributed directly to their campaign.\"\r\n          >\r\n            <fa-icon [icon]=\"faQuestionCircle\"></fa-icon>\r\n          </i>\r\n        </sup>\r\n      </p>\r\n    </div>\r\n    <div class=\"outside-grid\">\r\n      <div  class=\"chart-container-outside\">\r\n        <canvas baseChart\r\n          [chartType]=\"stackedHorizontalBarChartType\"\r\n          [datasets]=\"stackedHorizontalBarChartData\"\r\n          [options]=\"stackedHorizontalBarChartOptions\"\r\n          [plugins]=\"chartPlugins\"\r\n        ></canvas>\r\n      </div>\r\n\r\n      <div class=\"raised\">\r\n        <h2>Total Expenditures</h2>\r\n        <h3>{{(ConvertToInt(candidate['oppose'])+ConvertToInt(candidate['support']))| currency : 'USD' : 'symbol' : '1.0-0'}}</h3>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n"
        },
        {
            "name": "CandidateNavigationComponent",
            "id": "component-CandidateNavigationComponent-9943543333f440d59cd1905559294c7d",
            "file": "src/app/components/candidate-navigation/candidate-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-candidate-navigation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./candidate-navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "offices",
                    "defaultValue": "[]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "seatType",
                    "defaultValue": "'District'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "selectedCandidateId",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "selectedOffice",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedSeatName",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addRoute",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "CandidateNavigation"
                        }
                    ],
                    "optional": false,
                    "returnType": "CandidateNavigationWithRoute",
                    "typeParameters": [],
                    "line": 25,
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "CandidateNavigation",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOffices",
                    "args": [
                        {
                            "name": "candidates",
                            "type": "CandidateNavigation[]"
                        },
                        {
                            "name": "officeTitles",
                            "type": "string[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "jsdoctags": [
                        {
                            "name": "candidates",
                            "type": "CandidateNavigation[]",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "officeTitles",
                            "type": "string[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39
                },
                {
                    "name": "setSelectedCandidate",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedOffice",
                    "args": [
                        {
                            "name": "officeTitle",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "jsdoctags": [
                        {
                            "name": "officeTitle",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSelectedSeat",
                    "args": [
                        {
                            "name": "seatName",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "jsdoctags": [
                        {
                            "name": "seatName",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { toArray } from 'rxjs/operators';\r\n\r\nimport { CandidateNavigation } from '../../interfaces/candidateNavigation'\r\nimport { CandidateDataService } from '../../services/candidate-data.service';\r\n\r\ninterface CandidateNavigationWithRoute extends CandidateNavigation {\r\n  routeLink: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-candidate-navigation',\r\n  templateUrl: './candidate-navigation.component.html',\r\n})\r\nexport class CandidateNavigationComponent implements OnInit {\r\n  offices = [];\r\n  selectedOffice: string = '';\r\n  selectedSeatName: string = '';\r\n  selectedCandidateId: string = '';\r\n  seatType: string = 'District';\r\n\r\n  constructor(\r\n    private candidateDataService: CandidateDataService ) { }\r\n\r\n  addRoute(candidate: CandidateNavigation): CandidateNavigationWithRoute {\r\n    let path = `${candidate.officeType}`;\r\n\r\n    if (candidate.seat !== null) {\r\n      path += `_${candidate.seat.type}-${candidate.seat.name}`;\r\n    }\r\n\r\n    return {\r\n      ...candidate,\r\n      routeLink: `${path}/${candidate.id}`.toLowerCase().split(' ').join('-'),\r\n      seat: candidate.seat ? { ...candidate.seat } : null,\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.candidateDataService.getCandidates().pipe( toArray() ).subscribe(candidates => {\r\n      const officeTitles: string[] = candidates.map(candidate => candidate.officeType).sort().reverse();\r\n      const distinctOfficeTitles: string[] = [... new Set(officeTitles)]; // remove duplicates\r\n      \r\n      const candidatesWithRoute = candidates.map(candidate => this.addRoute(candidate));\r\n\r\n      this.offices = this.getOffices(candidatesWithRoute, distinctOfficeTitles);\r\n    })\r\n  }\r\n\r\n  getOffices(candidates: CandidateNavigation[], officeTitles: string[]) {\r\n    const offices = officeTitles.map(officeTitle => {\r\n      let seatsWithCandidates = null;\r\n\r\n      let candidatesForOffice: CandidateNavigation[] = candidates\r\n        .filter(candidate => candidate.officeType === officeTitle);\r\n\r\n      const hasSeats: boolean = candidatesForOffice.some(candidate => candidate.seat !== null);\r\n\r\n      if (hasSeats) {\r\n        const seatNames: string[] = candidatesForOffice.map(candidate => candidate.seat.name);\r\n\r\n        const distinctSeatNames: string[] = [... new Set(seatNames)].sort(); // remove duplicates\r\n        seatsWithCandidates = distinctSeatNames\r\n          .map(seatName => ({\r\n            title: `${this.seatType} ${seatName}`,\r\n            route: `${officeTitle}_${this.seatType}-${seatName}`.toLowerCase().split(' ').join('-'),\r\n            candidates: candidatesForOffice.filter(candidate => candidate.seat.name === seatName),\r\n            hasSeats: false,\r\n            seats: null,\r\n        }));\r\n      }\r\n\r\n      return {\r\n        title: officeTitle,\r\n        route: officeTitle.toLowerCase().split(' ').join('-'),\r\n        candidates: candidatesForOffice,\r\n        hasSeats,\r\n        seats: seatsWithCandidates,\r\n      }\r\n    });\r\n\r\n    return offices;\r\n  }\r\n\r\n  setSelectedOffice(officeTitle: string) {\r\n    this.selectedOffice = officeTitle;\r\n  }\r\n  setSelectedSeat(seatName: string) {\r\n    this.selectedSeatName = seatName;\r\n  }\r\n  setSelectedCandidate(candidateId: string) {\r\n    this.selectedCandidateId = candidateId;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "candidateDataService",
                        "type": "CandidateDataService"
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "candidateDataService",
                        "type": "CandidateDataService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-nav-list [disableRipple]=\"true\">\r\n  <mat-accordion displayMode=\"flat\" class=\"candidate-navigation\">\r\n\r\n    <ng-container *ngFor=\"let office of offices;\">\r\n\r\n      <mat-expansion-panel\r\n        hideToggle=\"true\"  \r\n        (opened)=\"setSelectedOffice(office.title)\" \r\n      >\r\n\r\n        <mat-expansion-panel-header \r\n          collapsedHeight=\"50px\" \r\n          expandedHeight=\"50px\"\r\n          [ngClass]=\"{'active-link':office.title.toUpperCase() === selectedOffice.toUpperCase()}\"\r\n        >\r\n          <mat-panel-title>\r\n            <a routerLink=\"{{office.route}}\" routerLinkActive=\"active\">{{office.title}}</a>\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n\r\n\r\n        <ng-container *ngIf=\"office.hasSeats; else elseNonSeatOffice\">\r\n          <mat-expansion-panel \r\n            *ngFor=\"let seat of office.seats;\" \r\n            [expanded]=\"selectedSeatName === seat.title\"\r\n            (opened)=\"setSelectedSeat(seat.title)\"\r\n            class=\"mat-elevation-z0\"\r\n          >\r\n          \r\n            <mat-expansion-panel-header \r\n              collapsedHeight=\"30px\" \r\n              expandedHeight=\"30px\"\r\n              [ngClass]=\"{ 'district-selected': selectedSeatName === seat.title }\"\r\n            >\r\n              <a routerLink=\"{{seat.route}}\" routerLinkActive=\"active\">\r\n                {{seat.title}}\r\n              </a>\r\n            </mat-expansion-panel-header>\r\n\r\n            <ng-container *ngTemplateOutlet=\"candidatesT; context: {office: seat}\">\r\n            </ng-container>\r\n\r\n          </mat-expansion-panel>         \r\n        </ng-container>\r\n\r\n        <ng-template #elseNonSeatOffice>\r\n          <ng-container *ngTemplateOutlet=\"candidatesT; context: {office: office}\">\r\n          </ng-container>\r\n        </ng-template>\r\n\r\n      </mat-expansion-panel>\r\n    </ng-container>\r\n  </mat-accordion>\r\n</mat-nav-list>\r\n\r\n\r\n<ng-template #candidatesT let-office=\"office\">\r\n  <div class=\"candidates\">\r\n    <ul *ngFor=\"let candidate of office.candidates;\" class=\"candidate-name\">\r\n      <li>\r\n        <a \r\n          routerLinkActive=\"active\"\r\n          routerLink=\"{{candidate.routeLink}}\" \r\n          [ngClass]=\"{ 'candidate-selected': selectedCandidateId === candidate.id }\"\r\n          (click)=\"setSelectedCandidate(candidate.id)\"\r\n        >\r\n          {{candidate.fullName}}\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</ng-template>\r\n"
        },
        {
            "name": "CityAttorneyComponent",
            "id": "component-CityAttorneyComponent-5a002c40deacd3ec0d301bb1a8102e8c",
            "file": "src/app/components/city-attorney/city-attorney.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-city-attorney",
            "styleUrls": [
                "./city-attorney.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./city-attorney.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "candidate",
                    "type": "Candidate",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "candidateImages",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "candidateImg",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "candidates",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "getCandidate",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "Candidate"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCandidateImg",
                    "args": [
                        {
                            "name": "img",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "img",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20
                },
                {
                    "name": "onClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Candidate } from '../../candidate';\r\nimport { CandidateService } from '../../services/candidate.service';\r\n\r\n@Component({\r\n  selector: 'app-city-attorney',\r\n  templateUrl: './city-attorney.component.html',\r\n  styleUrls: ['./city-attorney.component.scss']\r\n})\r\nexport class CityAttorneyComponent implements OnInit {\r\n  candidates: any[];\r\n  candidate: Candidate;\r\n  candidateImg: string;\r\n  \r\n  candidateImages: string[] = [];\r\n  isExpanded: boolean = false;\r\n\r\n  constructor(private candidateService: CandidateService) { }\r\n\r\n  ngOnInit() {\r\n    this.candidateService.getCityAttorneys().then(\r\n      attorneys => {\r\n        this.candidates = attorneys;\r\n      }\r\n    );\r\n  }\r\n\r\n  getCandidate(candidate: Candidate) {\r\n    this.candidate = candidate;\r\n    this.isExpanded = true;\r\n  }\r\n\r\n  getCandidateImg(img: string) {\r\n    this.candidateImg = img;\r\n  }\r\n\r\n  onClose(event: boolean) {\r\n    this.isExpanded = event;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".candidate-cards {\r\n    padding: 10px 20px;\r\n}",
                    "styleUrl": "./city-attorney.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "candidateService",
                        "type": "CandidateService"
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"candidate-cards p-grid p-justify-left p-nogutter\">\r\n\r\n  <!-- Expanded Candidate Card -->\r\n  <app-candidate-card-expanded class=\"p-col-12\" *ngIf=\"isExpanded\" [candidate]=\"candidate\" [candidateImg]=\"candidateImg\" (isExpanded)=\"onClose($event)\"></app-candidate-card-expanded>\r\n\r\n  <!-- Primary Candidate Card -->\r\n  <div *ngFor=\"let candidate of candidates; let i = index\">\r\n    <app-candidate-card *ngIf=\"candidate\" [candidate]=\"candidate\" [candidateImg]=\"candidateImages[i]\" (emitCandidateData)=\"getCandidate($event)\" (emitCandidateImage)=\"getCandidateImg($event)\"></app-candidate-card>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "CityCouncilDistrictComponent",
            "id": "component-CityCouncilDistrictComponent-f81043d1d693dbd5b32f2ffd7fb54723",
            "file": "src/app/components/city-council-district/city-council-district.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-city-council-district",
            "styleUrls": [
                "./city-council-district.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./city-council-district.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "candidate",
                    "type": "Candidate",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "candidateImages",
                    "defaultValue": "[]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "candidateImg",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "candidates",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                },
                {
                    "name": "onClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCandidate",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "Candidate"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCandidateImg",
                    "args": [
                        {
                            "name": "img",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "jsdoctags": [
                        {
                            "name": "img",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport { Candidate } from '../../candidate';\r\nimport { CandidateService } from '../../services/candidate.service';\r\n\r\n@Component({\r\n  selector: 'app-city-council-district',\r\n  templateUrl: './city-council-district.component.html',\r\n  styleUrls: ['./city-council-district.component.scss']\r\n})\r\nexport class CityCouncilDistrictComponent implements OnInit {\r\n  candidates: any[];\r\n  candidate: Candidate;\r\n  candidateImg: string;\r\n  \r\n  candidateImages: string[] = [];\r\n  isExpanded: boolean = false;\r\n\r\n  constructor(private candidateService: CandidateService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.paramMap.subscribe(params => {\r\n      \r\n      const district = params.get('id');\r\n\r\n      this.isExpanded = false;\r\n\r\n      this.candidateService.getCityCouncilorsByDistrict(district).then(\r\n        districtCouncilors => {\r\n          this.candidates = districtCouncilors;\r\n        }\r\n      );\r\n\r\n    });\r\n  }\r\n\r\n  setCandidate(candidate: Candidate) {\r\n    this.candidate = candidate;\r\n    this.isExpanded = true;\r\n  }\r\n\r\n  setCandidateImg(img: string) {\r\n    this.candidateImg = img;\r\n  }\r\n\r\n  onClose(event: boolean) {\r\n    this.isExpanded = event;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".candidate-cards {\r\n  padding: 10px 20px;\r\n}\r\n",
                    "styleUrl": "./city-council-district.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "candidateService",
                        "type": "CandidateService"
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute"
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"candidate-cards p-grid p-justify-left p-nogutter\">\r\n\r\n  <!-- Expanded Candidate Card -->\r\n  <app-candidate-card-expanded class=\"p-col-12\" *ngIf=\"isExpanded\" [candidate]=\"candidate\" [candidateImg]=\"candidateImg\" (isExpanded)=\"onClose($event)\"></app-candidate-card-expanded>\r\n\r\n  <!-- Primary Candidate Card -->\r\n  <div *ngFor=\"let candidate of candidates; let i = index\">\r\n    <app-candidate-card *ngIf=\"candidate\" [candidate]=\"candidate\" [candidateImg]=\"candidateImages[i]\" (emitCandidateData)=\"setCandidate($event)\" (emitCandidateImage)=\"setCandidateImg($event)\"></app-candidate-card>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "DonationsByGroupComponent",
            "id": "component-DonationsByGroupComponent-e50f46635a79b03836b94050b15e5fce",
            "file": "src/app/vv-charts/donations-by-group/donations-by-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-donations-by-group",
            "styleUrls": [
                "./donations-by-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./donations-by-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "candidate",
                    "line": 16,
                    "type": ""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_c",
                    "type": "Candidate",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        112
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource()",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "displayedColumns",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "setDisplayedColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30
                },
                {
                    "name": "setTableData",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "Candidate"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { Candidate } from '../../candidate';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-donations-by-group',\r\n  templateUrl: './donations-by-group.component.html',\r\n  styleUrls: ['./donations-by-group.component.scss']\r\n})\r\nexport class DonationsByGroupComponent implements OnInit {\r\n  private _c: Candidate;\r\n  get candidate() {\r\n    return this._c;\r\n  }\r\n\r\n  @Input() set candidate(candidate: Candidate) {\r\n    this._c = candidate;\r\n    this.setDisplayedColumns();\r\n    this.setTableData(candidate);\r\n  }\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: any[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  setDisplayedColumns() {\r\n    this.displayedColumns = [\r\n      'colorCode',\r\n      'industry',\r\n      'amount',\r\n      'percentage',\r\n    ];\r\n  }\r\n\r\n  setTableData(candidate: Candidate) {\r\n    const topFiveIndustries = [\r\n      {\r\n        colorCode: '#007431',\r\n        industry: candidate['by industry'][0]['industry 1'][0],\r\n        amount: Number(candidate['by industry'][0]['industry 1'][1]),\r\n        percentage: Number(candidate['by industry'][0]['industry 1'][2]),\r\n      },\r\n      {\r\n        colorCode: '#00903d',\r\n        industry: candidate['by industry'][0]['industry 2'][0],\r\n        amount: Number(candidate['by industry'][0]['industry 2'][1]),\r\n        percentage: Number(candidate['by industry'][0]['industry 2'][2]),\r\n      },\r\n      {\r\n        colorCode: '#00af4a',\r\n        industry: candidate['by industry'][0]['industry 3'][0],\r\n        amount: Number(candidate['by industry'][0]['industry 3'][1]),\r\n        percentage: Number(candidate['by industry'][0]['industry 3'][2]),\r\n      },\r\n      {\r\n        colorCode: '#00d359',\r\n        industry: candidate['by industry'][0]['industry 4'][0],\r\n        amount: Number(candidate['by industry'][0]['industry 4'][1]),\r\n        percentage: Number(candidate['by industry'][0]['industry 4'][2]),\r\n      },\r\n      {\r\n        colorCode: '#00fc6a',\r\n        industry: candidate['by industry'][0]['industry 5'][0],\r\n        amount: Number(candidate['by industry'][0]['industry 5'][1]),\r\n        percentage: Number(candidate['by industry'][0]['industry 5'][2]),\r\n      },\r\n    ];\r\n\r\n    this.dataSource.data = topFiveIndustries;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n.industries {\r\n  .industries-table {\r\n    width: 100%;\r\n    text-align: left;\r\n  }\r\n\r\n  .mat-cell {\r\n    font-size: 13px;\r\n    color: $vvgrey;\r\n    padding: 8px;\r\n  }\r\n\r\n  .mat-cell:nth-last-child(2),\r\n  .mat-cell:last-child,\r\n  .mat-header-cell:nth-last-child(2),\r\n  .mat-header-cell:last-child {\r\n    text-align: right;\r\n  }\r\n\r\n  .mat-cell:last-child {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n}\r\n",
                    "styleUrl": "./donations-by-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "candidate": {
                    "name": "candidate",
                    "setSignature": {
                        "name": "candidate",
                        "type": "void",
                        "args": [
                            {
                                "name": "candidate",
                                "type": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "candidate",
                                "type": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "candidate",
                        "type": "",
                        "returnType": "",
                        "line": 12
                    }
                }
            },
            "templateData": "<div class=\"industries\">\r\n    <div class=\"title\">\r\n      <p>\r\n        Donations by Group\r\n        <sup>\r\n          <i\r\n            class=\"helper-tip fa fa-question-circle\"\r\n            aria-hidden=\"true\"\r\n            matTooltip=\"Total contributions from the five largest groups of campaign donors.  Groups are determined by the industry segment of each donor's employer.\"\r\n          >\r\n          </i>\r\n        </sup>\r\n      </p>\r\n    </div>\r\n\r\n  <div>\r\n    <table class=\"industries-table\" mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"colorCode\">\r\n        <th mat-header-cell *matHeaderCellDef>Color Code</th>\r\n        <td [ngClass]=\"{'remove-border': i == dataSource.data.length - 1}\" mat-cell *matCellDef=\"let element; let i = index\" [style.color]=\"element.colorCode\">\r\n          <mat-icon>fiber_manual_record</mat-icon>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"industry\">\r\n        <th mat-header-cell *matHeaderCellDef>Industry</th>\r\n        <td [ngClass]=\"{'remove-border': i == dataSource.data.length - 1}\" mat-cell *matCellDef=\"let element; let i = index\">{{ element.industry }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n        <td [ngClass]=\"{'remove-border': i == dataSource.data.length - 1}\" mat-cell *matCellDef=\"let element; let i = index\">{{ element.amount | currency:'USD':'symbol':'1.0-0' }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"percentage\">\r\n        <th mat-header-cell *matHeaderCellDef>Percentage</th>\r\n        <td [ngClass]=\"{'remove-border': i == dataSource.data.length - 1}\" mat-cell *matCellDef=\"let element; let i = index\">{{ element.percentage | number:'1.0-0' }}%</td>\r\n      </ng-container>\r\n\r\n      \r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FaqComponent",
            "id": "component-FaqComponent-316ea321612a6f0d064ac284c06a2de6",
            "file": "src/app/components/faq/faq.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-faq",
            "styleUrls": [
                "./faq.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./faq.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.scss']\r\n})\r\nexport class FaqComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n@import \"../../styles/global\";\r\n\r\n\r\n.faq{\r\n        padding:20px 40px 40px 40px;\r\n        margin:20px 40px;\r\n        background-color:#ffffff;\r\n        box-shadow: $vvshadow;\r\n\r\n        h1{\r\n            margin:20px 0px 30px 0px;\r\n            text-align: left;\r\n        }\r\n\r\n        .fact{\r\n            color: $vvblue;\r\n            font-weight:normal;\r\n            margin-bottom:5px;\r\n            font-size: 18px;\r\n            line-height: 1.4;\r\n            max-width: 800px;\r\n        }\r\n\r\n        .answer{\r\n            margin-top:0px !important;\r\n            color: $vvdarkgrey;\r\n            margin-bottom: 20px;\r\n            font-size: 14px;\r\n            line-height: 1.4;\r\n            font-weight: 100;\r\n            max-width: 1200px;\r\n        }\r\n       \r\n  \r\n}\r\n",
                    "styleUrl": "./faq.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"faq\">\r\n  <h1>Frequently Asked Questions</h1>\r\n  <h3 class=\"fact\">Where is this data sourced?</h3>\r\n\r\n\r\n  <p class=\"answer\">All of our data is sourced directly from the <a href=\"https://ssl.netfile.com/static/agency/csd/\"\r\n      target=\"_blank\">City of San Diego</a> public records. It is our priority to show you unbiased accurate\r\n    information about campaign finance.</p>\r\n\r\n\r\n  <h3 class=\"fact\">How often is this site updated?</h3>\r\n\r\n  <p class=\"answer\">Our data is pulled from the <a href=\"https://ssl.netfile.com/static/agency/csd/\"\r\n      target=\"_blank\">City of San Diego</a> public records multiple times a week to ensure you are able to see the\r\n    latest campaign finance data for your local elections.\r\n  </p>\r\n\r\n\r\n  <h3 class=\"fact\">Who manages this site?</h3>\r\n  <p class=\"answer\">This site is a collaboration between the Voters' Voice Initiatives, a non-partisan community group\r\n    advocating for election reform and Open San Diego, a brigade of the national, non-partisan Code for America.\r\n  </p>\r\n\r\n\r\n  <h3 class=\"fact\">How do I find out what city council district I am in?</h3>\r\n  <p class=\"answer\">You can use our built-in district finder or use the city’s finder.\r\n  </p>\r\n\r\n\r\n  <h3 class=\"fact\">What is outside money?</h3>\r\n  <p class=\"answer\">Outside money refers to all independent expenditures for or against a candidate.\r\n  </p>\r\n\r\n  <h3 class=\"fact\">What is an independent expenditure?</h3>\r\n  <p class=\"answer\">Independent expenditures are campaign contributions for communications that expressly advocate for the election or defeat of a candidate that is not made in cooperation, consultation or concert with; or at the request or suggestion of a candidate, candidate's authorized committee or political party.\r\n  </p>\r\n\r\n  <h3 class=\"fact\">What is the difference between donating to a candidate's campaign committee and donating to an independent expenditure committee supporting the candidate?</h3>\r\n  <p class=\"answer\">In the city of San Diego, candidates running for municipal office are subject to campaign finance limits on how much you can donate.  For City Council the limit is $1200 and for Mayor and City Attorney it is currently $2,300.\r\n    There are no limits to how much money you can donate to an independent expenditure committee working separately on behalf of, or against a candidate.\r\n  </p>\r\n\r\n\r\n  <h3 class=\"fact\">How does this effort help reduce the impact of money on politics?</h3>\r\n  <p class=\"answer\">Campaign finance disclosure is an essential public accountability mechanism.  Providing public access to this kind of information about the flow of money in elections empowers oversight and accountability in the government decision-making process.  Data transparency is critical to maintaining public trust.</p>\r\n\r\n  <h3 class=\"fact\">What are Democracy Dollars?</h3>\r\n  <p class=\"answer\">Democracy Dollars are a method of public financing of elections which can be an effective tool to increase voter engagement, expand opportunity for more community members of diverse experience to run for office and combat the rising influence of money on political outcomings.</p>\r\n\r\n  <h3 class=\"fact\">How do Democracy Dollars work?</h3>\r\n  <p class=\"answer\">Candidates receive public funds to finance their campaigns for office. In this program each registered voter would receive (4) democracy dollar certificates worth $25 each to give to the candidate(s) of their choice running for Mayor, City Attorney or City Council.<br/><br/>\r\n    Candidates qualify for public funds by raising a threshold number of small donor contributions and agree to forego big dollar contributions. Once qualified, candidates are able to fund their campaign by asking for and receiving Democracy Dollars from the voters.  This ensures that candidates are beholden to the public they represent and voters have a voice in who makes it to the ballot box.\r\n    You can read more about it <a href=\"https://sdvotersvoice.org/how-does-it-work%3F\" target=\"_blank\">here.</a></p>\r\n\r\n\r\n\r\n</div>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-9e93ec86e29f6972b72072afd1dbd156",
            "file": "src/app/components/home/home.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "candidates",
                    "type": "Record<string | CandidateTree>",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "councilDistrictStep",
                    "defaultValue": "-1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "faBars",
                    "defaultValue": "faBars",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "isSidenavOpened",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "lastUpdatedDate",
                    "defaultValue": "'00/00/00'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "modifiedData",
                    "defaultValue": "{}",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "officeStep",
                    "defaultValue": "-1",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "officeType",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "selectedCandidate",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "showSubmenu",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "sidenav",
                    "type": "MatDrawer",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'drawer', {static: true}"
                        }
                    ]
                },
                {
                    "name": "sortedObj",
                    "defaultValue": "{}",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "asIsOrder",
                    "args": [
                        {
                            "name": "a",
                            "type": ""
                        },
                        {
                            "name": "b",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 156,
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "b",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "massageCandidateData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59
                },
                {
                    "name": "resetSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102
                },
                {
                    "name": "selectSidenavCandidate",
                    "args": [
                        {
                            "name": "candidateKey",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "jsdoctags": [
                        {
                            "name": "candidateKey",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCouncilDistrictStep",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOfficeStep",
                    "args": [
                        {
                            "name": "index",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setOfficeType",
                    "args": [
                        {
                            "name": "type",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSidenavInitialOptions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75
                },
                {
                    "name": "sortObj",
                    "args": [
                        {
                            "name": "modifiedObject",
                            "type": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 141,
                    "modifierKind": [
                        112
                    ],
                    "jsdoctags": [
                        {
                            "name": "modifiedObject",
                            "type": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 47
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit, ViewEncapsulation, ViewChild } from '@angular/core';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\nimport { CandidateService, SidenavService } from '../../services';\r\nimport { CandidateTree } from '../../candidate';\r\n\r\nimport { faMapMarkedAlt, faBars, } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  isExpanded: boolean = false;\r\n  isSidenavOpened: boolean;\r\n  showSubmenu: boolean = false;\r\n  officeStep: number = -1;\r\n  councilDistrictStep: number = -1;\r\n  selectedCandidate: string;\r\n  officeType: string;\r\n  lastUpdatedDate: string = '00/00/00';\r\n\r\n  candidates: Record<string, CandidateTree>;\r\n  modifiedData: {} = {};\r\n  sortedObj: {} = {};\r\n\r\n  // faMapMarkedAlt = faMapMarkedAlt;\r\n  faBars = faBars;\r\n\r\n  @ViewChild('drawer', { static: true }) sidenav: MatDrawer;\r\n\r\n  constructor(\r\n    private candidateService: CandidateService,\r\n    private sidenavService: SidenavService,\r\n  ) {\r\n    sidenavService.candidateNameEmittedFromCard$.subscribe(res => {\r\n      this.selectedCandidate = res;\r\n    });\r\n\r\n    sidenavService.candidateTypeEmittedFromSplash$.subscribe(res => {\r\n      this.officeType = res;\r\n    });\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event): void {\r\n    if (this.sidenav !== undefined) {\r\n      if (event.target.innerWidth <= 1200) {\r\n        this.sidenav.close();\r\n        this.sidenav.mode = 'over';\r\n      } else {\r\n        this.sidenav.open();\r\n        this.sidenav.mode = 'side';\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.setSidenavInitialOptions();\r\n    \r\n    this.candidateService.getAll().then(\r\n      (all: Record<string, CandidateTree>) => {\r\n        this.candidates = all;\r\n\r\n        this.massageCandidateData();\r\n      }\r\n    )\r\n\r\n    this.candidateService.getLastUpdated()\r\n      .subscribe(date => this.lastUpdatedDate = date);\r\n  }\r\n\r\n  // Set initial sidenav options onint\r\n  setSidenavInitialOptions() {\r\n    this.sidenav.open();\r\n    this.sidenav.mode = 'side';\r\n  }\r\n\r\n  // Have active-link class apply to only an opened candidate office panel by setting an assigned step for each candidate office section\r\n  setOfficeStep(index,) {\r\n    this.officeStep = index;\r\n  }\r\n\r\n  // Assign officeType variable with the value of the candidateType.key when opening office panel to check expanded condition on the mat-expansion-panel\r\n  setOfficeType(type) {\r\n    this.officeType = type;\r\n  }\r\n\r\n  // Have only one city council district side panel open at any time by setting an assigned step for each panel distrct\r\n  setCouncilDistrictStep(index) {\r\n    this.councilDistrictStep = index;\r\n  }\r\n\r\n  // Apply highlight style to candidate name when selected, open candidate card when candidate name is clicked\r\n  selectSidenavCandidate(candidateKey: string) {\r\n    this.selectedCandidate = candidateKey;\r\n    this.sidenavService.emitCandidateKeySidenav(candidateKey);\r\n  }\r\n\r\n  // Reset sidenav when navigating away from any of the candidate offices, close panels and remove style highlight\r\n  resetSidenav() {\r\n    this.officeStep = null;\r\n    this.officeType = null;\r\n    this.selectedCandidate = null;\r\n  }\r\n\r\n  // data is turned into a key value pair\r\n  //object like this\r\n  //{\r\n  //  mayor:{},\r\n  //  city-council:{},\r\n  //  city-attorney:{}\r\n  //}\r\n  massageCandidateData() {\r\n\r\n    this.modifiedData[\"city council\"] = {} as CandidateTree;\r\n    this.modifiedData[\"city council\"][\"title\"] = \"City Council\";\r\n    this.modifiedData[\"city council\"][\"name\"] = \"City Council\";\r\n    this.modifiedData[\"city council\"][\"deepTree\"] = true;\r\n    this.modifiedData[\"city council\"][\"candidates\"] = {};\r\n\r\n    const entries = Object.entries(this.candidates);\r\n\r\n    entries.forEach(entry => {\r\n      if (!entry[\"0\"].toLowerCase().includes(\"last\")) {\r\n        if (!entry[\"0\"].toLowerCase().includes(\"city-council\")) {\r\n          this.modifiedData[entry[\"0\"]] = entry[\"1\"];\r\n          this.modifiedData[entry[\"0\"]][\"deeptree\"]= false;\r\n        } else {\r\n          this.modifiedData[\"city council\"][\"candidates\"][entry[\"0\"].slice(-1)] = entry[\"1\"];\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    this.sortedObj = this.sortObj(this.modifiedData);\r\n  }\r\n\r\n\r\n  private sortObj(modifiedObject) {\r\n    let temp = {};\r\n    let modData = this.modifiedData;\r\n    var sortedEntries = Object.keys(modifiedObject).sort(function (a, b) {\r\n      return b.charCodeAt(0) - a.charCodeAt(0);\r\n    });\r\n\r\n    sortedEntries.forEach(x => {\r\n      temp[x] = modData[x];\r\n    });\r\n\r\n    return temp;\r\n\r\n  }\r\n\r\n  asIsOrder(a, b) {\r\n    return 1;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n@import \"../../styles/global\";\r\n.router-link-active {\r\n  color: $vvyellow !important;\r\n}\r\n\r\n.main_section{\r\n  background-color: $vvbackground;\r\n}\r\n.full-width{\r\n  padding: 0px;\r\n}\r\n.logo{\r\n  &:focus{\r\n    outline: none !important;\r\n  }\r\n}\r\n.sidenav-container {\r\n  height: 100vh;\r\n  border: 1px solid rgba(0, 0, 0, 0.5);\r\n\r\n  .mat-accordion {\r\n\r\n    .mat-expansion-panel {\r\n      border-radius: 0px !important;\r\n      box-shadow: none !important;\r\n      border-bottom: 1px solid #F5F5F5;\r\n\r\n      .mat-expansion-panel-content {\r\n        background: lighten($vvbackground, 3%);\r\n        .mat-expansion-panel-body {\r\n          padding: 0 20px 0;\r\n          margin: 0 10px;\r\n        \r\n        }\r\n      \r\n        i {\r\n          opacity: 0.7;\r\n        }\r\n\r\n        .mat-expansion-panel-header {\r\n          .mat-content{\r\n            display: flex;\r\n            justify-content: space-between;\r\n            //margin: 0;\r\n          }\r\n\r\n          .mat-expansion-indicator {\r\n            padding: 0 5px;\r\n          }\r\n          transition: none;\r\n          background: lighten($vvbackground, 3%);\r\n          padding: 5px 0px;\r\n\r\n          &:hover {\r\n            background: lighten($vvbackground, 3%) !important;\r\n            border-bottom: 2px $vvlightblue solid;\r\n            font-style: italic;\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    .active-link {\r\n      background-color: $vvlightblue !important;\r\n      \r\n\r\n      .mat-content .mat-expansion-panel-header-title {\r\n        color: $vvlightgrey;         \r\n      }\r\n    }\r\n\r\n    .mat-expansion-panel-header {\r\n      transition: 300ms ease;\r\n      .mat-content .mat-expansion-panel-header-title {\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n      }\r\n\r\n      &:hover {\r\n        background-color: lighten($vvlightblue, 10%) !important;\r\n\r\n        .mat-content .mat-expansion-panel-header-title {\r\n          color: $vvlightgrey;         \r\n        }\r\n      }\r\n      \r\n    }\r\n\r\n    .mat-expansion-panel-body {\r\n      ul {\r\n        list-style-type: none;\r\n        padding: 0px;\r\n\r\n        li {\r\n          margin: 0 0 5px 0;\r\n\r\n          &:hover {\r\n            font-weight: bold;\r\n            color: $vvlightblue;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .candidate-selected {\r\n      font-weight: bold;\r\n      color: $vvlightblue;\r\n    }\r\n\r\n    .district-selected {\r\n      background: lighten($vvbackground, 3%) !important;\r\n      border-bottom: 2px $vvlightblue solid;\r\n      font-style: italic;\r\n    }\r\n}\r\n\r\n  .submenu {\r\n    overflow-y: hidden;\r\n    transition: transform 300ms ease;\r\n    transform: scaleY(0);\r\n    transform-origin: top;\r\n    padding-left: 30px;\r\n    background: $vvlightgrey;\r\n  }\r\n\r\n  .submenu.expanded {\r\n    transform: scaleY(1);\r\n  }\r\n\r\n  .menu-button-expand {\r\n    transition: 300ms ease-in-out;\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  .menu-button-expand.rotated {\r\n    transform: rotate(180deg);\r\n  }\r\n\r\n  mat-nav-list {\r\n    width: 15vw;\r\n    padding-top: 0;\r\n  }\r\n}\r\n\r\n:host ::ng-deep .mat-list-item-content {\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n\r\n  .header-nav{\r\n    .bar-toggle{\r\n      display:block !important;\r\n      color:#fff;\r\n      padding-right:20px;\r\n      font-size:22px;\r\n    }\r\n    grid-template-columns: auto 3fr auto auto !important;\r\n  }\r\n  .sidenav-container {\r\n    mat-drawer {\r\n      @media only screen and (min-width: 1201px) {\r\n        width: 150px;\r\n      }\r\n\r\n      @media only screen and (max-width: 1200px) {\r\n        width: 200px;\r\n      }\r\n    }\r\n    .mat-accordion {\r\n      .mat-expansion-panel {\r\n        @media only screen and (min-width: 1201px) {\r\n          width: 150px;\r\n        }\r\n\r\n        @media only screen and (max-width: 1200px) {\r\n          width: 200px;\r\n        }\r\n        .mat-expansion-panel-content {\r\n          .mat-expansion-panel-header {\r\n            font-size: 12px;\r\n            padding: 5px 16px 0px 16px;\r\n          }\r\n\r\n          .mat-expansion-panel-body {\r\n            padding: 0px;\r\n          }\r\n\r\n          .fa-map-marked-alt {\r\n            padding-top: 4px;\r\n          }\r\n        }\r\n\r\n        .mat-expansion-panel-header {\r\n          font-size: 12px;\r\n          padding: 0 12px;\r\n        }\r\n\r\n        .mat-expansion-panel-body {\r\n          padding: 0px;\r\n      \r\n          ul li {\r\n            font-size: 12px;\r\n            padding: 0 16px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.header-nav{\r\n  .bar-toggle{\r\n    display:none;\r\n    color:#fff;\r\n  }\r\n  font-size: 18px;\r\n  display: grid;\r\n  grid-template-columns: 3fr auto auto;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n  background-color: $vvdarkblue;\r\n  align-items: center;\r\n  .nav_links {\r\n      margin-left: 20px;\r\n      margin-right: 20px;\r\n      color: #ffffff;\r\n      text-decoration: none;\r\n      font-weight: 100;\r\n      &:hover {\r\n          text-decoration: underline;\r\n          color: $vvyellow;\r\n        }\r\n        &:active {\r\n          color: $vvyellow;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/*Footer*/\r\n.footer {\r\n  display: grid;\r\n  grid-template-columns: 3fr auto;\r\n  padding: 40px 40px 40px 40px;\r\n  color: $vvdarkblue;\r\n  border:none;\r\n  background-color: $vvbackground;\r\n\r\n  h3 {\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 1.2;\r\n    margin-bottom: 5px;\r\n    margin-right: 40px;\r\n  }\r\n\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    line-height: 1.3;\r\n    max-width: 600px;\r\n    margin-right: 40px;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.footer_links {\r\n  margin: 20px 20px 20px 0px;\r\n  display: inline-block;\r\n  \r\n\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  text-decoration: none;\r\n  color: $vvblue;\r\n\r\n\r\n\r\n.footer_logo {\r\n  align-self: center;\r\n  justify-self: center;\r\n  margin-right: 20px;\r\n}\r\n.updated{\r\n color: $vvgreen;\r\n font-style: italic;\r\n font-size: 12px;\r\n}\r\n\r\n/*Hover States*/\r\n\r\n.subheadline p a:hover,\r\n.nav_links:hover,\r\n.footer_links:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n/*CTA Stack*/\r\n@media only screen and (max-width: 636px) {\r\n  .headline {\r\n    font-size: 26px;\r\n  }\r\n  .races {\r\n    grid-template-columns: 1fr;\r\n    grid-row-gap: 20px;\r\n    grid-column-gap: 0px;\r\n    max-width: 300px !important;\r\n  }\r\n\r\n  .subheadline {\r\n    margin: auto;\r\n  }\r\n\r\n  .footer {\r\n    grid-template-columns: 1fr;\r\n    text-align: center;\r\n   \r\n    h3 {\r\n      font-size: 14px;\r\n      margin-right: 0px;\r\n    }\r\n\r\n    p {\r\n      margin-right: 0px;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  .last {\r\n    margin-right: 0px !important;\r\n  }\r\n}\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "candidateService",
                        "type": "CandidateService"
                    },
                    {
                        "name": "sidenavService",
                        "type": "SidenavService"
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sidenavService",
                        "type": "SidenavService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"header-nav\">\r\n  <i class=\"bar-toggle\" (click)=\"drawer.toggle()\">\r\n    <fa-icon [icon]=\"faBars\"></fa-icon>\r\n  </i>\r\n  \r\n  <div>\r\n    <img class=\"logo\" src=\"../../../assets/home/VV_Logo_Reversed@2x.png\" alt=\"Voter's Voice Initiative\" width=\"120\" height=\"auto\"\r\n      routerLinkActive=\"active-link\" routerLink=\"/splash\" (click)=\"resetSidenav()\">\r\n  </div>\r\n  <a class=\"nav_links\" routerLink=\"/about\" routerLinkActive=\"router-link-active\" (click)=\"resetSidenav()\">About</a>\r\n  <a class=\"nav_links\" routerLink=\"/faq\" routerLinkActive=\"router-link-active\" (click)=\"resetSidenav()\">FAQ</a>\r\n</div>\r\n\r\n<mat-drawer-container class=\"sidenav-container\">\r\n  <mat-drawer #drawer align=\"start\" disableClose=\"false\">\r\n    <mat-nav-list [disableRipple]=\"true\">\r\n      <mat-accordion displayMode=\"flat\">\r\n\r\n        <ng-container *ngFor=\"let candidateType of sortedObj | keyvalue: asIsOrder; let i= index\">\r\n\r\n          <mat-expansion-panel [expanded]=\"officeType === candidateType.key\" (opened)=\"setOfficeStep(i); setOfficeType(candidateType.key)\" hideToggle=\"true\" (closed)=\"setCouncilDistrictStep(-1)\">\r\n\r\n            <mat-expansion-panel-header [ngClass]=\"{'active-link':officeStep===i}\" collapsedHeight=\"50px\" expandedHeight=\"50px\" \r\n               [routerLink]=\"candidateType.value.deepTree? []: '/'+ candidateType.key\">\r\n              <mat-panel-title>\r\n                {{candidateType.value.title}}\r\n              </mat-panel-title>\r\n            </mat-expansion-panel-header>\r\n\r\n            <ng-container *ngIf=\"!candidateType.value.deepTree; else elseBlockContainer\">\r\n              <ul *ngFor=\"let member of candidateType.value.candidates | keyvalue; let j=index\">\r\n                <li>\r\n                  <a [ngClass]=\"{ 'candidate-selected': selectedCandidate === member.key }\" (click)=\"selectSidenavCandidate(member.key)\">{{member.key}}</a>\r\n                </li>\r\n              </ul>\r\n            </ng-container>\r\n\r\n            <!-- city council subcategory and its sub properties -->\r\n            <ng-template #elseBlockContainer>\r\n              <mat-expansion-panel *ngFor=\"let candidate of candidateType.value.candidates | keyvalue; let j=index\" [expanded]=\"councilDistrictStep===j\"\r\n                (opened)=\"setCouncilDistrictStep(j)\" class=\"mat-elevation-z0\" [routerLink]=\"['city-council/district', candidate.key]\">\r\n                <mat-expansion-panel-header [ngClass]=\"{ 'district-selected': councilDistrictStep === j }\" collapsedHeight=\"30px\" expandedHeight=\"30px\">\r\n                  {{candidate.value.name}}\r\n                </mat-expansion-panel-header>\r\n                <ul *ngFor=\"let member of candidate.value.candidates | keyvalue; let x= index\">\r\n                  <li>\r\n                    <a [ngClass]=\"{ 'candidate-selected': selectedCandidate === member.key }\" (click)=\"selectSidenavCandidate(member.key)\">{{member.key}}</a>\r\n                  </li>\r\n                </ul>\r\n              </mat-expansion-panel>\r\n            </ng-template>\r\n            <!-- city council -->\r\n\r\n          </mat-expansion-panel>\r\n        </ng-container>\r\n      </mat-accordion>\r\n    </mat-nav-list>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer-content class=\"main_section\">\r\n    <router-outlet></router-outlet>\r\n    <div class=\"footer\">\r\n      <div>\r\n        <div class=\"footer_nav\">\r\n          <div class=\"footer_links\">\r\n            <a routerLink=\"/about\">About</a>\r\n          </div>\r\n          <div class=\"footer_links\">\r\n            <a routerLink=\"/faq\">FAQ</a>\r\n          </div>\r\n          <div class=\"footer_links last\">\r\n            <a href=\"https://registertovote.ca.gov/\" target=\"_blank\" rel=\"noopener noreferrer\">Register to Vote</a>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>Brought to you by the Voters' Voice Initiatives and San Diego’s Public Ethics Commission</h3>\r\n          <p>The San Diego Campaign Finance Dashboard is being developed by volunteers in a non-partisan coalition as a service\r\n            to our community. Data has been gathered from public records posted by the\r\n            <a href=\"https://ssl.netfile.com/static/agency/csd/\"\r\n              target=\"_blank\">City of San Diego Clerk’s Office\r\n            </a> in order to create the graphs and summaries for each candidate’s campaign.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"footer_logo\">\r\n        <img src=\"../../../assets/home/VV_Logo_Color@2x.png\" alt=\"Voter's Voice Initiative\" width=\"120\" height=\"auto\">\r\n        <p class=\"updated\">Last Updated {{ lastUpdatedDate }}</p>\r\n      </div>\r\n    </div>\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n"
        },
        {
            "name": "MayorComponent",
            "id": "component-MayorComponent-a69e13d17a6f7d7fa71400fd7c938af5",
            "file": "src/app/components/mayor/mayor.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-mayor",
            "styleUrls": [
                "./mayor.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./mayor.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "candidate",
                    "type": "Candidate",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "candidateImages",
                    "defaultValue": "[\r\n    'assets/candidates/2020/mayor/barbara_bry/barbara_bry.png',\r\n    // 'assets/candidates/2020/mayor/tasha_williamson/tasha_williamson.png',\r\n    'assets/candidates/2020/mayor/todd_gloria/todd_gloria.png',\r\n  ]",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "candidateImg",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "candidates",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "getCandidate",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "Candidate"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getCandidateImg",
                    "args": [
                        {
                            "name": "img",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "jsdoctags": [
                        {
                            "name": "img",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25
                },
                {
                    "name": "onClose",
                    "args": [
                        {
                            "name": "event",
                            "type": "boolean"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "boolean",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Candidate } from '../../candidate';\r\nimport { CandidateService } from '../../services/candidate.service';\r\n\r\n@Component({\r\n  selector: 'app-mayor',\r\n  templateUrl: './mayor.component.html',\r\n  styleUrls: ['./mayor.component.scss']\r\n})\r\nexport class MayorComponent implements OnInit {\r\n  candidates: any[];\r\n  candidate: Candidate;\r\n  candidateImg: string;\r\n  \r\n  candidateImages: string[] = [\r\n    'assets/candidates/2020/mayor/barbara_bry/barbara_bry.png',\r\n    // 'assets/candidates/2020/mayor/tasha_williamson/tasha_williamson.png',\r\n    'assets/candidates/2020/mayor/todd_gloria/todd_gloria.png',\r\n  ];\r\n  \r\n  isExpanded: boolean = false;\r\n\r\n  constructor(private candidateService: CandidateService) { }\r\n\r\n  ngOnInit() {\r\n    this.candidateService.getMayors().then(\r\n      mayors => {\r\n        this.candidates = mayors;\r\n      }\r\n    );\r\n  }\r\n\r\n  getCandidate(candidate: Candidate) {\r\n    this.candidate = candidate;\r\n    this.isExpanded = true;\r\n  }\r\n\r\n  getCandidateImg(img: string) {\r\n    this.candidateImg = img;\r\n  }\r\n\r\n  onClose(event: boolean) {\r\n    this.isExpanded = event;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".candidate-cards{\r\n    padding:10px 20px;\r\n}\r\n",
                    "styleUrl": "./mayor.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "candidateService",
                        "type": "CandidateService"
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"candidate-cards p-grid p-justify-left p-nogutter\">\r\n\r\n  <!-- Expanded Candidate Card -->\r\n  <app-candidate-card-expanded class=\"p-col-12\" *ngIf=\"isExpanded\" [candidate]=\"candidate\" [candidateImg]=\"candidateImg\" (isExpanded)=\"onClose($event)\"></app-candidate-card-expanded>\r\n\r\n  <!-- Primary Candidate Card -->\r\n  <div *ngFor=\"let candidate of candidates; let i = index\">\r\n    <app-candidate-card *ngIf=\"candidate\" [candidate]=\"candidate\" [candidateImg]=\"candidateImages[i]\" (emitCandidateData)=\"getCandidate($event)\" (emitCandidateImage)=\"getCandidateImg($event)\"></app-candidate-card>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "OutsideMoneyBarComponent",
            "id": "component-OutsideMoneyBarComponent-d3b250857824362152195ba764832a29",
            "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "outside-money-bar",
            "styleUrls": [
                "./outside-money-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./outside-money-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "oppose",
                    "line": 15,
                    "type": "number"
                },
                {
                    "name": "support",
                    "line": 14,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartPlugins",
                    "defaultValue": "[ pluginDataLabels ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "stackedHorizontalBarChartData",
                    "defaultValue": "[\r\n    {\r\n      data: [1],\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(0, 119, 255, 0.8)',\r\n      borderColor: 'rgba(0, 119, 255, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0, 119, 255, 1)',\r\n      hoverBorderColor:'rgba(0, 119, 255, 1)',\r\n    },\r\n\r\n    {\r\n      data: [1],\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(255, 113, 25, 0.8)',\r\n      borderColor: 'rgba(255, 113, 25, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(255, 113, 25, 1)',\r\n      hoverBorderColor:'rgba(255, 113, 25, 1)',\r\n    },\r\n   \r\n  ]",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "stackedHorizontalBarChartOptions",
                    "defaultValue": "{\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n\r\n    layout: {\r\n      padding: {\r\n        left: 0,\r\n        right: 20,\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n        \r\n        ticks: {\r\n          suggestedMin: 0,\r\n          suggestedMax: 900000\r\n        }\r\n      }],\r\n\r\n      yAxes: [{\r\n        display: false,\r\n        gridLines: {\r\n          color: \"#727272\",\r\n        },\r\n        ticks: {\r\n          min: 0,\r\n        }\r\n\r\n      }],\r\n    },\r\n    plugins: { datalabels: {\r\n      anchor: 'end',\r\n      align: 'end',\r\n      textAlign: 'left',\r\n      color: '#ffffff',\r\n\r\n      font: {\r\n        size: 16,\r\n        weight: 'bold',\r\n      },\r\n\r\n      formatter: function(value, context) {\r\n        return context.dataset.label;\r\n      }\r\n    }}\r\n  }",
                    "type": "ChartOptions",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "stackedHorizontalBarChartType",
                    "defaultValue": "'horizontalBar'",
                    "type": "ChartType",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "title",
                    "defaultValue": "'Outside Money'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "'Amount of money raised and spent by independent expenditure committees spent in support or opposition of a candidate but not contributed directly to their campaign.'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "totalExpenditures",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "mNumberFormatter",
                    "args": [
                        {
                            "name": "num",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 125,
                    "jsdoctags": [
                        {
                            "name": "num",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, Input } from '@angular/core';\r\n\r\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\r\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\r\n\r\nimport { RoundCurrencyPipe } from '../round-currency.pipe';\r\n\r\n@Component({\r\n  selector: 'outside-money-bar',\r\n  templateUrl: './outside-money-bar.component.html',\r\n  styleUrls: ['./outside-money-bar.component.scss'],\r\n})\r\nexport class OutsideMoneyBarComponent implements OnChanges {\r\n  @Input() support: number;\r\n  @Input() oppose: number;\r\n  \r\n  title: string = 'Outside Money';\r\n  tooltipText: string = 'Amount of money raised and spent by independent expenditure committees spent in support or opposition of a candidate but not contributed directly to their campaign.';\r\n  totalExpenditures: string;\r\n\r\n\r\n  stackedHorizontalBarChartType: ChartType = 'horizontalBar';\r\n  stackedHorizontalBarChartData: ChartDataSets[] = [\r\n    {\r\n      data: [1],\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(0, 119, 255, 0.8)',\r\n      borderColor: 'rgba(0, 119, 255, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(0, 119, 255, 1)',\r\n      hoverBorderColor:'rgba(0, 119, 255, 1)',\r\n    },\r\n\r\n    {\r\n      data: [1],\r\n      barPercentage: 0.4,\r\n      categoryPercentage: 1.0,\r\n      backgroundColor: 'rgba(255, 113, 25, 0.8)',\r\n      borderColor: 'rgba(255, 113, 25, 1)',\r\n      borderWidth:1,\r\n      hoverBackgroundColor:'rgba(255, 113, 25, 1)',\r\n      hoverBorderColor:'rgba(255, 113, 25, 1)',\r\n    },\r\n   \r\n  ];\r\n\r\n  stackedHorizontalBarChartOptions: ChartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n\r\n    layout: {\r\n      padding: {\r\n        left: 0,\r\n        right: 20,\r\n      },\r\n    },\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    scales: {\r\n      xAxes: [{\r\n        display: false,\r\n        \r\n        ticks: {\r\n          suggestedMin: 0,\r\n          suggestedMax: 900000\r\n        }\r\n      }],\r\n\r\n      yAxes: [{\r\n        display: false,\r\n        gridLines: {\r\n          color: \"#727272\",\r\n        },\r\n        ticks: {\r\n          min: 0,\r\n        }\r\n\r\n      }],\r\n    },\r\n    plugins: { datalabels: {\r\n      anchor: 'end',\r\n      align: 'end',\r\n      textAlign: 'left',\r\n      color: '#ffffff',\r\n\r\n      font: {\r\n        size: 16,\r\n        weight: 'bold',\r\n      },\r\n\r\n      formatter: function(value, context) {\r\n        return context.dataset.label;\r\n      }\r\n    }}\r\n  }\r\n\r\n  chartPlugins = [ pluginDataLabels ];\r\n\r\n\r\n  constructor(private currencyDisplayPipe: RoundCurrencyPipe) {}\r\n\r\n  ngOnChanges() {\r\n\r\n    this.stackedHorizontalBarChartData[0].data = [this.support];\r\n    this.stackedHorizontalBarChartData[0].label = \r\n      `Support\\n$${this.mNumberFormatter(this.support)}`;\r\n\r\n    this.stackedHorizontalBarChartData[1].data = [this.oppose];\r\n    this.stackedHorizontalBarChartData[1].label = \r\n      `Oppose\\n$${this.mNumberFormatter(this.oppose)}`;\r\n\r\n    const total = this.support + this.oppose;\r\n    this.totalExpenditures = `$${this.mNumberFormatter(total)}`;\r\n\r\n  }\r\n\r\n  mNumberFormatter(num: number) {\r\n    return this.currencyDisplayPipe.transform(num, 1, '10000');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n.title {\r\n  padding: 0;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: $vvdarkblue;\r\n}\r\n\r\n.helper-tip {\r\n  color: $vvgrey;\r\n  font-size: 10px;\r\n}\r\n\r\nh2 {\r\n  font-weight: normal;\r\n  font-size: 12px;\r\n  color: $vvgrey;\r\n  margin: 5px 0px 10px 0px;\r\n}\r\n\r\nh3 {\r\n  font-size: 18px;\r\n  color: $vvdarkgrey;\r\n}\r\n\r\ni {\r\n  cursor: pointer;\r\n}\r\n\r\n.outside-money{\r\n  grid-column: 1 / 5;\r\n  border:1px solid #efefef;\r\n  margin-bottom: 10px;\r\n  padding-bottom: 30px;\r\n  justify-self: stretch;\r\n  background-color: $vvdarkgrey;\r\n  color:#fff;\r\n\r\n  .title, .helper-tip, .raised{\r\n      color:#fff;\r\n      h2, h3{\r\n          color:#fff;\r\n          margin: 0px 0px 5px 0px;\r\n      }\r\n  }\r\n\r\n  .chart-container-outside{\r\n      height:10vh; \r\n      width:58vw;\r\n      border-left:1px solid #727272;\r\n      margin-left:40px;\r\n  }\r\n  \r\n  .outside-grid{\r\n      display: grid;\r\n      grid-template-columns:60vw 0.8fr;\r\n      justify-self: stretch;\r\n     \r\n      .raised{\r\n          padding:20px 0px 20px 30px;\r\n          text-align: left;\r\n          border-left: 1px solid #727272;\r\n          align-self: center;\r\n      }\r\n  }\r\n}\r\n",
                    "styleUrl": "./outside-money-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "currencyDisplayPipe",
                        "type": "RoundCurrencyPipe"
                    }
                ],
                "line": 105,
                "jsdoctags": [
                    {
                        "name": "currencyDisplayPipe",
                        "type": "RoundCurrencyPipe",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"outside-money\">\r\n  <div class=\"title\">\r\n    <p>\r\n      {{title}}\r\n      <sup>\r\n        <i\r\n          class=\"helper-tip fa fa-question-circle\"\r\n          aria-hidden=\"true\"\r\n          [matTooltip]=\"tooltipText\"\r\n        >\r\n        </i>\r\n      </sup>\r\n    </p>\r\n  </div>\r\n  <div class=\"outside-grid\">\r\n    <div  class=\"chart-container-outside\">\r\n      <canvas baseChart\r\n        [chartType]=\"stackedHorizontalBarChartType\"\r\n        [datasets]=\"stackedHorizontalBarChartData\"\r\n        [options]=\"stackedHorizontalBarChartOptions\"\r\n        [plugins]=\"chartPlugins\"\r\n      ></canvas>\r\n    </div>\r\n\r\n    <div class=\"raised\">\r\n      <h2>Total Expenditures</h2>\r\n      <!-- <h3> {{ total | currency : 'USD' : 'symbol' : '1.0-0' }}</h3> -->\r\n      <h3> {{ totalExpenditures }}</h3>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "RaisedInOutDonutComponent",
            "id": "component-RaisedInOutDonutComponent-a17a257bbfa3856031908ac40ace41ae",
            "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "raised-in-out-donut",
            "styleUrls": [
                "./raised-in-out-donut.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./raised-in-out-donut.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "areaName",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "inside",
                    "line": 16,
                    "type": "number"
                },
                {
                    "name": "jurisdiction",
                    "line": 19,
                    "type": "string"
                },
                {
                    "name": "jurisdictionSuffix",
                    "line": 20,
                    "type": "string"
                },
                {
                    "name": "outside",
                    "line": 17,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartPlugins",
                    "defaultValue": "[ pluginDataLabels ]",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "doughnutChartColors",
                    "defaultValue": "[\r\n    { backgroundColor: ['#3392ff', '#bfd63b'] },\r\n  ]",
                    "type": "Color[]",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "doughnutChartData",
                    "defaultValue": "[{\r\n    data: [1,1],\r\n  }]",
                    "type": "ChartDataSets[]",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "doughnutChartLabels",
                    "type": "Label[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "doughnutChartOptions",
                    "defaultValue": "{\r\n    // responsive: true,\r\n    responsive: false,\r\n    maintainAspectRatio: false,\r\n    cutoutPercentage: 60,\r\n    animation: {\r\n      animateRotate: true,\r\n    },\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    plugins: {\r\n      datalabels: {\r\n        anchor: 'start',\r\n        align: 'start',\r\n        color: '#4e4e4e',\r\n        textAlign:'center',\r\n        display: 'auto',\r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n\r\n        formatter: (value, context) => {\r\n          return this.doughnutChartLabels[context.dataIndex];\r\n        },\r\n      },\r\n    },\r\n  }",
                    "type": "ChartOptions",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "doughnutChartType",
                    "defaultValue": "'doughnut'",
                    "type": "ChartType",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "faQuestionCircle",
                    "defaultValue": "faQuestionCircle",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "jurisdictionComplete",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "title",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "tooltipText",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "mNumberFormatter",
                    "args": [
                        {
                            "name": "num",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 100,
                    "jsdoctags": [
                        {
                            "name": "num",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, Input } from '@angular/core';\r\n\r\nimport * as pluginDataLabels from 'chartjs-plugin-datalabels';\r\nimport { ChartOptions, ChartType, ChartDataSets } from 'chart.js';\r\nimport { Color, Label } from 'ng2-charts';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { RoundCurrencyPipe } from '../round-currency.pipe'\r\n\r\n@Component({\r\n  selector: 'raised-in-out-donut',\r\n  templateUrl: './raised-in-out-donut.component.html',\r\n  styleUrls: ['./raised-in-out-donut.component.scss'],\r\n})\r\nexport class RaisedInOutDonutComponent implements OnChanges {\r\n  @Input() inside: number;\r\n  @Input() outside: number;\r\n  @Input() areaName: string; // Example: City of San Diego\r\n  @Input() jurisdiction: string; // Example: City, District\r\n  @Input() jurisdictionSuffix?: string; // Example '1', '5'\r\n\r\n  faQuestionCircle = faQuestionCircle;\r\n\r\n  title: string;\r\n  tooltipText: string;\r\n  jurisdictionComplete: string;\r\n\r\n\r\n  doughnutChartType: ChartType = 'doughnut';\r\n  doughnutChartData: ChartDataSets[] = [{\r\n    data: [1,1],\r\n  }];\r\n  \r\n  doughnutChartLabels: Label[];\r\n\r\n\r\n  doughnutChartColors: Color[] = [\r\n    { backgroundColor: ['#3392ff', '#bfd63b'] },\r\n  ];\r\n\r\n  doughnutChartOptions: ChartOptions = {\r\n    // responsive: true,\r\n    responsive: false,\r\n    maintainAspectRatio: false,\r\n    cutoutPercentage: 60,\r\n    animation: {\r\n      animateRotate: true,\r\n    },\r\n\r\n    legend: {\r\n      display: false,\r\n    },\r\n\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n\r\n    plugins: {\r\n      datalabels: {\r\n        anchor: 'start',\r\n        align: 'start',\r\n        color: '#4e4e4e',\r\n        textAlign:'center',\r\n        display: 'auto',\r\n\r\n        font: {\r\n          size: 16,\r\n          weight: 'bold',\r\n        },\r\n\r\n        formatter: (value, context) => {\r\n          return this.doughnutChartLabels[context.dataIndex];\r\n        },\r\n      },\r\n    },\r\n  }\r\n\r\n  chartPlugins = [ pluginDataLabels ];\r\n\r\n\r\n  constructor(private currencyDisplayPipe: RoundCurrencyPipe) {}\r\n\r\n  ngOnChanges() {\r\n    \r\n    this.jurisdictionComplete = this.jurisdiction;\r\n    this.jurisdictionComplete += (this.jurisdictionSuffix) ? ` ${this.jurisdictionSuffix}` : '';\r\n    \r\n    this.title = `In vs. Out of ${this.jurisdictionComplete}`;\r\n    this.tooltipText = `Total campaign funds raised in the ${this.areaName} versus funds raised outside of city limits.`;\r\n    \r\n    this.doughnutChartData[0].data = [this.inside, this.outside];\r\n\r\n    this.doughnutChartLabels = [\r\n      `In\\n$${this.mNumberFormatter(this.inside)}`,\r\n      `Out\\n$${this.mNumberFormatter(this.outside)}`\r\n    ];\r\n\r\n  }\r\n\r\n  mNumberFormatter(num: number) {\r\n    return this.currencyDisplayPipe.transform(num, 1, '10000');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\ni {\r\n    cursor: pointer;\r\n}\r\n\r\n.title {\r\n    padding: 0;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: $vvdarkblue;\r\n}\r\n\r\n.chart-container{\r\n    position: relative; \r\n    height:20vh; \r\n    width:20vw;\r\n    margin:auto;\r\n}\r\n\r\n.helper-tip {\r\n    color: $vvgrey;\r\n    font-size: 10px;\r\n}\r\n\r\n\r\n// Expanded Card Adjustments for Smaller Screens\r\n@media only screen and (max-width: 1200px) {\r\n   .in-out-district{\r\n       margin-bottom:40px;\r\n   }\r\n   .chart-container{\r\n        height:20vh !important; \r\n        width:60vw !important;\r\n    }\r\n    .chart-container-raised{\r\n        height:25vh !important; \r\n        width:60vw !important;  \r\n    } \r\n}\r\n\r\n::ng-deep .mat-tooltip {\r\n    font-size: 16px;\r\n}\r\n",
                    "styleUrl": "./raised-in-out-donut.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "currencyDisplayPipe",
                        "type": "RoundCurrencyPipe"
                    }
                ],
                "line": 78,
                "jsdoctags": [
                    {
                        "name": "currencyDisplayPipe",
                        "type": "RoundCurrencyPipe",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"in-out-district\">\r\n\r\n  <div class=\"title\">\r\n    <p> {{title}}\r\n      <sup>\r\n        <i\r\n          class=\"helper-tip\"\r\n          aria-hidden=\"true\"\r\n          [matTooltip]=\"tooltipText\"\r\n        >\r\n          <fa-icon [icon]=\"faQuestionCircle\"></fa-icon>\r\n        </i>\r\n      </sup>\r\n    </p>\r\n  </div>\r\n\r\n  <div class=\"chart-container\">\r\n    <canvas #canvas baseChart \r\n      width=\"260\" \r\n      height=\"260\"\r\n      [chartType]=\"doughnutChartType\"\r\n      [datasets]=\"doughnutChartData\"      \r\n      [options]=\"doughnutChartOptions\"\r\n      [colors]=\"doughnutChartColors\"\r\n      [plugins]=\"chartPlugins\"\r\n    > </canvas>\r\n  </div> \r\n</div>\r\n"
        },
        {
            "name": "SplashComponent",
            "id": "component-SplashComponent-abf96496bcdb4064d2e02f5f278dfb1e",
            "file": "src/app/components/splash/splash.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-splash",
            "styleUrls": [
                "./splash.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./splash.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "campaignTotals",
                    "defaultValue": "{\r\n    mayor: '0',\r\n    cityAttorney: '0',\r\n    cityCouncil: '0'\r\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "candidateCounts",
                    "defaultValue": "{\r\n    mayor: '0',\r\n    cityAttorney: '0',\r\n    cityCouncil: '0'\r\n  }",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "faBalanceScale",
                    "defaultValue": "faBalanceScale",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "faBinoculars",
                    "defaultValue": "faBinoculars",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "faGavel",
                    "defaultValue": "faGavel",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "faHandshake",
                    "defaultValue": "faHandshake",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "faMapMarkedAlt",
                    "defaultValue": "faMapMarkedAlt",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "faMoneyBill",
                    "defaultValue": "faMoneyBill",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "faUniversity",
                    "defaultValue": "faUniversity",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42
                },
                {
                    "name": "selectOffice",
                    "args": [
                        {
                            "name": "officeType",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "jsdoctags": [
                        {
                            "name": "officeType",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SidenavService } from '../../services';\r\nimport { CandidateService } from '../../services/candidate.service';\r\n\r\nimport { \r\n  faBinoculars, faMoneyBill, faHandshake, faGavel, \r\n  faUniversity, faBalanceScale, faMapMarkedAlt \r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-splash',\r\n  templateUrl: './splash.component.html',\r\n  styleUrls: ['./splash.component.scss']\r\n})\r\nexport class SplashComponent implements OnInit {\r\n  // fortawesome icons\r\n  faBinoculars = faBinoculars; \r\n  faMoneyBill = faMoneyBill; \r\n  faHandshake = faHandshake; \r\n  faGavel = faGavel;\r\n  faUniversity = faUniversity;\r\n  faBalanceScale = faBalanceScale;\r\n  faMapMarkedAlt = faMapMarkedAlt;\r\n\r\n  constructor(\r\n    private sidenavService: SidenavService,\r\n    private candidateService: CandidateService\r\n  ) { }\r\n\r\n  campaignTotals = {\r\n    mayor: '0',\r\n    cityAttorney: '0',\r\n    cityCouncil: '0'\r\n  }\r\n\r\n  candidateCounts = {\r\n    mayor: '0',\r\n    cityAttorney: '0',\r\n    cityCouncil: '0'\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.candidateService.getCampaignTotals()\r\n      .subscribe(totals => this.campaignTotals = totals);\r\n\r\n    this.candidateService.getNumberOfCandidates()\r\n      .subscribe(counts => this.candidateCounts = counts);\r\n\r\n  }\r\n\r\n  selectOffice(officeType: string) {\r\n    this.sidenavService.emitCandidateTypeSplash(officeType);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n@import \"../../styles/global\";\r\n\r\n.splashpage{\r\n  padding:20px 40px 0px 30px;\r\n}\r\n.whorwe{\r\n \r\n  background-image: url(\"../../../assets/splash/bg-whorwe@2x.jpg\");\r\n  background-size: 100% 100%;\r\n    background-position: 50% 50%;\r\n  color:#fff;\r\n  margin: auto;\r\n  text-align:center;\r\n  padding:40px;\r\n  font-weight: 100;\r\n  box-shadow: $vvshadow;\r\n\r\n  .goals{\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    align-content: center;\r\n    column-gap: 20px;\r\n    margin: 0px auto 40px auto;\r\n    \r\n\r\n    .bullet{\r\n      font-weight:bold;\r\n      font-size:14px;\r\n      max-width:170px;\r\n      margin: auto;\r\n    }\r\n\r\n    .bullet-icon > fa-icon{\r\n      display: block;\r\n      margin: 20px auto;\r\n    }\r\n  }\r\n\r\n\r\n  h1{\r\n    font-size:18px;\r\n    font-weight:bold;\r\n    padding:0;\r\n    margin-top:0px;\r\n    margin-bottom:20px;\r\n    color:#fff;\r\n\r\n  }\r\n  .vv-description{\r\n    margin-top:0px;\r\n    margin-bottom:20px;\r\n    font-size:14px;\r\n    line-height: 1.4;\r\n    max-width: 600px;\r\n    margin-left:auto;\r\n    margin-right:auto;\r\n \r\n  }\r\n  a {\r\n    color: $vvyellow;\r\n    text-decoration: none;\r\n    \r\n   \r\n    &:hover {\r\n        text-decoration: underline;\r\n      }\r\n  }\r\n}\r\n\r\n.ftm{\r\n  margin: 20px auto 20px auto;\r\n  text-align:center;\r\n  padding:40px 40px 60px 40px;\r\n  font-weight: 100;\r\n  box-shadow: $vvshadow;\r\n  color:#4E4E4E;\r\n  background-color: #fff;\r\n  h1{\r\n    margin: 0px;\r\n  }\r\n  p{\r\n    margin:10px 0px 20px 0px;\r\n    line-height: 1.4;\r\n  }\r\n  .ftm_caption{\r\n   \r\n    display: block;\r\n    margin:10px auto 20px auto;\r\n  }\r\n  .choose{\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    align-content: center;\r\n    \r\n\r\n    div{\r\n      border-right:2px solid $vvbackground;\r\n    }\r\n    div:last-child{\r\n      border-right:none;\r\n    }\r\n\r\n\r\n      .cta{\r\n\r\n          @include button-styles;\r\n          padding: 10px 20px;\r\n          max-width: 200px;\r\n          text-decoration: none;\r\n          a{\r\n            text-decoration: none;\r\n          }\r\n          fa-icon{\r\n            padding: 0px;\r\n            margin: 0px 4px 0px 0px;\r\n          }\r\n      }\r\n      .cta:hover{\r\n            background-color: $vvlightblue;\r\n        }\r\n}\r\n\r\n    .racename{\r\n        font-size: 20px;\r\n        margin-bottom: 30px;\r\n     \r\n  }\r\n  .raised{\r\n    margin:40px 0px  5px 0px;\r\n  }\r\n  .candidate_num{\r\n    margin:10px 0px  5px 0px;\r\n  }\r\n  h3{\r\n    font-size:20px;\r\n    margin: 0px;\r\n  }\r\n  .amount_raised{\r\n    color:#289A58;\r\n  }\r\n  \r\n}\r\n\r\n.sources{\r\n  margin-top:60px;\r\n  font-size:14px;\r\n  a{\r\n    color:$vvlightblue;\r\n  }\r\n  p{\r\n    margin:0px !important;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n\r\n  .goals{\r\n    grid-template-columns: 1fr 1fr!important;\r\n    row-gap: 20px;\r\n    max-width:500px;\r\n   \r\n  }\r\n  .choose{\r\n    grid-template-columns: 1fr !important;\r\n    row-gap: 20px;\r\n    div{\r\n      border-bottom:2px solid $vvbackground !important;\r\n      border-right:none!important;\r\n      padding-bottom: 40px;\r\n    }\r\n    div:last-child{\r\n      border-bottom:none!important;\r\n      padding-bottom: 0px;\r\n    }\r\n  }\r\n  \r\n}\r\n\r\n@media only screen and (max-width: 400px) {\r\n\r\n\r\n  .goals{\r\n    grid-template-columns: 1fr!important;\r\n    row-gap: 20px;\r\n    max-width:500px;\r\n   \r\n  }\r\n\r\n\r\n}",
                    "styleUrl": "./splash.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "sidenavService",
                        "type": "SidenavService"
                    },
                    {
                        "name": "candidateService",
                        "type": "CandidateService"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "sidenavService",
                        "type": "SidenavService",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"splashpage\">\r\n  <div class=\"whorwe\" [style.backgroundSize]=\"'cover'\">\r\n      <h1>Who's Behind the Voters' Voice Initiatives?</h1>\r\n      <p class=\"vv-description\">The Voters’ Voice Initiatives is a non-partisan coalition (including <a href=\"https://represent.us/\">Represent.us</a> and the \r\n        <a href=\"https://www.lwv.org/\">League of Women Voters</a>) working to give “We The People” a greater voice in our local government by:</p>\r\n        <div class=\"goals\">\r\n            <div>\r\n                <i class=\"bullet-icon\">\r\n                    <fa-icon [icon]=\"faBinoculars\" size=\"2x\"></fa-icon>\r\n                </i>\r\n                <p class=\"bullet\">Improving Transparency in Campaign Finance</p>\r\n            </div>\r\n            <div>\r\n                <i class=\"bullet-icon\">\r\n                    <fa-icon [icon]=\"faMoneyBill\" size=\"2x\"></fa-icon>\r\n                </i>\r\n                <p class=\"bullet\">Providing Full Disclosure on the Flow of Money</p>\r\n            </div>\r\n            <div>\r\n                <i class=\"bullet-icon\">\r\n                    <fa-icon [icon]=\"faHandshake\" size=\"2x\"></fa-icon>\r\n                </i>\r\n                <p class=\"bullet\">Reducing the Potential for Corruption</p>\r\n            </div>\r\n            <div>\r\n                <i class=\"bullet-icon\">\r\n                    <fa-icon [icon]=\"faGavel\" size=\"2x\"></fa-icon>\r\n                </i>\r\n                <p class=\"bullet\">Increasing Accountability in Government</p>\r\n            </div>\r\n        </div>\r\n      <a routerLink=\"/about\">Learn About Us</a>\r\n  </div>\r\n  <div class=\"ftm\">\r\n    <h1>Follow the Money</h1>\r\n    <p class=\"ftm_caption\">See how local campaigns are financed so you can be informed before you vote.</p>\r\n    <div class=\"choose\">\r\n        <div>\r\n            <h2 class=\"racename\">Mayor</h2> \r\n            <a class=\"cta\" routerLinkActive=\"active-link\" routerLink=\"/mayor\" (click)=\"selectOffice('mayor')\">\r\n                <fa-icon [icon]=\"faUniversity\"></fa-icon>\r\n                See Candidates\r\n            </a>\r\n            <p class=\"raised\">Total Raised</p>\r\n            <h3 class=\"amount_raised\">${{ campaignTotals.mayor | roundCurrencyDisplay: 1 }}</h3>\r\n            <p class=\"candidate_num\">Candidates</p>\r\n            <h3>{{ candidateCounts.mayor }}</h3>\r\n        </div>\r\n        <div>\r\n            <h2 class=\"racename\">City Attorney</h2> \r\n            <a class=\"cta\" routerLinkActive=\"active-link\" routerLink=\"/city-attorney\" (click)=\"selectOffice('city-attorney')\">\r\n                <fa-icon [icon]=\"faBalanceScale\"></fa-icon>\r\n                See Candidates\r\n            </a>\r\n            <p class=\"raised\">Total Raised</p>\r\n            <h3 class=\"amount_raised\">${{ campaignTotals.cityAttorney | roundCurrencyDisplay: 1 }}</h3>\r\n            <p class=\"candidate_num\">Candidates</p>\r\n            <h3>{{ candidateCounts.cityAttorney }}</h3>\r\n        </div>\r\n        <div>\r\n            <h2 class=\"racename\">City Council</h2> \r\n            <a class=\"cta\" routerLinkActive=\"active-link\" routerLink=\"/city-council\" (click)=\"selectOffice('city council')\">\r\n                <fa-icon [icon]=\"faMapMarkedAlt\"></fa-icon>\r\n                Choose District\r\n            </a>\r\n            <p class=\"raised\">Total Raised</p>\r\n            <h3 class=\"amount_raised\">${{ campaignTotals.cityCouncil | roundCurrencyDisplay: 1 }}</h3>\r\n            <p class=\"candidate_num\">Candidates</p>\r\n            <h3>{{ candidateCounts.cityCouncil }}</h3>\r\n        </div>\r\n    </div>\r\n    <div class=\"sources\"><p>All of our data is sourced directly from the <a href=\"https://ssl.netfile.com/static/agency/csd/\" target=\"_blank\">City of San Diego</a> public records.</p></div>\r\n\r\n</div>\r\n \r\n</div>"
        },
        {
            "name": "UnderConstructionComponent",
            "id": "component-UnderConstructionComponent-02b371072099a03dfe4290202ef7a63b",
            "file": "src/app/components/under-construction/under-construction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-under-construction",
            "styleUrls": [
                "./under-construction.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./under-construction.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-under-construction',\r\n  templateUrl: './under-construction.component.html',\r\n  styleUrls: ['./under-construction.component.scss']\r\n  \r\n})\r\nexport class UnderConstructionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n@import \"../../styles/global\";\r\n\r\n\r\n.construction{\r\n   \r\n    width:100%;\r\n    height: 100%;\r\n    margin:auto;\r\n    background-color: $vvbackground;\r\n  \r\n\r\n    .construction-box{\r\n        margin:auto;\r\n        max-width: 300px;\r\n    }\r\n\r\n}\r\n.crane{\r\n    margin:20vh auto 10px auto;\r\n    width:200px;\r\n    height:auto;\r\n    display: block;\r\n}\r\n\r\n",
                    "styleUrl": "./under-construction.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"construction\">\r\n \r\n  <img class=\"crane\" src=\"../../../assets/under-construction/under-construction.png\"  width=\"67%\" height=\"auto\" alt=\"crane\"/>\r\n  <div class=\"construction-box\">\r\n   \r\n    <p class=\"h-sub\">This page is</p>\r\n    <h1>\r\n      Under Construction\r\n    </h1>\r\n  </div>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CandidateCardComponent"
                        },
                        {
                            "name": "CandidateCardExpandedComponent"
                        },
                        {
                            "name": "CandidateNavigationComponent"
                        },
                        {
                            "name": "CityAttorneyComponent"
                        },
                        {
                            "name": "CityCouncilDistrictComponent"
                        },
                        {
                            "name": "FaqComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "MayorComponent"
                        },
                        {
                            "name": "RoundCurrencyDisplayPipe"
                        },
                        {
                            "name": "SplashComponent"
                        },
                        {
                            "name": "UnderConstructionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "VvChartsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "VvChartsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DonationsByGroupComponent"
                        },
                        {
                            "name": "OutsideMoneyBarComponent"
                        },
                        {
                            "name": "RaisedInOutDonutComponent"
                        },
                        {
                            "name": "RoundCurrencyPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DonationsByGroupComponent"
                        },
                        {
                            "name": "OutsideMoneyBarComponent"
                        },
                        {
                            "name": "RaisedInOutDonutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AmountOver999",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AmountOver9999",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AmountOver99999",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AmountOver999999",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AmountsUnder1000",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BothExtremeHigh",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BothHigh",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BothLow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "candidateAssets",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/assets/candidates/mock-candidateAssetPaths.ts",
                "type": "CandidateAssetsPaths[]",
                "defaultValue": "[\r\n  {\r\n    id: '2423694785',\r\n    calculationsPath: 'assets/candidates/2020/mayor/barbara_bry/barbara_bry.json',\r\n    imagePath: 'assets/candidates/2020/mayor/barbara_bry/barbara_bry.png',\r\n  },\r\n  {\r\n    id: '3321057457',\r\n    calculationsPath: 'assets/candidates/2020/mayor/todd_gloria/todd_gloria.json',\r\n    imagePath:        'assets/candidates/2020/mayor/todd_gloria/todd_gloria.png',\r\n  },\r\n  {\r\n    id: '138487776',\r\n    calculationsPath: 'assets/candidates/2020/city_attorney/cory_briggs/cory_briggs.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '2857364706',\r\n    calculationsPath: 'assets/candidates/2020/city_attorney/marra_w._elliot/marra_w._elliot.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '1381287194',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_1/joe_lacava/joe_lacava.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '556961640',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_1/will_moore/will_moore.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '2802658952',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_3/toni_duran/toni_duran.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '3087659774',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_3/stephen_whitburn/stephen_whitburn.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '2085859416',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_5/joe_leventhal/joe_leventhal.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '537761956',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_5/marni_von_wilpert/marni_von_wilpert.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '1063720306',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_7/raul_campillo/raul_campillo.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '296840038',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_7/noli_zosa/noli_zosa.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '1372856752',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_9/kelvin_h._barrios/kelvin_h._barrios.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '4044118288',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_9/sean_elo/sean_elo.json',\r\n    imagePath: '',\r\n  },\r\n]"
            },
            {
                "name": "candidateNavigationItems",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/assets/candidates/mock-candidateNavigationItems.ts",
                "type": "CandidateNavigation[]",
                "defaultValue": "[\r\n  {\r\n    \"fullName\": \"Barbara Bry\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"2423694785\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Todd Gloria\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"3321057457\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Jarvis Gandy\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"2578134929\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Rich Riel\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"758695280\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Scott Sherman\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"1544527469\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Gita Appelbaum Singh\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"1445910638\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Tasha Williamson\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"2095280904\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Kelvin Barrios\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"1372856752\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Sean Elo-Rivera\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"4044118288\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Sam Bedwell\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"3411381026\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Johnny Lee Dang\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"3215717116\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Andrew Gade\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"1500919237\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Ross Naismith\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"2538494495\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Alex Soto\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"3177441902\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Raul Campillo\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 7\",\r\n    \"id\": \"1063720306\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"7\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Noli Zosa\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 7\",\r\n    \"id\": \"296840038\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"7\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Monty McIntyre\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 7\",\r\n    \"id\": \"4294707016\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"7\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Wendy Wheatcroft\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 7\",\r\n    \"id\": \"378004078\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"7\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Joe Leventhal\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 5\",\r\n    \"id\": \"2085859416\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"5\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Marni Von Wilpert\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 5\",\r\n    \"id\": \"537761956\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"5\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Simon Moghadam\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 5\",\r\n    \"id\": \"1606351465\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"5\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Isaac Wang\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 5\",\r\n    \"id\": \"1082483514\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"5\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Toni Duran\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"2802658952\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Stephen Whitburn\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"3087659774\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Adrian Kwiatkowski\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"984002427\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Michelle Nguyen\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"2698283832\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Chris Olsen\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"1176217471\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Joe LaCava\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"1381287194\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Will Moore\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"556961640\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Aaron Brennan\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"1251542570\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Sam Nejabat\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"3495060548\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Harid (H.) Puentes\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"3322626763\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Louis Rodolico\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"1806575076\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"James Rudolph\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"2312879338\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Lijun (Lily) Zhou\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"59372427\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Cory Briggs\",\r\n    \"fullOfficeName\": \"City Attorney San Diego\",\r\n    \"id\": \"138487776\",\r\n    \"officeType\": \"City Attorney\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Mara Elliott\",\r\n    \"fullOfficeName\": \"City Attorney San Diego\",\r\n    \"id\": \"2857364706\",\r\n    \"officeType\": \"City Attorney\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Pete Mesich\",\r\n    \"fullOfficeName\": \"City Attorney San Diego\",\r\n    \"id\": \"1921282720\",\r\n    \"officeType\": \"City Attorney\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  }\r\n]"
            },
            {
                "name": "CheckCityNameInTooltip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CityNoSuffix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DistrictWithSuffix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})",
                "description": "<p>Each of the named exports below is a what Storybook calls a story. \nThese are like test cases. Each will show up under the title in the\ndefault export above. </p>\n<p>Each story below reuses the Template above</p>\n"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "Equal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "EqualInAndOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ExtremeUnbalanced",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HighInsideLowOutside",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LargeDifferenceFavoringInside",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LargeDifferenceFavoringOutside",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LowInsideHighOutside",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OpposeHigher",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "any"
            },
            {
                "name": "SupportAt9M",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SupportHigher",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "Story<OutsideMoneyBarComponent>",
                "defaultValue": "(args: OutsideMoneyBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "Story<RaisedInOutDonutComponent>",
                "defaultValue": "(args: RaisedInOutDonutComponent) => ({\r\n  props: args,\r\n})",
                "description": "<p>imports: for dependencies that would usually be provided in the module containing the component\nproviders: for component dependencies</p>\n<p>The same template is used for the component stories below it.</p>\n"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts": [
                {
                    "name": "AmountOver999",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AmountOver9999",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AmountOver99999",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AmountOver999999",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AmountsUnder1000",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CheckCityNameInTooltip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CityNoSuffix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DistrictWithSuffix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})",
                    "description": "<p>Each of the named exports below is a what Storybook calls a story. \nThese are like test cases. Each will show up under the title in the\ndefault export above. </p>\n<p>Each story below reuses the Template above</p>\n"
                },
                {
                    "name": "EqualInAndOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HighInsideLowOutside",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LargeDifferenceFavoringInside",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LargeDifferenceFavoringOutside",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LowInsideHighOutside",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                    "type": "Story<RaisedInOutDonutComponent>",
                    "defaultValue": "(args: RaisedInOutDonutComponent) => ({\r\n  props: args,\r\n})",
                    "description": "<p>imports: for dependencies that would usually be provided in the module containing the component\nproviders: for component dependencies</p>\n<p>The same template is used for the component stories below it.</p>\n"
                }
            ],
            "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts": [
                {
                    "name": "BothExtremeHigh",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BothHigh",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "BothLow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Equal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExtremeUnbalanced",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OpposeHigher",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SupportAt9M",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SupportHigher",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                    "type": "Story<OutsideMoneyBarComponent>",
                    "defaultValue": "(args: OutsideMoneyBarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/assets/candidates/mock-candidateAssetPaths.ts": [
                {
                    "name": "candidateAssets",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/assets/candidates/mock-candidateAssetPaths.ts",
                    "type": "CandidateAssetsPaths[]",
                    "defaultValue": "[\r\n  {\r\n    id: '2423694785',\r\n    calculationsPath: 'assets/candidates/2020/mayor/barbara_bry/barbara_bry.json',\r\n    imagePath: 'assets/candidates/2020/mayor/barbara_bry/barbara_bry.png',\r\n  },\r\n  {\r\n    id: '3321057457',\r\n    calculationsPath: 'assets/candidates/2020/mayor/todd_gloria/todd_gloria.json',\r\n    imagePath:        'assets/candidates/2020/mayor/todd_gloria/todd_gloria.png',\r\n  },\r\n  {\r\n    id: '138487776',\r\n    calculationsPath: 'assets/candidates/2020/city_attorney/cory_briggs/cory_briggs.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '2857364706',\r\n    calculationsPath: 'assets/candidates/2020/city_attorney/marra_w._elliot/marra_w._elliot.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '1381287194',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_1/joe_lacava/joe_lacava.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '556961640',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_1/will_moore/will_moore.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '2802658952',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_3/toni_duran/toni_duran.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '3087659774',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_3/stephen_whitburn/stephen_whitburn.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '2085859416',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_5/joe_leventhal/joe_leventhal.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '537761956',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_5/marni_von_wilpert/marni_von_wilpert.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '1063720306',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_7/raul_campillo/raul_campillo.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '296840038',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_7/noli_zosa/noli_zosa.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '1372856752',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_9/kelvin_h._barrios/kelvin_h._barrios.json',\r\n    imagePath: '',\r\n  },\r\n  {\r\n    id: '4044118288',\r\n    calculationsPath: 'assets/candidates/2020/city_council/district_9/sean_elo/sean_elo.json',\r\n    imagePath: '',\r\n  },\r\n]"
                }
            ],
            "src/assets/candidates/mock-candidateNavigationItems.ts": [
                {
                    "name": "candidateNavigationItems",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/assets/candidates/mock-candidateNavigationItems.ts",
                    "type": "CandidateNavigation[]",
                    "defaultValue": "[\r\n  {\r\n    \"fullName\": \"Barbara Bry\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"2423694785\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Todd Gloria\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"3321057457\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Jarvis Gandy\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"2578134929\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Rich Riel\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"758695280\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Scott Sherman\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"1544527469\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Gita Appelbaum Singh\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"1445910638\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Tasha Williamson\",\r\n    \"fullOfficeName\": \"Mayor San Diego\",\r\n    \"id\": \"2095280904\",\r\n    \"officeType\": \"Mayor\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Kelvin Barrios\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"1372856752\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Sean Elo-Rivera\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"4044118288\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Sam Bedwell\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"3411381026\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Johnny Lee Dang\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"3215717116\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Andrew Gade\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"1500919237\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Ross Naismith\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"2538494495\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Alex Soto\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 9\",\r\n    \"id\": \"3177441902\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"9\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Raul Campillo\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 7\",\r\n    \"id\": \"1063720306\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"7\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Noli Zosa\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 7\",\r\n    \"id\": \"296840038\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"7\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Monty McIntyre\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 7\",\r\n    \"id\": \"4294707016\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"7\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Wendy Wheatcroft\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 7\",\r\n    \"id\": \"378004078\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"7\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Joe Leventhal\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 5\",\r\n    \"id\": \"2085859416\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"5\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Marni Von Wilpert\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 5\",\r\n    \"id\": \"537761956\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"5\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Simon Moghadam\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 5\",\r\n    \"id\": \"1606351465\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"5\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Isaac Wang\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 5\",\r\n    \"id\": \"1082483514\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"5\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Toni Duran\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"2802658952\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Stephen Whitburn\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"3087659774\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Adrian Kwiatkowski\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"984002427\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Michelle Nguyen\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"2698283832\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Chris Olsen\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 3\",\r\n    \"id\": \"1176217471\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"3\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Joe LaCava\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"1381287194\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Will Moore\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"556961640\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Aaron Brennan\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"1251542570\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Sam Nejabat\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"3495060548\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Harid (H.) Puentes\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"3322626763\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Louis Rodolico\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"1806575076\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"James Rudolph\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"2312879338\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Lijun (Lily) Zhou\",\r\n    \"fullOfficeName\": \"City Council San Diego - Dist 1\",\r\n    \"id\": \"59372427\",\r\n    \"officeType\": \"City Council\",\r\n    \"seat\": {\r\n      \"name\": \"1\",\r\n      \"type\": \"district\"\r\n    },\r\n    \"inGeneralElection\": false\r\n  },\r\n  {\r\n    \"fullName\": \"Cory Briggs\",\r\n    \"fullOfficeName\": \"City Attorney San Diego\",\r\n    \"id\": \"138487776\",\r\n    \"officeType\": \"City Attorney\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Mara Elliott\",\r\n    \"fullOfficeName\": \"City Attorney San Diego\",\r\n    \"id\": \"2857364706\",\r\n    \"officeType\": \"City Attorney\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": true\r\n  },\r\n  {\r\n    \"fullName\": \"Pete Mesich\",\r\n    \"fullOfficeName\": \"City Attorney San Diego\",\r\n    \"id\": \"1921282720\",\r\n    \"officeType\": \"City Attorney\",\r\n    \"seat\": null,\r\n    \"inGeneralElection\": false\r\n  }\r\n]"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "splash",
                        "pathMatch": "full"
                    },
                    {
                        "path": "splash",
                        "component": "SplashComponent"
                    },
                    {
                        "path": "faq",
                        "component": "FaqComponent"
                    },
                    {
                        "path": "about",
                        "component": "AboutComponent"
                    },
                    {
                        "path": "under-construction",
                        "component": "UnderConstructionComponent"
                    },
                    {
                        "path": "**",
                        "component": "UnderConstructionComponent"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Candidate",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateTree",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/candidate-card-expanded/candidate-card-expanded.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CandidateCardExpandedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "src/app/components/candidate-card/candidate-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CandidateCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/components/candidate-navigation/candidate-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CandidateNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/candidate-navigation/candidate-navigation.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateNavigationWithRoute",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/city-attorney/city-attorney.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CityAttorneyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/city-council-district/city-council-district.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CityCouncilDistrictComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/faq/faq.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FaqComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "src/app/components/mayor/mayor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MayorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/splash/splash.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SplashComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/under-construction/under-construction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnderConstructionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/candidateAssetPaths.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateAssetsPaths",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/candidateCard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateCard",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/candidateJSON.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateJSON",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/candidateNavigation.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/round-currency-display.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RoundCurrencyDisplayPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/candidate-data.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CandidateDataService",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/services/candidate-store.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CandidateStoreService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/services/candidate.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CandidateService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/services/sidenav.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SidenavService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/donations-by-group/donations-by-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DonationsByGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/donationsByGroup.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DonationsByGroup",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/donationsByGroup.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/outsideMoney.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OutsideMoney",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/raisedInOut.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedInOut",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BothExtremeHigh",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BothHigh",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BothLow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Equal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExtremeUnbalanced",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OpposeHigher",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SupportAt9M",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SupportHigher",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-bar/outside-money-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutsideMoneyBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountOver999",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountOver9999",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountOver99999",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountOver999999",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountsUnder1000",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckCityNameInTooltip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CityNoSuffix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DistrictWithSuffix",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EqualInAndOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HighInsideLowOutside",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeDifferenceFavoringInside",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeDifferenceFavoringOutside",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LowInsideHighOutside",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-out-donut/raised-in-out-donut.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RaisedInOutDonutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/round-currency.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RoundCurrencyPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/assets/candidates/mock-candidateAssetPaths.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "candidateAssets",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/assets/candidates/mock-candidateNavigationItems.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "candidateNavigationItems",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}