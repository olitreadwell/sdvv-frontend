{
    "pipes": [
        {
            "name": "RoundCurrencyDisplayPipe",
            "id": "pipe-RoundCurrencyDisplayPipe-296bdb9466b33c6b10311c659dc0d9bc433973aa620ace05877a902ff10b9465e72cba36fa5b694c9d58c8595931b1d645713a303b2d74ede884c4c42b5905f8",
            "file": "src/app/public/pipes/round-currency-display.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "roundCurrencyDisplay",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"roundCurrencyDisplay\",\r\n})\r\nexport class RoundCurrencyDisplayPipe implements PipeTransform {\r\n  transform(input: any, args?: any): any {\r\n    var exp,\r\n      limit = 10000,\r\n      suffixes = [\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"];\r\n\r\n    if (Number.isNaN(input)) {\r\n      return null;\r\n    }\r\n \r\n    if (parseInt(input) < limit) {\r\n      return Number(input).toLocaleString('en-US');\r\n    }\r\n\r\n    exp = Math.floor(Math.log(input) / Math.log(1000));\r\n\r\n    return (input / Math.pow(1000, exp)).toFixed(args) + suffixes[exp - 1];\r\n  }\r\n}\r\n"
        },
        {
            "name": "RoundCurrencyPipe",
            "id": "pipe-RoundCurrencyPipe-5275a9601220fcba2204c6fb258881e5690d429c13065c46905c6fc76766858a171144c905d4ccbeaec0b7e04fda4e6cc99a0843b43ab821b6d56e3e29eeb8c5",
            "file": "src/app/vv-charts/round-currency.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "threshold",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "input",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "threshold",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "roundCurrency",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: \"roundCurrency\",\r\n})\r\nexport class RoundCurrencyPipe implements PipeTransform {\r\n  transform(input: any, args?: any, threshold?: any): any {\r\n    var exp,\r\n      oneMillion = 1000000,\r\n      minimum = Number.isNaN(threshold) ? oneMillion : Number(threshold),\r\n      suffixes = [\"k\", \"M\", \"G\", \"T\", \"P\", \"E\"];\r\n\r\n    if (Number.isNaN(input)) {\r\n      return null;\r\n    }\r\n \r\n    // if (input < oneMillion) {\r\n    if (input < minimum || input < 1000) {\r\n      return Number(input).toLocaleString('en-US');\r\n    }\r\n\r\n    exp = Math.floor(Math.log(input) / Math.log(1000));\r\n\r\n    return (input / Math.pow(1000, exp)).toFixed(args) + suffixes[exp - 1];\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "Candidate",
            "id": "interface-Candidate-90ac94cbf086a6c636f7c9d609642bf95ab80737f56cf5bae8261eae3c233e92ba0e008179c48b715a1e278fbf21c70836a62908bb2d5a6c4f8eaa35db98be0c",
            "file": "src/app/shared/interfaces/candidate.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Candidate {\r\n    name: string;\r\n    title: string;\r\n    raised: string;\r\n    donors: string;\r\n}\r\n\r\nexport interface CandidateTree {\r\n    title: string;\r\n    name: string;\r\n    candidates: Record<string, string>;\r\n}\r\n",
            "properties": [
                {
                    "name": "donors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Candidate",
            "id": "interface-Candidate-12adf20b90191d66a22787c7b59b575f3c241cf9d00d1d749f3a8b9c4d58cbcfbfe50c5b1f9bb87c78649cb8eb286dc372a6beef8253c1f17e62793e131122e0-1",
            "file": "src/app/store/interfaces/candidate.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Candidate {\r\n  id: string;\r\n  full_name: string; // 'First Last'\r\n  description: string;\r\n  image_url: string;\r\n  website: string;\r\n  agency: string; // Examples: 'City of San Diego'\r\n  office: string; // Examples: 'City Council', 'Mayor'\r\n  district: string | null; // '9'\r\n  year: string; // '2020'\r\n  in_general_election: boolean;\r\n  full_office_name: string; // Examples: 'Mayor San Diego', 'City Council San Diego - Dist 9\r\n  jurisdiction: string; // Examples: 'City',  'District'\r\n  total_contributions: string; // raised\r\n  contributor_count: string; // donors\r\n}\r\n",
            "properties": [
                {
                    "name": "agency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "contributor_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "district",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "full_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "full_office_name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image_url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "in_general_election",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "jurisdiction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "total_contributions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Candidate-1"
        },
        {
            "name": "CandidateCard",
            "id": "interface-CandidateCard-8989f4787571850aecd9bd79841e08c6e8dd4fcca94baec5c1aa800f14e81ec4196bd57f201ccac6fd5bd0d47d65a87dd3d889e3d2abae7c87ce3a48af1936a1",
            "file": "src/app/shared/interfaces/candidateCard.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CandidateCard {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  raised: number;\r\n  donors: number;\r\n  candidateImgURL: string;\r\n  website: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "candidateImgURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "donors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CandidateCard",
            "id": "interface-CandidateCard-c21e548b3d8c6c11f34725dc9ba1c38154aa5e9a6d2329dbad3c9bdb6027d2babc8544e6858bb4055560bf7f766cdb6ca36fc2450ce06c59860080e317470429-1",
            "file": "src/app/store/interfaces/candidate.card.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CandidateCard {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  year: string;\r\n  office: string;\r\n  district: string;\r\n  raised: string;\r\n  donors: string;\r\n  candidateImgURL: string;\r\n  website: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "candidateImgURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "district",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "donors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "CandidateCard-1"
        },
        {
            "name": "CandidateDetailsHeader",
            "id": "interface-CandidateDetailsHeader-23ac4187aa520f238d07bfdecc451ee3c803cedb37de553b6f583d89e5ebcafac6af86c7e6d5749d6531bc7cc2bda18c9c9fab9c6c70776d75034d0577f8e128",
            "file": "src/app/store/interfaces/candidate-details-header.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CandidateDetailsHeader {\r\n  id: string;\r\n  imageUrl: string;\r\n  candidateName: string;\r\n  description: string;\r\n  website: string;\r\n  raised: string;\r\n  donors: string;\r\n  averageDonation: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "averageDonation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "candidateName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "donors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CandidateDetailsOutsideMoney",
            "id": "interface-CandidateDetailsOutsideMoney-59db6a3c686b6e79da4366e09b5649865bb074356b9237aab610bb9c184a586e9bf9eca0226b28a8dc7c31e86e624ffe4321000662f911f071949064c805ac54",
            "file": "src/app/store/interfaces/candidate-details-outside-money.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Group {\r\n  committee: string;\r\n  sum: string;\r\n  average: string;\r\n}\r\n\r\nexport interface CandidateDetailsOutsideMoney {\r\n  id: string;\r\n  supportGroups: Group[];\r\n  oppositionGroups: Group[];\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "oppositionGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Group[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "supportGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Group[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CandidateDetailsRaisedByGroup",
            "id": "interface-CandidateDetailsRaisedByGroup-5cc08015b3db7de87584e6f675dd74b72d9826f77de6bba724b0cb22b8890bc555c8a1ead185e2ce5763ff8c172b4ea56983b34a3ee32d3e59fcd27642cafe34",
            "file": "src/app/store/interfaces/candidate-details-raised-group.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Group {\r\n  name: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface CandidateDetailsRaisedByGroup {\r\n  id: string;\r\n  // industries: Industry[];\r\n  occupations: Group[];\r\n  employers: Group[];\r\n}\r\n",
            "properties": [
                {
                    "name": "employers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Group[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "occupations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Group[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CandidateDetailsRaisedByLocation",
            "id": "interface-CandidateDetailsRaisedByLocation-b2245d0a214ff391f258826bb8a71eff633985f3e38a73f82201e5561a2939d53db6995c2e749be3d3e17218bc7855f43354d696f69033d0b8b7b2ae08dc6f4d",
            "file": "src/app/store/interfaces/candidate-details-raised-location.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Location {\r\n  name: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface CandidateDetailsRaisedByLocation {\r\n  id: string;\r\n  locations: Location[];\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "locations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Location[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CandidateDetailsRaisedSpent",
            "id": "interface-CandidateDetailsRaisedSpent-d7c7fcba350da5827e8ff8ebd85b2526995f2dd30ebbc82ecf1b87b9ba315671d015532608d5c1090c537cc0858d5ec940a789fdb1c41e18204d288f6172dbe4",
            "file": "src/app/store/interfaces/candidate-details-raised-spent.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface RaisedSpentSummary {\r\n  totalRaised: string;\r\n  totalSpent: string;\r\n  balance?: string;\r\n}\r\n\r\ninterface RaisedGroup {\r\n  name: string;\r\n  amount: string;\r\n}\r\n\r\ninterface SpentGroup {\r\n  // name: string;\r\n  spending_code: string;\r\n  sum: string;\r\n  average: string;\r\n}\r\n\r\nexport interface CandidateDetailsRaisedSpent {\r\n  id: string;\r\n  summary: RaisedSpentSummary;\r\n  cashOnHand: string;\r\n  loansAndDebts: string;\r\n  raisedGroups: RaisedGroup[];\r\n  spentGroup: SpentGroup[];\r\n}\r\n",
            "properties": [
                {
                    "name": "cashOnHand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "loansAndDebts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "raisedGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RaisedGroup[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "spentGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SpentGroup[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RaisedSpentSummary",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CandidateNavigation",
            "id": "interface-CandidateNavigation-46293e880a042ffe6ccbd5fe2029a70ab61e54b5656e6786d408b4f188cab74e8cd86e89bdc9d96f44e9c90b2f3cebe0c777369be5f6795cd2ebfe9b7fb01971",
            "file": "src/app/store/interfaces/candidate.navigation.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CandidateNavigation {\r\n  id: string;\r\n  fullName: string; // 'First Last'\r\n  officeType: string; // 'City Council' | 'Mayor'\r\n  fullOfficeName: string; // 'Mayor San Diego' | 'City Council San Diego - Dist 9\r\n  seatName: string | null; // '9'\r\n  seatType: string | null; // 'district'\r\n  year: string;\r\n  inGeneralElection: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "fullOfficeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "inGeneralElection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "officeType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "seatName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "seatType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CandidateQuickView",
            "id": "interface-CandidateQuickView-d50104f7fd0e109c8e962f8815375d45a6c9eb069ae692eddca83d4294144cf02094d89d20b69713d388574c65f3aa1c598cd69ffa5cc5e26bf35c30b049d947",
            "file": "src/app/store/interfaces/candidate.quickview.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RaisedVsSpent {\r\n  id: string;\r\n  raised: string;\r\n  spent: string;\r\n  averageDonation: string;\r\n}\r\n\r\nexport interface RaisedInOut {\r\n  id: string;\r\n  inside: string;\r\n  outside: string;\r\n  areaName: string; // Example: 'City of San Diego'\r\n  jurisdiction: string; // Example: 'City' || 'District'\r\n  jurisdictionSuffix?: string; // Examples: '1', '5'\r\n}\r\n\r\nexport interface OutsideMoney {\r\n  id: string;\r\n  support: string;\r\n  oppose: string;\r\n  scale?: string;\r\n}\r\n\r\ninterface Group {\r\n  name: string;\r\n  amount: string;\r\n  percent: string;\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n\r\nexport interface CandidateQuickView {\r\n  id: string;\r\n  raisedVsSpent: RaisedVsSpent;\r\n  donationsByGroupData: DonationsByGroup;\r\n  raisedInOut: RaisedInOut;\r\n  outsideMoney: OutsideMoney;\r\n}\r\n",
            "properties": [
                {
                    "name": "donationsByGroupData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DonationsByGroup",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "outsideMoney",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OutsideMoney",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "raisedInOut",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RaisedInOut",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "raisedVsSpent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RaisedVsSpent",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CandidateTree",
            "id": "interface-CandidateTree-90ac94cbf086a6c636f7c9d609642bf95ab80737f56cf5bae8261eae3c233e92ba0e008179c48b715a1e278fbf21c70836a62908bb2d5a6c4f8eaa35db98be0c",
            "file": "src/app/shared/interfaces/candidate.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Candidate {\r\n    name: string;\r\n    title: string;\r\n    raised: string;\r\n    donors: string;\r\n}\r\n\r\nexport interface CandidateTree {\r\n    title: string;\r\n    name: string;\r\n    candidates: Record<string, string>;\r\n}\r\n",
            "properties": [
                {
                    "name": "candidates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Category",
            "id": "interface-Category-715e0a9a1d6dae077a2267dcc458ec56b4e7ea506ac061697e64b64dba6f582ff67619f0f9363045d5b2f148a73d79cd014c48d78986489eb1f43b2dfbfe82d0",
            "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\nimport { EChartsOption, ECharts } from 'echarts';\r\n\r\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\r\n\r\nexport interface Category {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  percent: number;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-total-spent-donut',\r\n  templateUrl: './total-spent-donut.component.html',\r\n  styleUrls: ['./total-spent-donut.component.scss']\r\n})\r\nexport class TotalSpentDonutComponent implements OnChanges {\r\n\r\n  @Input() spendingCategories: Category[];\r\n  @Input() categoryHighlighted: string = '-1';\r\n  @Output() categoryHighlightedChange = new EventEmitter<string>();\r\n\r\n  echartsInstance: ECharts;\r\n  chartHeight = 250;\r\n  chartWidth = 250;\r\n\r\n  mergeOption: EChartsOption = {};\r\n\r\n  chartOption: EChartsOption = {\r\n    tooltip: {\r\n      show: true,\r\n      position: this.getTooltipPosition,\r\n      formatter: this.getFormattedTooltip,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.0)',\r\n      borderWidth: 0,\r\n      shadowColor: 'rgba(0, 0, 0, 0.0)',\r\n      textStyle: {\r\n        fontWeight: 'bolder',\r\n        fontSize: 10,\r\n      },\r\n      extraCssText: 'text-align: center; width:90px; white-space:pre-wrap; line-height: 16px;',\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        label: {\r\n          show: true,\r\n          position: 'inside',\r\n          fontSize: 12,\r\n          formatter: (params) => (params.data['percent']/100)\r\n            .toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 1 }),\r\n        },\r\n        emphasis: {\r\n          scaleSize: 10,\r\n          label: {\r\n            show: true,\r\n            fontWeight: 'bold',\r\n            fontSize: 14,\r\n          },\r\n        },\r\n        radius: ['40%', '90%'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor( ) {  }\r\n\r\n  ngOnChanges(): void {    \r\n    this.setChartMergeOption();\r\n    this.updateChartHighlight();\r\n  }\r\n\r\n  onChartInit(ec: ECharts): void {\r\n    this.echartsInstance = ec;\r\n  }\r\n\r\n  setChartMergeOption(): void {\r\n\r\n    this.mergeOption = {\r\n      series: [{\r\n        data: this.spendingCategories.map( (item) => ({\r\n          ...item,\r\n          itemStyle: { color: item['color'], },\r\n        }))\r\n      }],\r\n    };\r\n\r\n  }\r\n\r\n  updateChartHighlight() {\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.dispatchAction({ type: 'downplay' });\r\n      this.echartsInstance.dispatchAction({ \r\n        type: 'highlight', \r\n        dataIndex: parseInt(this.categoryHighlighted),\r\n      });\r\n\r\n      this.echartsInstance.dispatchAction({ type: 'hideTip' });\r\n      this.echartsInstance.dispatchAction({ \r\n        type: 'showTip', \r\n        seriesIndex: 0,\r\n        dataIndex: parseInt(this.categoryHighlighted),\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  hoveredSlice = (event: object) => {\r\n    this.categoryHighlightedChange.emit(event['dataIndex']+'')\r\n  }\r\n  \r\n  getFormattedTooltip(params) {\r\n    const label = params.data.code ? params.data.code : params.data.name;\r\n\r\n    return `<div style=\"font-size: 1em; margin-bottom: 8px\">${label}</div>` \r\n         + `<div style=\"font-size: 1.5em;\">${getCompactFormattedCurrency(params.data.value)}</div>`;\r\n  }\r\n\r\n  getTooltipPosition(point, params, dom, rect, size) {\r\n    return [\r\n      (size.viewSize[0]/2) - size.contentSize[0]/2,\r\n      (size.viewSize[1]/2) - size.contentSize[1]/2,\r\n    ];\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Category",
            "id": "interface-Category-8e4483f03c0c5a61c31ec4f5d243e7da6d7ea9ef5165c5c4072495cb50e7dae80025b35a77b647a0ee742ce8b35a0d848ce77e55c33dd80d171356e3fcd818e6-1",
            "file": "src/app/shared/components/top-categories-table/top-categories-table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges, Output, EventEmitter, OnInit} from '@angular/core';\r\n\r\nimport { getCompactFormattedCurrency } from '../../number-formatter'\r\n\r\nexport interface Category {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  percent: number;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-top-categories-table',\r\n  templateUrl: './top-categories-table.component.html',\r\n  styleUrls: ['./top-categories-table.component.scss']\r\n})\r\nexport class TopCategoriesTableComponent implements OnChanges, OnInit {\r\n\r\n  @Input() categories: Category[];\r\n  @Input() categoryHighlighted: string;\r\n  @Output() categoryHighlightedChange = new EventEmitter<string>();\r\n    \r\n  dataSource;\r\n  displayedColumns: string[] = ['name', 'value', 'percent'];\r\n\r\n  constructor() { }\r\n  ngOnInit(): void {\r\n    let categories = this.categories;\r\n    this.setTabletData(categories);\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    let categories = this.categories;\r\n    this.setTabletData(categories);\r\n  }\r\n\r\n  setTabletData(tableData: object[]): void {\r\n\r\n    this.dataSource = tableData.map( (row) => ({\r\n        ...row,\r\n        value: getCompactFormattedCurrency(row['value']),\r\n        boxShadowStyle: `10px 0px 0px 0px ${row['color']} inset`,\r\n        percent: (row['percent']/100)\r\n          .toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 1 }),\r\n      })\r\n    );\r\n\r\n  }\r\n\r\n  hoveredRow(row: object) {  \r\n    this.categoryHighlightedChange.emit(row['id']);\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Category-1"
        },
        {
            "name": "ContributionGroup",
            "id": "interface-ContributionGroup-33ea49ad6c320aa8ff06a3be8cbdc47f9b79ae9b1fd552046aebc7f9cfea0f39019b70ff3f142bbf70ff2170c01e2aeb5dd4f4ed9f879d7b6cdae46cce9e1afc",
            "file": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport interface ContributionGroup {\r\n  name: string;\r\n  amount: number;\r\n  percent: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-contributions-by-group-table',\r\n  templateUrl: './contributions-by-group-table.component.html',\r\n  styleUrls: ['./contributions-by-group-table.component.scss']\r\n})\r\nexport class ContributionsByGroupTableComponent implements OnChanges {\r\n\r\n  @Input() contributionGroups: ContributionGroup[];\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: any[];\r\n  faCircle = faCircle;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(): void {\r\n    this.setDisplayedColumns();\r\n    this.setTableData(this.contributionGroups);\r\n  }\r\n\r\n  setDisplayedColumns() {\r\n    this.displayedColumns = [\r\n      'colorCode',\r\n      'industry',\r\n      'amount',\r\n      'percentage',\r\n    ];\r\n  }\r\n\r\n  setTableData(groups: ContributionGroup[]) {\r\n    const colorCodes = [ '#007431', '#00903d', '#00af4a', '#00d359', '#00fc6a' ];\r\n\r\n    const topFiveIndustries = groups.map((group, index) =>\r\n      ({\r\n        colorCode: colorCodes[index],\r\n        industry: group['name'],\r\n        amount: group['amount'],\r\n        percentage: group['percent'],\r\n      })\r\n    );\r\n\r\n    this.dataSource.data = topFiveIndustries;\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "District",
            "id": "interface-District-415cae8c101453791c458230cc4c55a0cbd0c918b2874c08023966558b60237d1ec425a0264495b008428e0a133804252a8cc9f0e6503d5fb0caf97bb88afe6c",
            "file": "src/app/navigation-menu/interfaces/district.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Candidate } from \"src/app/store/interfaces/candidate\";\r\n\r\nexport interface District {\r\n  district_number: string;\r\n  office: string;\r\n  candidates: Candidate[]\r\n}\r\n",
            "properties": [
                {
                    "name": "candidates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Candidate[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "district_number",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DonationsByGroup",
            "id": "interface-DonationsByGroup-d50104f7fd0e109c8e962f8815375d45a6c9eb069ae692eddca83d4294144cf02094d89d20b69713d388574c65f3aa1c598cd69ffa5cc5e26bf35c30b049d947",
            "file": "src/app/store/interfaces/candidate.quickview.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RaisedVsSpent {\r\n  id: string;\r\n  raised: string;\r\n  spent: string;\r\n  averageDonation: string;\r\n}\r\n\r\nexport interface RaisedInOut {\r\n  id: string;\r\n  inside: string;\r\n  outside: string;\r\n  areaName: string; // Example: 'City of San Diego'\r\n  jurisdiction: string; // Example: 'City' || 'District'\r\n  jurisdictionSuffix?: string; // Examples: '1', '5'\r\n}\r\n\r\nexport interface OutsideMoney {\r\n  id: string;\r\n  support: string;\r\n  oppose: string;\r\n  scale?: string;\r\n}\r\n\r\ninterface Group {\r\n  name: string;\r\n  amount: string;\r\n  percent: string;\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n\r\nexport interface CandidateQuickView {\r\n  id: string;\r\n  raisedVsSpent: RaisedVsSpent;\r\n  donationsByGroupData: DonationsByGroup;\r\n  raisedInOut: RaisedInOut;\r\n  outsideMoney: OutsideMoney;\r\n}\r\n",
            "properties": [
                {
                    "name": "groups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Group>",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DonationsByGroup",
            "id": "interface-DonationsByGroup-c68d432b3fe6f3640d402961fd6b389d0fad92f0978e2ef47e1b73ce3095266d8b4710818a4cc9f3fe23779dda549faf9ef416c2f9ec239f031bbbb9a37f52b4-1",
            "file": "src/app/vv-charts/interfaces/donationsByGroup.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Group {\r\n  name: string,\r\n  amount: number,\r\n  percent: number,\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n",
            "properties": [
                {
                    "name": "groups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<Group>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "DonationsByGroup-1"
        },
        {
            "name": "Election",
            "id": "interface-Election-11a2e9e749fc736ad37530feb8b1c73f839e596bbe9cf1a84eecf4130f461236d234345e1adf429780bca616635fd47aa2456f480e54fac1870ac336749ef61f",
            "file": "src/app/store/interfaces/elections.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Election {\r\n  id: string;\r\n  year: string;\r\n  offices: string[];\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "offices",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ExpenseCategory",
            "id": "interface-ExpenseCategory-beb1f74dab89514d69d1efc5f72a0a69bb5da2e1451e7cb0bffe6fa8dcdd5921b43c45522514a3720c157e5bf3701a3a2020bfd0cde7da37009d4ce07331f91b",
            "file": "projects/lib-ui-charts/src/lib/lib-ui-charts.models.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ExpenseCategory {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  value: number;\r\n  percent: number;\r\n  color: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Group",
            "id": "interface-Group-59db6a3c686b6e79da4366e09b5649865bb074356b9237aab610bb9c184a586e9bf9eca0226b28a8dc7c31e86e624ffe4321000662f911f071949064c805ac54",
            "file": "src/app/store/interfaces/candidate-details-outside-money.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Group {\r\n  committee: string;\r\n  sum: string;\r\n  average: string;\r\n}\r\n\r\nexport interface CandidateDetailsOutsideMoney {\r\n  id: string;\r\n  supportGroups: Group[];\r\n  oppositionGroups: Group[];\r\n}\r\n",
            "properties": [
                {
                    "name": "average",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "committee",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "sum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Group",
            "id": "interface-Group-5cc08015b3db7de87584e6f675dd74b72d9826f77de6bba724b0cb22b8890bc555c8a1ead185e2ce5763ff8c172b4ea56983b34a3ee32d3e59fcd27642cafe34-1",
            "file": "src/app/store/interfaces/candidate-details-raised-group.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Group {\r\n  name: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface CandidateDetailsRaisedByGroup {\r\n  id: string;\r\n  // industries: Industry[];\r\n  occupations: Group[];\r\n  employers: Group[];\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Group-1"
        },
        {
            "name": "Group",
            "id": "interface-Group-d50104f7fd0e109c8e962f8815375d45a6c9eb069ae692eddca83d4294144cf02094d89d20b69713d388574c65f3aa1c598cd69ffa5cc5e26bf35c30b049d947-2",
            "file": "src/app/store/interfaces/candidate.quickview.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RaisedVsSpent {\r\n  id: string;\r\n  raised: string;\r\n  spent: string;\r\n  averageDonation: string;\r\n}\r\n\r\nexport interface RaisedInOut {\r\n  id: string;\r\n  inside: string;\r\n  outside: string;\r\n  areaName: string; // Example: 'City of San Diego'\r\n  jurisdiction: string; // Example: 'City' || 'District'\r\n  jurisdictionSuffix?: string; // Examples: '1', '5'\r\n}\r\n\r\nexport interface OutsideMoney {\r\n  id: string;\r\n  support: string;\r\n  oppose: string;\r\n  scale?: string;\r\n}\r\n\r\ninterface Group {\r\n  name: string;\r\n  amount: string;\r\n  percent: string;\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n\r\nexport interface CandidateQuickView {\r\n  id: string;\r\n  raisedVsSpent: RaisedVsSpent;\r\n  donationsByGroupData: DonationsByGroup;\r\n  raisedInOut: RaisedInOut;\r\n  outsideMoney: OutsideMoney;\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "Group-2"
        },
        {
            "name": "Group",
            "id": "interface-Group-c68d432b3fe6f3640d402961fd6b389d0fad92f0978e2ef47e1b73ce3095266d8b4710818a4cc9f3fe23779dda549faf9ef416c2f9ec239f031bbbb9a37f52b4-3",
            "file": "src/app/vv-charts/interfaces/donationsByGroup.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Group {\r\n  name: string,\r\n  amount: number,\r\n  percent: number,\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "percent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "Group-3"
        },
        {
            "name": "LastUpdate",
            "id": "interface-LastUpdate-32a135fe5cb9858faca06ad6ce26fe203e77875595c81ad9669712ac8d2a6ec05f705afc03c27aaeba3667a6578c53814beea31c2338870d373c2e865fd0fb9e",
            "file": "src/app/store/interfaces/last-updated.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface LastUpdate {\r\n  updated: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "updated",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Location",
            "id": "interface-Location-b2245d0a214ff391f258826bb8a71eff633985f3e38a73f82201e5561a2939d53db6995c2e749be3d3e17218bc7855f43354d696f69033d0b8b7b2ae08dc6f4d",
            "file": "src/app/store/interfaces/candidate-details-raised-location.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface Location {\r\n  name: string;\r\n  amount: string;\r\n}\r\n\r\nexport interface CandidateDetailsRaisedByLocation {\r\n  id: string;\r\n  locations: Location[];\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Office",
            "id": "interface-Office-21cd3af06ce1af662b42e17d44b2e6d1f5eca14c380b6e29ee46cd09d84d52dbc4de90a3215649b052aff5f2629a11082a9a7afcc65f280ca9a7bb2e715a7ca1",
            "file": "src/app/store/interfaces/office.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Office {\r\n  office: string;\r\n  candidate_count: string;\r\n  has_districts: boolean;\r\n  districts: string[];\r\n  total_raised: string;\r\n  year: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "candidate_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "districts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "has_districts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "total_raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OfficeSummary",
            "id": "interface-OfficeSummary-5f70ac18aa1a9b6cd950eeb6d6300866b1a0de5eb50089b787bbd6ca377235ffa581e4d9d76a649969922f6238f60e54961937bd9d82c95fd5c3803cb92c65f2",
            "file": "src/app/store/interfaces/office.summary.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface OfficeSummary {\r\n  office: string;\r\n  candidate_count: string;\r\n  total_raised: string;\r\n  year: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "candidate_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "total_raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OfficeSummaryWithRoute",
            "id": "interface-OfficeSummaryWithRoute-0c0cb95115904735e17dbba5eff46625675dbc99118fd649e01300138eaa8b4e01593f66830e08d038905723df531d55008dc219edfc8847fc2d8ee378482cee",
            "file": "src/app/public/interfaces/office-summary-with-route.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { OfficeSummary } from \"src/app/store/interfaces/office.summary\";\r\n\r\nexport interface OfficeSummaryWithRoute extends OfficeSummary {\r\n  routeLink: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "routeLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "OfficeSummary"
        },
        {
            "name": "options",
            "id": "interface-options-9bd7adcee9e0c65d02e3a2a3fa7d84446f762450ae3a692626f6c8683d97a39da2dfe6d077b6903b544bd38d495336bfeeffd776987282dfd825b2641695bc32",
            "file": "src/app/store/services/candidate.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport { Candidate } from '../interfaces/candidate';\r\n\r\ninterface options {\r\n  year: string;\r\n  office?: string;\r\n  district?: string;\r\n}\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateService {\r\n  private host = environment.apiUrl;\r\n  \r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getCandidates({ year, office, district }: options ): Observable<Candidate[]>  {\r\n    if (isNaN(parseInt(year))) {\r\n      return of([]);\r\n    }\r\n\r\n    let URL = `${this.host}/api/candidates?`;\r\n    URL += year ? `&year=${year}` : ``;\r\n    URL += office ? `&office=${office}` : ``;\r\n    URL += district ? `&district=${district}` : ``;\r\n\r\n    return this.http.get<Candidate[]>(URL);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "district",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OutsideMoney",
            "id": "interface-OutsideMoney-d50104f7fd0e109c8e962f8815375d45a6c9eb069ae692eddca83d4294144cf02094d89d20b69713d388574c65f3aa1c598cd69ffa5cc5e26bf35c30b049d947",
            "file": "src/app/store/interfaces/candidate.quickview.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RaisedVsSpent {\r\n  id: string;\r\n  raised: string;\r\n  spent: string;\r\n  averageDonation: string;\r\n}\r\n\r\nexport interface RaisedInOut {\r\n  id: string;\r\n  inside: string;\r\n  outside: string;\r\n  areaName: string; // Example: 'City of San Diego'\r\n  jurisdiction: string; // Example: 'City' || 'District'\r\n  jurisdictionSuffix?: string; // Examples: '1', '5'\r\n}\r\n\r\nexport interface OutsideMoney {\r\n  id: string;\r\n  support: string;\r\n  oppose: string;\r\n  scale?: string;\r\n}\r\n\r\ninterface Group {\r\n  name: string;\r\n  amount: string;\r\n  percent: string;\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n\r\nexport interface CandidateQuickView {\r\n  id: string;\r\n  raisedVsSpent: RaisedVsSpent;\r\n  donationsByGroupData: DonationsByGroup;\r\n  raisedInOut: RaisedInOut;\r\n  outsideMoney: OutsideMoney;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "oppose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "support",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OutsideMoney",
            "id": "interface-OutsideMoney-3a453bc6829d1379719779a70117a5c6246c29188ed7d08996473dda51202936ec3d4692d2bf3f3134a9ab217739949a686cfd423c4922ff5ddf75535ffafa31-1",
            "file": "src/app/vv-charts/interfaces/outsideMoney.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface OutsideMoney {\r\n  id: string;\r\n  support: number;\r\n  oppose: number;\r\n  scale?: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "oppose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "scale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "support",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "OutsideMoney-1"
        },
        {
            "name": "pathParam",
            "id": "interface-pathParam-4015688b909ad63fbd7e13e41913cb51ea0b4910cedecd66f6176d074ab3928fac71f2de31127828f924fe6f0912c5a8440b1f4c497bebdc6ad580b996ba1cbc",
            "file": "src/app/office/components/office/office.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SidenavService } from 'src/app/shared/services/sidenav.service';\r\n\r\nimport { CandidateService } from 'src/app/store/services/candidate.service';\r\n\r\ninterface pathParam {\r\n  office: string; \r\n  seatType?: string;\r\n  seatName?: string; \r\n}\r\n\r\n@Component({\r\n  selector: 'app-office',\r\n  templateUrl: './office.component.html',\r\n  styleUrls: ['./office.component.scss'],\r\n})\r\nexport class OfficeComponent implements OnInit {\r\n\r\n  office: string;\r\n  seatName: string;\r\n  selectedCandidateId: string;\r\n  candidateIds: string[] = [];\r\n  isExpanded: boolean = false;\r\n  officeUrl: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private sidenavService: SidenavService,\r\n    private candidateService: CandidateService,\r\n  ) { }\r\n\r\n  setCandidateCards(): void {\r\n    this.candidateService.getCandidates(\r\n      { office: this.office, district: '', year: '2020' }\r\n    ).subscribe(candidates => {\r\n      this.candidateIds = candidates.map(candidate => candidate.id);\r\n    })\r\n  }\r\n\r\n  setComponentData() {\r\n    this.sidenavService.changeSelectedOffice( this.office );  \r\n    this.isExpanded = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.office = data.officePath.split('-').join(' ');\r\n      this.officeUrl = data.officePath;\r\n\r\n      this.setComponentData(); \r\n      this.setCandidateCards();\r\n    })\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId')\r\n      if (candidateId) this.setCandidate(candidateId);\r\n    })\r\n  }\r\n\r\n  setCandidate(candidateId: string) {\r\n    this.sidenavService.changeSelectedCandidate(candidateId);\r\n\r\n    this.isExpanded = true;\r\n    this.selectedCandidateId = candidateId;\r\n  }\r\n\r\n  onOpenExpanded(candidateId: string) {\r\n    this.router.navigate([`/office/${this.officeUrl}`, candidateId], { relativeTo: this.route });\r\n  }\r\n\r\n  onCloseExpanded() {\r\n    this.router.navigate([`/office/${this.officeUrl}`], { relativeTo: this.route });\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "seatName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "seatType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedByIndustry",
            "id": "interface-RaisedByIndustry-00a9aab6bc85d5eede66612c764ac83975ebff0f1dfa27828e01b2aec750073c3fdb1f2c6c1b5601ac2b2af3514d2f4624cc75c90f6a92d1fcebd399d2021332",
            "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { EChartsOption, ECharts } from 'echarts';\r\n\r\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\r\n\r\nexport interface RaisedByIndustry {\r\n  name: string,\r\n  value: number,\r\n  label?: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-raised-by-industry-bar',\r\n  templateUrl: './raised-by-industry-bar.component.html',\r\n  styleUrls: ['./raised-by-industry-bar.component.scss']\r\n})\r\nexport class RaisedByIndustryBarComponent implements OnChanges {\r\n\r\n  @Input() raisedByIndustries: RaisedByIndustry[];\r\n\r\n  private dataRowsCount = 0;\r\n\r\n  echartsInstance: ECharts;\r\n  mergeOption: EChartsOption;\r\n  initOpts: EChartsOption;\r\n  \r\n  chartOption: EChartsOption = {\r\n    grid: {\r\n      containLabel: true,\r\n      left: '5%',\r\n      right: '5%',\r\n      top: '2%',\r\n      bottom: '2%',\r\n    },\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'axis',\r\n      formatter: (params) => \r\n        `${params[0].data.name}: $${params[0].data.value.toLocaleString()}`,\r\n      axisPointer: {\r\n        type: 'shadow',\r\n      }\r\n    },\r\n    dataset: {\r\n      source: [],  // set in ngOnChanges\r\n    },\r\n    xAxis: {\r\n      position: 'top',\r\n      axisLabel: {\r\n        formatter: (value: number) => \r\n          getCompactFormattedCurrency(value),\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      axisTick: {\r\n        show: false\r\n      },\r\n    },\r\n    series: [{\r\n      type: 'bar',\r\n      name: 'raised-by-industry-bar',\r\n      encode: {\r\n        y: 'name',\r\n        x: 'value',\r\n        label: 'label',\r\n      },\r\n      label: {\r\n        show: true,\r\n        position: 'right',\r\n        formatter: (params) => \r\n          getCompactFormattedCurrency(params.data['value'], 1),\r\n      },\r\n      itemStyle: {\r\n        color: '#53AE79',\r\n      },\r\n      barCategoryGap: '120%',\r\n      barMinWidth: 16,\r\n    }],\r\n  }\r\n\r\n  constructor() {  }\r\n\r\n  ngOnChanges(): void { \r\n    this.setChartMergeOption();\r\n    this.setChartHeight();\r\n  }\r\n\r\n  onChartInit(ec: ECharts): void {\r\n    this.echartsInstance = ec;\r\n  }\r\n\r\n  setChartMergeOption(): void {\r\n    this.mergeOption = {\r\n      dataset: {\r\n        source: this.raisedByIndustries,\r\n      }\r\n    };\r\n  }\r\n\r\n  setChartHeight(): void {\r\n    const perItemHeight = 35;\r\n    const topOffset = 80;\r\n    const itemCount = this.raisedByIndustries.length;\r\n\r\n    if (this.dataRowsCount === itemCount) return;\r\n\r\n    const height = itemCount * perItemHeight + topOffset;\r\n\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.resize({ height });\r\n    } else {\r\n      this.initOpts = { height };\r\n    }\r\n\r\n    this.dataRowsCount = itemCount;\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedByLocations",
            "id": "interface-RaisedByLocations-a2113c6c977f861918d43b8ac46d9376343d865a2bd18e558140ea06499fa79daae83b250623227bdcd056211b1ca8e8250086d36d975d6e5accced280aebdcc",
            "file": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { EChartsOption, ECharts } from 'echarts';\r\n\r\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\r\n\r\nexport interface RaisedByLocations {\r\n  inDistrict: number,\r\n  inCity: number,\r\n  inCounty: number,\r\n  inState: number,\r\n  outState: number,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-raised-by-location-bar',\r\n  templateUrl: './raised-by-location-bar.component.html',\r\n  styleUrls: ['./raised-by-location-bar.component.scss']\r\n})\r\nexport class RaisedByLocationBarComponent implements OnChanges {\r\n  @Input() raisedByLocations: RaisedByLocations;\r\n  \r\n  echartsInstance: ECharts;\r\n  mergeOptions: EChartsOption;\r\n\r\n  locations = [\r\n    { name: 'In District',  color: '#71B3FF' },\r\n    { name: 'In City',      color: '#3392FF' },\r\n    { name: 'In County',    color: '#337FD6' },\r\n    { name: 'In State',     color: '#336399' },\r\n    // The element below is to create a space between\r\n    //  the 'In State' and 'Out of State' bars\r\n    { name: '',     color: '' }, \r\n    { name: 'Out of State', color: '#BFD63B'},\r\n  ];\r\n\r\n  chartOption: EChartsOption = {\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'axis',\r\n      formatter: (params) => (params[0].data.value === null) ? '' : \r\n          `${params[0].data.name}: $${params[0].data.value.toLocaleString()}`,\r\n      axisPointer: {\r\n        type: 'shadow',\r\n      }\r\n    },\r\n    xAxis: {\r\n      show: true,\r\n      type: 'category',\r\n      axisTick: {\r\n        show: false\r\n      },\r\n      axisLabel: {\r\n        interval: 0,\r\n      },\r\n      // data: [], // set in ngOnChanges\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      axisLabel: {\r\n        formatter: (value: number) => getCompactFormattedCurrency(value, 1),\r\n      },\r\n    },\r\n    series: [{\r\n      type: 'bar',\r\n      name: 'raised-by-location-bar',\r\n      label: {\r\n        show: true,\r\n        position: 'top',\r\n        formatter: (params) => getCompactFormattedCurrency(params.data['value'], 1),\r\n        fontWeight: 'bold',\r\n      },\r\n      barCategoryGap: '0%',\r\n      // data: [], // set in ngOnChanges\r\n    }],\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(): void { \r\n    const chartData = this.buildChartData(this.raisedByLocations)\r\n\r\n    this.setChartData(chartData);\r\n  }\r\n\r\n  onChartInit(ec: ECharts): void {\r\n    this.echartsInstance = ec;\r\n  }\r\n\r\n\r\n  buildChartData(raisedRegions: RaisedByLocations): object[] {\r\n\r\n    const chartData = [\r\n      { value: raisedRegions['inDistrict'] },\r\n      { value: raisedRegions['inCity'] },\r\n      { value: raisedRegions['inCounty'] },\r\n      { value: raisedRegions['inState'] },\r\n      { value: null },\r\n      { value: raisedRegions['outState'] },\r\n    ];\r\n\r\n    return chartData.map( (item, index) => ({\r\n      ...item,\r\n      itemStyle: { color: this.locations[index].color, },\r\n      name: this.locations[index].name,\r\n    }));\r\n\r\n  }\r\n\r\n  setChartData(chartData: object): void {\r\n    const xAxisData  = this.locations\r\n      .map( location => location.name);\r\n\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.setOption({\r\n        series: [{\r\n          name: 'raised-by-location-bar',\r\n          data: chartData,\r\n        }],\r\n        xAxis: {\r\n          data: xAxisData,\r\n        },\r\n      });\r\n    } else {\r\n      this.chartOption.series[0].data = chartData;\r\n      this.chartOption.xAxis['data'] = xAxisData;\r\n    }\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "inCity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "inCounty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "inDistrict",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "inState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "outState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedByOutsideMoney",
            "id": "interface-RaisedByOutsideMoney-afa232d158e8fade79531205f16f79eeaba12b87b7b40bdbcbd5bb1e6b4dd378a93f24d547b275f44728c2fd5b724859e16f8467d6019659510f1065093416ee",
            "file": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nimport { EChartsOption, ECharts } from 'echarts';\n\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\n\nexport interface RaisedByOutsideMoney {\n  inOpposition: number,\n  inSupport: number,\n}\n\n@Component({\n  selector: 'app-raised-by-outside-money-bar',\n  templateUrl: './raised-by-outside-money-bar.component.html',\n  styleUrls: ['./raised-by-outside-money-bar.component.scss']\n})\nexport class RaisedByOutsideMoneyBarComponent implements OnChanges {\n  @Input() raisedByOutsideMoney: RaisedByOutsideMoney;\n\n  echartsInstance: ECharts;\n  mergeOptions: EChartsOption;\n\n  chartOption: EChartsOption = {\n    tooltip: {\n      show: true,\n      trigger: 'item',\n      formatter: (params) =>  \n        `${params.data.name}: $${Math.abs(params.data.value).toLocaleString()}`,\n      axisPointer: {\n        type: 'shadow',\n      }\n    },\n    xAxis: {\n      type: 'value',\n      axisLabel: {\n        formatter: (value: number) => \n          getCompactFormattedCurrency(Math.abs(value)),\n      },\n    },\n    yAxis: {\n      type: 'category',\n    },\n    series: [\n      {\n        type: 'bar',\n        name: 'raised-by-outside-money-in-support',\n        stack: 'outside-money',\n        label: {\n          show: true,\n          position: 'right',\n          formatter: (params) => getCompactFormattedCurrency(\n            Math.abs(params.data['value'])\n          ),\n          fontWeight: 'bold',\n        },\n        itemStyle: { color: '#3392FF' },\n        // data: [], // set in ngOnChanges\n      },\n      {\n        type: 'bar',\n        name: 'raised-by-outside-money-in-opposition',\n        stack: 'outside-money',\n        label: {\n          show: true,\n          position: 'left',\n          formatter: (params) => getCompactFormattedCurrency(\n            Math.abs(params.data['value'])\n          ),\n          fontWeight: 'bold',\n        },\n        itemStyle: { color: '#6964AD' },\n        // data: [], // set in ngOnChanges\n      },\n    ],\n  }\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.setChartData(this.raisedByOutsideMoney);\n  }\n\n  onChartInit(ec: ECharts): void {\n    this.echartsInstance = ec;\n  }\n\n  setChartData(chartData: object): void {\n\n    let series = [\n      {\n        name: 'raised-by-outside-money-in-support',\n        data:[ {\n          name: 'Expenditures in Support',\n          value: chartData['inSupport'],\n        }]\n      },\n      {\n        name: 'raised-by-outside-money-in-opposition',\n        data: [{\n          name: 'Expenditures in Opposition',\n          value: -1 * chartData['inOpposition']\n        }],\n      },\n    ]\n\n    if (this.echartsInstance) {\n      this.echartsInstance.setOption({ series });\n    } else {\n      this.chartOption.series[0].data = series[0].data;\n      this.chartOption.series[1].data = series[1].data;\n    }\n  }\n\n}\n",
            "properties": [
                {
                    "name": "inOpposition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "inSupport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedCategory",
            "id": "interface-RaisedCategory-216986133a9760789e7f35d06b13430d177e147c1e6debc16317191b4eaf48348e5c44d88111a4a90faada34ae8a81bdc221b400f66ac4afe1aef0bb80134c95",
            "file": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nimport { EChartsOption } from 'echarts';\n\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\n\nexport interface RaisedCategory {\n  name: string;\n  value: number;\n  color: string;\n}\n\n@Component({\n  selector: 'app-total-raised-bar',\n  templateUrl: './total-raised-bar.component.html',\n  styleUrls: ['./total-raised-bar.component.scss']\n})\nexport class TotalRaisedBarComponent implements OnChanges {\n\n  @Input() raisedCategories: RaisedCategory[];\n\n  mergeOption: EChartsOption = {};\n\n  chartOption: EChartsOption = {\n    tooltip: {\n      show: true,\n      trigger: 'axis',\n      formatter: (params) => (params[0].data.value === null) ? '' : \n          `${params[0].data.name}:<br />$${params[0].data.value.toLocaleString()}`,\n      axisPointer: {\n        type: 'shadow',\n      }\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        interval: 0,\n        formatter: (value) => `${value.split(' ').join('\\n')}`,\n      },\n    },\n    yAxis: {\n      show: false,\n    },\n    series: [{\n      type: 'bar',\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: 18,\n        fontWeight: 'bold',\n        formatter: (params) => \n          getCompactFormattedCurrency(params.data['value']),\n      },\n      itemStyle: { \n        borderRadius: [5, 5, 0, 0],\n      },\n    }],\n    media: [\n      {\n        query: { maxWidth: 375, },\n        option: {\n          xAxis: {\n            axisLabel: {\n              formatter: (value) => `${value.split(' ').join('\\n')}`,\n            },\n          },\n        }\n      },\n\n      {\n        query: { minWidth: 376, },\n        option: {\n          xAxis: {\n            axisLabel: {\n              formatter: (value) => `${value}`,\n            },\n          },\n        }\n      },\n    ],\n  };\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.setChartMergeOption(this.raisedCategories);\n  }\n\n  setChartMergeOption(chartData: RaisedCategory[]): void {\n\n    this.mergeOption = {\n      xAxis: {\n        data: chartData.map( category => category.name),\n      },\n      series: {\n        data: chartData.map( item => ({\n            ...item,\n            itemStyle: { color: item.color, },\n          })),\n      },\n    }\n\n  }\n\n}\n",
            "properties": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedGroup",
            "id": "interface-RaisedGroup-d7c7fcba350da5827e8ff8ebd85b2526995f2dd30ebbc82ecf1b87b9ba315671d015532608d5c1090c537cc0858d5ec940a789fdb1c41e18204d288f6172dbe4",
            "file": "src/app/store/interfaces/candidate-details-raised-spent.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface RaisedSpentSummary {\r\n  totalRaised: string;\r\n  totalSpent: string;\r\n  balance?: string;\r\n}\r\n\r\ninterface RaisedGroup {\r\n  name: string;\r\n  amount: string;\r\n}\r\n\r\ninterface SpentGroup {\r\n  // name: string;\r\n  spending_code: string;\r\n  sum: string;\r\n  average: string;\r\n}\r\n\r\nexport interface CandidateDetailsRaisedSpent {\r\n  id: string;\r\n  summary: RaisedSpentSummary;\r\n  cashOnHand: string;\r\n  loansAndDebts: string;\r\n  raisedGroups: RaisedGroup[];\r\n  spentGroup: SpentGroup[];\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedInOut",
            "id": "interface-RaisedInOut-d50104f7fd0e109c8e962f8815375d45a6c9eb069ae692eddca83d4294144cf02094d89d20b69713d388574c65f3aa1c598cd69ffa5cc5e26bf35c30b049d947",
            "file": "src/app/store/interfaces/candidate.quickview.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RaisedVsSpent {\r\n  id: string;\r\n  raised: string;\r\n  spent: string;\r\n  averageDonation: string;\r\n}\r\n\r\nexport interface RaisedInOut {\r\n  id: string;\r\n  inside: string;\r\n  outside: string;\r\n  areaName: string; // Example: 'City of San Diego'\r\n  jurisdiction: string; // Example: 'City' || 'District'\r\n  jurisdictionSuffix?: string; // Examples: '1', '5'\r\n}\r\n\r\nexport interface OutsideMoney {\r\n  id: string;\r\n  support: string;\r\n  oppose: string;\r\n  scale?: string;\r\n}\r\n\r\ninterface Group {\r\n  name: string;\r\n  amount: string;\r\n  percent: string;\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n\r\nexport interface CandidateQuickView {\r\n  id: string;\r\n  raisedVsSpent: RaisedVsSpent;\r\n  donationsByGroupData: DonationsByGroup;\r\n  raisedInOut: RaisedInOut;\r\n  outsideMoney: OutsideMoney;\r\n}\r\n",
            "properties": [
                {
                    "name": "areaName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "inside",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "jurisdiction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "jurisdictionSuffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "outside",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedInOut",
            "id": "interface-RaisedInOut-68bf884eac574d2c04f4bdffae1a6def90337a2df45d133257844ca7849e11686419eddccc74e9cff7950a1d31caec82c5f6b1b6161cb4e3af1e77d0c68e674f-1",
            "file": "src/app/vv-charts/interfaces/raisedInOut.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RaisedInOut {\r\n  id: string;\r\n  inside: number;\r\n  outside: number;\r\n  areaName: string; // Example: 'City of San Diego'\r\n  jurisdiction: string; // Example: 'City' || 'District'\r\n  jurisdictionSuffix?: string; // Examples: '1', '5'\r\n}\r\n",
            "properties": [
                {
                    "name": "areaName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "inside",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "jurisdiction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "jurisdictionSuffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "outside",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "RaisedInOut-1"
        },
        {
            "name": "RaisedSpentSummary",
            "id": "interface-RaisedSpentSummary-d7c7fcba350da5827e8ff8ebd85b2526995f2dd30ebbc82ecf1b87b9ba315671d015532608d5c1090c537cc0858d5ec940a789fdb1c41e18204d288f6172dbe4",
            "file": "src/app/store/interfaces/candidate-details-raised-spent.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface RaisedSpentSummary {\r\n  totalRaised: string;\r\n  totalSpent: string;\r\n  balance?: string;\r\n}\r\n\r\ninterface RaisedGroup {\r\n  name: string;\r\n  amount: string;\r\n}\r\n\r\ninterface SpentGroup {\r\n  // name: string;\r\n  spending_code: string;\r\n  sum: string;\r\n  average: string;\r\n}\r\n\r\nexport interface CandidateDetailsRaisedSpent {\r\n  id: string;\r\n  summary: RaisedSpentSummary;\r\n  cashOnHand: string;\r\n  loansAndDebts: string;\r\n  raisedGroups: RaisedGroup[];\r\n  spentGroup: SpentGroup[];\r\n}\r\n",
            "properties": [
                {
                    "name": "balance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "totalRaised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "totalSpent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedVsSpent",
            "id": "interface-RaisedVsSpent-09b47fdd667e6b309ce280eeddb141855a8da0076c60654df82a0305275e323d42918460955b826a8327ea434fd1812e4e6b3447d94543d5fc76cbac8c1b22fd",
            "file": "src/app/graphql/raised-vs-spent-gql/raised-vs-spent-gql.query.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Query, gql } from 'apollo-angular';\r\n\r\nexport interface RaisedVsSpent {\r\n  candidate: {\r\n    committee: {\r\n      contributions: {\r\n        sum: number;\r\n      };\r\n      expenses: {\r\n        sum: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RaisedVsSpentGQL extends Query<Response> { \r\n  document = gql`\r\n    query raisedVsSpent ($candidateId: String!) {\r\n      candidate(id: $candidateId) {\r\n        committee {\r\n          contributions {\r\n            sum\r\n          }\r\n          expenses {\r\n            sum\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n}\r\n",
            "properties": [
                {
                    "name": "candidate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RaisedVsSpent",
            "id": "interface-RaisedVsSpent-d50104f7fd0e109c8e962f8815375d45a6c9eb069ae692eddca83d4294144cf02094d89d20b69713d388574c65f3aa1c598cd69ffa5cc5e26bf35c30b049d947-1",
            "file": "src/app/store/interfaces/candidate.quickview.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RaisedVsSpent {\r\n  id: string;\r\n  raised: string;\r\n  spent: string;\r\n  averageDonation: string;\r\n}\r\n\r\nexport interface RaisedInOut {\r\n  id: string;\r\n  inside: string;\r\n  outside: string;\r\n  areaName: string; // Example: 'City of San Diego'\r\n  jurisdiction: string; // Example: 'City' || 'District'\r\n  jurisdictionSuffix?: string; // Examples: '1', '5'\r\n}\r\n\r\nexport interface OutsideMoney {\r\n  id: string;\r\n  support: string;\r\n  oppose: string;\r\n  scale?: string;\r\n}\r\n\r\ninterface Group {\r\n  name: string;\r\n  amount: string;\r\n  percent: string;\r\n}\r\n\r\nexport interface DonationsByGroup {\r\n  id: string;\r\n  groups: Array<Group>;\r\n}\r\n\r\nexport interface CandidateQuickView {\r\n  id: string;\r\n  raisedVsSpent: RaisedVsSpent;\r\n  donationsByGroupData: DonationsByGroup;\r\n  raisedInOut: RaisedInOut;\r\n  outsideMoney: OutsideMoney;\r\n}\r\n",
            "properties": [
                {
                    "name": "averageDonation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "spent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "RaisedVsSpent-1"
        },
        {
            "name": "RaisedVsSpent",
            "id": "interface-RaisedVsSpent-44e4190248dba68601615db934741397c77956f80a8429724997937a8c1b1b0d70fb30d9003a36802942b368e9cb1ed626535a24a71096ff2627c07ce4e8d8fd-2",
            "file": "src/app/vv-charts/interfaces/raisedVsSpent.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RaisedVsSpent {\r\n  id: string;\r\n  raised: number;\r\n  spent: number;\r\n  averageDonation: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "averageDonation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "spent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "RaisedVsSpent-2"
        },
        {
            "name": "SpentGroup",
            "id": "interface-SpentGroup-d7c7fcba350da5827e8ff8ebd85b2526995f2dd30ebbc82ecf1b87b9ba315671d015532608d5c1090c537cc0858d5ec940a789fdb1c41e18204d288f6172dbe4",
            "file": "src/app/store/interfaces/candidate-details-raised-spent.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "interface RaisedSpentSummary {\r\n  totalRaised: string;\r\n  totalSpent: string;\r\n  balance?: string;\r\n}\r\n\r\ninterface RaisedGroup {\r\n  name: string;\r\n  amount: string;\r\n}\r\n\r\ninterface SpentGroup {\r\n  // name: string;\r\n  spending_code: string;\r\n  sum: string;\r\n  average: string;\r\n}\r\n\r\nexport interface CandidateDetailsRaisedSpent {\r\n  id: string;\r\n  summary: RaisedSpentSummary;\r\n  cashOnHand: string;\r\n  loansAndDebts: string;\r\n  raisedGroups: RaisedGroup[];\r\n  spentGroup: SpentGroup[];\r\n}\r\n",
            "properties": [
                {
                    "name": "average",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "spending_code",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "sum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "Year",
            "id": "interface-Year-d4a1e0bb2233192a46580f9525315ed3fd52467f12a9bc20e053ab043f7d13aa1a44efa1baee5bb6bc3697824989d9ae7a89cb8a290e73fb9bfcea12125bc9b4",
            "file": "src/app/election-year-selector/election-year-selector.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OfficeSummaryService } from 'src/app/store/services/office-summary.service';\r\nimport { YearService } from 'src/app/store/services/year.service';\r\n\r\ninterface Year {\r\n  name: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'election-year-selector',\r\n  templateUrl: './election-year-selector.component.html',\r\n  styleUrls: ['./election-year-selector.component.scss']\r\n})\r\nexport class ElectionYearSelectorComponent implements OnInit {\r\n  years: Year[];\r\n  selectedYear: Year;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private yearService: YearService,\r\n    private officeSummaryService: OfficeSummaryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.officeSummaryService.getSummaries()\r\n      .subscribe(offices => {\r\n        const years = offices.map(office => office.year);\r\n        const uniqueYears = [...new Set(years)].sort().reverse();\r\n\r\n        this.years = uniqueYears.map(year => ({\r\n          name: year,\r\n        }))\r\n      });\r\n\r\n    this.yearService.electionYearChanged$.subscribe(year => {\r\n      this.selectedYear = { name: year };\r\n    })\r\n  }\r\n\r\n  change(event) {\r\n    const year = event.value.name;\r\n    this.router.navigate([`year/${year}`]);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CandidateCardService",
            "id": "injectable-CandidateCardService-e03f4dc14e3c817aef7f095208d07819325d5219953d6ed5232217bcb56418335f8b8f766053009f87fbed9c15f81d5105dfbf5ec9c9c4e459c0773db02eedab",
            "file": "src/app/store/services/candidate.card.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCandidateCard",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateCard>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport { CandidateCard } from '../interfaces/candidate.card';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateCardService {\r\n  private host = environment.apiUrl;\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getCandidateCard(candidateId: string): Observable<CandidateCard> {\r\n    const URL = `${this.host}/api/candidate-card/${candidateId}`;\r\n    return this.http.get<CandidateCard>(URL);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CandidateDetailsService",
            "id": "injectable-CandidateDetailsService-3f55dae213ef33eb930944486fd754c9d63cd6cb399f37cc3f6496b59a06aebe3f6dd6e95093a5ebf27d80ba02674da464d8b8cf8e0d09a2a00601c68a2c5910",
            "file": "src/app/store/services/candidate.details.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getHeader",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateDetailsHeader>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOutsideMoney",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateDetailsOutsideMoney>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRaisedByIndustry",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateDetailsRaisedByGroup>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRaisedByLocation",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateDetailsRaisedByLocation>",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRaisedSpent",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateDetailsRaisedSpent>",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport { CandidateDetailsHeader } from '../interfaces/candidate-details-header';\r\nimport { CandidateDetailsRaisedSpent } from '../interfaces/candidate-details-raised-spent';\r\nimport { CandidateDetailsRaisedByGroup } from '../interfaces/candidate-details-raised-group';\r\nimport { CandidateDetailsRaisedByLocation } from '../interfaces/candidate-details-raised-location';\r\nimport { CandidateDetailsOutsideMoney } from '../interfaces/candidate-details-outside-money';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateDetailsService {\r\n  private host = environment.apiUrl;\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getHeader(candidateId: string): Observable<CandidateDetailsHeader>  {\r\n    const URL = `${this.host}/api/candidate-details-header/${candidateId}`;\r\n    return this.http.get<CandidateDetailsHeader>(URL)\r\n  }\r\n\r\n  getRaisedSpent(candidateId: string): Observable<CandidateDetailsRaisedSpent>  {\r\n    const URL = `${this.host}/api/candidate-details-raised-spent/${candidateId}`;\r\n    return this.http.get<CandidateDetailsRaisedSpent>(URL)\r\n  }\r\n\r\n  getRaisedByIndustry(candidateId: string): Observable<CandidateDetailsRaisedByGroup>  {\r\n    const URL = `${this.host}/api/candidate-details-raised-by-industry/${candidateId}`;\r\n    return this.http.get<CandidateDetailsRaisedByGroup>(URL)\r\n  }\r\n  \r\n  getRaisedByLocation(candidateId: string): Observable<CandidateDetailsRaisedByLocation>  {\r\n    const URL = `${this.host}/api/candidate-details-raised-by-location/${candidateId}`;\r\n    return this.http.get<CandidateDetailsRaisedByLocation>(URL)\r\n  }\r\n  \r\n  getOutsideMoney(candidateId: string): Observable<CandidateDetailsOutsideMoney>  {\r\n    const URL = `${this.host}/api/candidate-details-raised-outside-money/${candidateId}`;\r\n    return this.http.get<CandidateDetailsOutsideMoney>(URL)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CandidateNavigationService",
            "id": "injectable-CandidateNavigationService-451da1b4e939dfff47337e859224d505f71af7f44c43183cdf2e97bffc4d611fcf44822d5d9dfad277270eeb4b2af3438b1230df7466e3543a0c16cb00802429",
            "file": "src/app/store/services/candidate.navigation.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getNavigation",
                    "args": [
                        {
                            "name": "year",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateNavigation[]>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport { CandidateNavigation } from '../interfaces/candidate.navigation';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateNavigationService {\r\n  private host = environment.apiUrl;\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getNavigation(year: string): Observable<CandidateNavigation []>  {\r\n    const URL = `${this.host}/api/candidate-navigation/?year=${year}`;\r\n    return this.http.get<CandidateNavigation[]>(URL)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CandidateQuickViewService",
            "id": "injectable-CandidateQuickViewService-73144a5950d4d1bd59961a209317521bcbb49338c0365e16c92eb4a9a3c6638c2c9be1f71b07fe9117db0ee15babe2e75c53577d42586b3512d55a1544abd9a1",
            "file": "src/app/store/services/candidate.quickview.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCandidateQuickView",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<CandidateQuickView>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport { CandidateQuickView } from '../interfaces/candidate.quickview';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateQuickViewService {\r\n  private host = environment.apiUrl;\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getCandidateQuickView(candidateId: string): Observable<CandidateQuickView>  {\r\n    const URL = `${this.host}/api/candidate-quick-view/${candidateId}`;\r\n    return this.http.get<CandidateQuickView>(URL)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CandidateService",
            "id": "injectable-CandidateService-9bd7adcee9e0c65d02e3a2a3fa7d84446f762450ae3a692626f6c8683d97a39da2dfe6d077b6903b544bd38d495336bfeeffd776987282dfd825b2641695bc32",
            "file": "src/app/store/services/candidate.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCandidates",
                    "args": [
                        {
                            "type": "options",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Candidate[]>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "options",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport { Candidate } from '../interfaces/candidate';\r\n\r\ninterface options {\r\n  year: string;\r\n  office?: string;\r\n  district?: string;\r\n}\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateService {\r\n  private host = environment.apiUrl;\r\n  \r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getCandidates({ year, office, district }: options ): Observable<Candidate[]>  {\r\n    if (isNaN(parseInt(year))) {\r\n      return of([]);\r\n    }\r\n\r\n    let URL = `${this.host}/api/candidates?`;\r\n    URL += year ? `&year=${year}` : ``;\r\n    URL += office ? `&office=${office}` : ``;\r\n    URL += district ? `&district=${district}` : ``;\r\n\r\n    return this.http.get<Candidate[]>(URL);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ElectionService",
            "id": "injectable-ElectionService-04ba601e502c14d4477fd2b99b52476be08138e2c7e39f887c63f536ac7f5dc95824e0ebcac112bd2fb35ed7c893c0fa6aefdfe77991fd6ec6568ae87f8932b1",
            "file": "src/app/store/services/election.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getElection",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Election>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getElections",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Election[]>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport { Election } from '../interfaces/elections';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ElectionService {\r\n  private host = environment.apiUrl;\r\n  \r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getElection(id: string): Observable<Election>  {\r\n      const URL = `${this.host}/api/election/${id}`;\r\n      return this.http.get<Election>(URL);\r\n  }\r\n\r\n  getElections(): Observable<Election[]>  {\r\n    let URL = `${this.host}/api/elections?`;\r\n\r\n    return this.http.get<Election[]>(URL);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LastUpdatedService",
            "id": "injectable-LastUpdatedService-16b57ad0eb36c7afd6b3566e6f3d8256285158cc6ea9ca6f81a3f79f22dfb05b3d724123a966ce42d63231a21bcd4283cf821cbb2b01080d57bcf9937488dd81",
            "file": "src/app/store/services/last-updated.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getLastUpdated",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<LastUpdate>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { concatAll, first } from 'rxjs/operators';\r\nimport { environment } from './../../../environments/environment';\r\nimport { LastUpdate } from '../interfaces/last-updated';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LastUpdatedService {\r\n  private host = environment.apiUrl;\r\n  \r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getLastUpdated(): Observable<LastUpdate> {\r\n    const URL = `${this.host}/api/last-update`;\r\n    return this.http.get<LastUpdate>(URL);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LibUiChartsService",
            "id": "injectable-LibUiChartsService-b376bc7d19d557424078ba2d72ed917874bcd119d4f23560e485f16bb458c4314eb07a8bda12235b66bf01fa3bff979aaf96edf860dc1826701f08699f0e057d",
            "file": "projects/lib-ui-charts/src/lib/lib-ui-charts.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LibUiChartsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "OfficeDistrictResolverService",
            "id": "injectable-OfficeDistrictResolverService-c19ca94cdde8aa95fb64ccc22c45a36ffb1ebad5ddeb692d1e77898f172a7ba024a178d0fa152ec08e88e97285478fdd81b627587bc51ad913c72518f8c6ef6e",
            "file": "src/app/office/office-district-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getName",
                    "args": [
                        {
                            "name": "office",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "office",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { take, mergeMap } from 'rxjs/operators';\r\nimport { OfficeService } from '../store/services/office.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OfficeDistrictResolverService {\r\n\r\n  constructor(\r\n    private officeService: OfficeService,\r\n  ) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> | Observable<never> {\r\n    const year = route.paramMap.get('year');\r\n    const districtNumber = route.paramMap.get('district_number');\r\n    const officeName = route.paramMap.get('office_name');\r\n\r\n    if (!Number.isInteger(parseInt(districtNumber))) { return EMPTY; }\r\n\r\n    return this.officeService.getOffices(year).pipe(\r\n      take(1),\r\n      mergeMap(offices => {\r\n        const foundOffice = offices.find(office => this.getName(office) ===officeName);\r\n        if (!foundOffice) {\r\n          return EMPTY;\r\n        } else if (!foundOffice.has_districts && districtNumber === '0') { \r\n          return of(foundOffice);\r\n        } else if (foundOffice.has_districts && foundOffice.districts.includes(districtNumber)) {\r\n          return of(foundOffice);        \r\n        } else {\r\n          return EMPTY;\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  getName(office): string {\r\n    return office.office.toLowerCase().split(' ').join('-');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "officeService",
                        "type": "OfficeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "officeService",
                        "type": "OfficeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OfficeService",
            "id": "injectable-OfficeService-a04fac45638cdc36d0e15931035afc7a31f03fe72bc20bb67e417d38438fdfbe99bc5a0eda1a1ca2184d59191421a97e0e0e691e8308cd9f10cdb16c163d94c6",
            "file": "src/app/store/services/office.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getOffices",
                    "args": [
                        {
                            "name": "year",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Office[]>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { Office } from '../interfaces/office';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OfficeService {\r\n  private host = environment.apiUrl;\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getOffices(year: string): Observable<Office[]>  {\r\n    const URL = `${this.host}/api/offices/?year=${year}`;\r\n    return this.http.get<Office[]>(URL)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OfficeSummaryResolverService",
            "id": "injectable-OfficeSummaryResolverService-7d5bc160b64ad093fbde113e8ea466f9aced764cba7848e73db438ac8a2884e04410ff17a4f1c1fda45bc0d683e28128d99837be843dfb276abaa23a14f3a205",
            "file": "src/app/public/resolvers/office-summary-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Observable",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, of, EMPTY } from 'rxjs';\r\nimport { take, mergeMap } from 'rxjs/operators';\r\nimport { OfficeSummaryService } from 'src/app/store/services/office-summary.service';\r\nimport { YearService } from 'src/app/store/services/year.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OfficeSummaryResolverService {\r\n\r\n  constructor(\r\n    private officeSummaryService: OfficeSummaryService,\r\n    private yearService: YearService,\r\n  ) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<any> | Observable<never> {\r\n    const year = route.paramMap.get('year');\r\n\r\n    return this.officeSummaryService.getSummary(year).pipe(\r\n      take(1),\r\n      mergeMap(offices => {\r\n        if (offices.length > 0) {\r\n          this.yearService.changeElectionYear(year);\r\n          return of(offices);\r\n        } else {\r\n          return EMPTY;\r\n        }\r\n      })\r\n    );\r\n\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "officeSummaryService",
                        "type": "OfficeSummaryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "yearService",
                        "type": "YearService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "officeSummaryService",
                        "type": "OfficeSummaryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "yearService",
                        "type": "YearService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OfficeSummaryService",
            "id": "injectable-OfficeSummaryService-9ceb7e085d4c14ed3741fe41e8e8a1ef35d7961752c05b104296bdd028f69614468e28eb9bcce5f2a531fe158b72ff31c00ba38f1356575a0412fd6ebcc1c908",
            "file": "src/app/store/services/office-summary.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.apiUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "http",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpClient",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getSummaries",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<OfficeSummary[]>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSummary",
                    "args": [
                        {
                            "name": "year",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<OfficeSummary[]>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { OfficeSummary } from '../interfaces/office.summary';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OfficeSummaryService {\r\n  private host = environment.apiUrl;\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n  ) { }\r\n\r\n  getSummaries(): Observable<OfficeSummary[]>  {\r\n    const URL = `${this.host}/api/office-summary/`;\r\n    return this.http.get<OfficeSummary[]>(URL)\r\n  }\r\n\r\n  getSummary(year: string): Observable<OfficeSummary[]>  {\r\n    const URL = `${this.host}/api/office-summary/?year=${year}`;\r\n    return this.http.get<OfficeSummary[]>(URL)\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RaisedVsSpentGQL",
            "id": "injectable-RaisedVsSpentGQL-09b47fdd667e6b309ce280eeddb141855a8da0076c60654df82a0305275e323d42918460955b826a8327ea434fd1812e4e6b3447d94543d5fc76cbac8c1b22fd",
            "file": "src/app/graphql/raised-vs-spent-gql/raised-vs-spent-gql.query.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "gql`\r\n    query raisedVsSpent ($candidateId: String!) {\r\n      candidate(id: $candidateId) {\r\n        committee {\r\n          contributions {\r\n            sum\r\n          }\r\n          expenses {\r\n            sum\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Query, gql } from 'apollo-angular';\r\n\r\nexport interface RaisedVsSpent {\r\n  candidate: {\r\n    committee: {\r\n      contributions: {\r\n        sum: number;\r\n      };\r\n      expenses: {\r\n        sum: number;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RaisedVsSpentGQL extends Query<Response> { \r\n  document = gql`\r\n    query raisedVsSpent ($candidateId: String!) {\r\n      candidate(id: $candidateId) {\r\n        committee {\r\n          contributions {\r\n            sum\r\n          }\r\n          expenses {\r\n            sum\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n}\r\n",
            "extends": "Query",
            "type": "injectable"
        },
        {
            "name": "RoutingService",
            "id": "injectable-RoutingService-abf9c3ef10c4f1dc508d6552e12ea856075dd9751f7cf286441386870e2670fa6e712869bc2cf30f6f19e9fcb4ef9df796bb2047332a23365ab6aea01a8c2723",
            "file": "src/app/public/services/routing.service.ts",
            "properties": [
                {
                    "name": "officeRootPath",
                    "defaultValue": "'office/'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getCandidateRoute",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDistrictRoute",
                    "args": [
                        {
                            "name": "district",
                            "type": "District",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "district",
                            "type": "District",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getOfficeRoute",
                    "args": [
                        {
                            "name": "office",
                            "type": "Office",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "office",
                            "type": "Office",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { District } from 'src/app/navigation-menu/interfaces/district';\r\nimport { Candidate } from 'src/app/store/interfaces/candidate';\r\nimport { Office } from 'src/app/store/interfaces/office';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RoutingService {\r\n  private officeRootPath = 'office/';\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  getOfficeRoute(office: Office) {\r\n    return this.officeRootPath + office.office.toLowerCase().split(' ').join('-');\r\n  }\r\n\r\n  getDistrictRoute(district: District) {\r\n    return `${this.officeRootPath}${district.office}/${district.district_number}`.toLowerCase().split(' ').join('-');\r\n  }\r\n\r\n  getCandidateRoute(candidate: Candidate) {\r\n    let path = `${candidate.office}`;\r\n\r\n    if (candidate.district !== null) {\r\n      path += `/${candidate.district}`;\r\n    }\r\n\r\n    return `${this.officeRootPath}${path}/${candidate.id}`.toLowerCase().split(' ').join('-');\r\n  }\r\n\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "SideMenuService",
            "id": "injectable-SideMenuService-ef972eb834219517b536ca597c096cbfab5f47d68904938d21411d0d28a7fda89a9123e6a83eca0d40f2683ddfca628c88467098c3cc4fc5e83e1b76713c18d4",
            "file": "src/app/navigation-menu/services/side-menu.service.ts",
            "properties": [
                {
                    "name": "sideMenuOpened$",
                    "defaultValue": "this.sideMenuStatus.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sideMenuStatus",
                    "defaultValue": "new BehaviorSubject(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "closeSideMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openSideMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSideMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SideMenuService {\r\n  private sideMenuStatus: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  public sideMenuOpened$ = this.sideMenuStatus.asObservable()\r\n\r\n  constructor( ) { }\r\n\r\n  openSideMenu() {\r\n    this.sideMenuStatus.next(true);\r\n  }\r\n\r\n  closeSideMenu() {\r\n    this.sideMenuStatus.next(false);\r\n  }\r\n\r\n  toggleSideMenu() {\r\n    this.sideMenuStatus.next(!this.sideMenuStatus.value);\r\n  }\r\n}\r\n\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "SidenavService",
            "id": "injectable-SidenavService-346edc3783c208f986710b0714719c27a39ac5bd56d0604714eacd62efde86022f18ada426eed33b94da33ee2b60cc86b26a561d2b6d33f4b32720e92ad784f3",
            "file": "src/app/shared/services/sidenav.service.ts",
            "properties": [
                {
                    "name": "candidateChanged$",
                    "defaultValue": "this.selectedCandidateChangedSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "candidateKeyEmittedFromSidenav$",
                    "defaultValue": "this.emitCandidateKeyFromSidenav.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "candidateNameEmittedFromCard$",
                    "defaultValue": "this.emitCandidateNameFromCard.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "candidateTypeEmittedFromSplash$",
                    "defaultValue": "this.emitCandidateTypeFromSplash.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "emitCandidateKeyFromSidenav",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "emitCandidateNameFromCard",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "emitCandidateTypeFromSplash",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "officeChanged$",
                    "defaultValue": "this.selectedOfficeChangedSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "officeSeatChanged$",
                    "defaultValue": "this.selectedSeatChangedSource.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "selectedCandidateChangedSource",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "selectedOfficeChangedSource",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "selectedSeatChangedSource",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "changeSelectedCandidate",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeSelectedOffice",
                    "args": [
                        {
                            "name": "officeName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "officeName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "changeSelectedSeat",
                    "args": [
                        {
                            "name": "seat",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "seat",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitCandidateKeySidenav",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitCandidateNameCard",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emitCandidateTypeSplash",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SidenavService {\r\n  selectedCandidateChangedSource = new Subject<string>();\r\n  selectedOfficeChangedSource = new Subject<string>();\r\n  selectedSeatChangedSource = new Subject<string>();\r\n\r\n  candidateChanged$ = this.selectedCandidateChangedSource.asObservable();\r\n  officeChanged$ = this.selectedOfficeChangedSource.asObservable();\r\n  officeSeatChanged$ = this.selectedSeatChangedSource.asObservable();\r\n\r\n  emitCandidateKeyFromSidenav = new Subject<any>();\r\n  emitCandidateNameFromCard = new Subject<any>();\r\n  emitCandidateTypeFromSplash = new Subject<any>();\r\n\r\n  candidateKeyEmittedFromSidenav$ = this.emitCandidateKeyFromSidenav.asObservable();\r\n  candidateNameEmittedFromCard$ = this.emitCandidateNameFromCard.asObservable();\r\n  candidateTypeEmittedFromSplash$ = this.emitCandidateTypeFromSplash.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  changeSelectedOffice(officeName: string) {\r\n    this.selectedOfficeChangedSource.next(officeName.toLowerCase());\r\n  }\r\n\r\n  changeSelectedSeat(seat: string) {\r\n    this.selectedSeatChangedSource.next(seat);\r\n  }\r\n\r\n  changeSelectedCandidate(id: string) {\r\n    this.selectedCandidateChangedSource.next(id);\r\n  }\r\n\r\n  emitCandidateKeySidenav(key: string) {\r\n    this.emitCandidateKeyFromSidenav.next(key);\r\n  }\r\n\r\n  emitCandidateNameCard(key: string) {\r\n    this.emitCandidateNameFromCard.next(key);\r\n  }\r\n\r\n  emitCandidateTypeSplash(key: string) {\r\n    this.emitCandidateTypeFromSplash.next(key);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "type": "injectable"
        },
        {
            "name": "YearResolverService",
            "id": "injectable-YearResolverService-39bc08205d7c3ee021d499cc0f47f0862421dbac342a012329648bff38b8371bd3dae30b474665f2cd8e2bc64cc6247b5fd2e6f03c3253ba991cff5d80efab00",
            "file": "src/app/public/resolvers/year-resolver.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { YearService } from 'src/app/store/services/year.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class YearResolverService {\r\n\r\n  constructor(\r\n    private yearService: YearService,\r\n  ) {}\r\n\r\n  resolve( ): boolean {\r\n    this.yearService.changeElectionYear('');\r\n    return true;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "yearService",
                        "type": "YearService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "yearService",
                        "type": "YearService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "YearService",
            "id": "injectable-YearService-4c34a4709189b29eea9e7582d83d97802d73489d2eba1f17e76ab05702787881361938365f08fe98b3e3fdc03b071888e25aa6f25c6cf8afe0c36ec98bc00673",
            "file": "src/app/store/services/year.service.ts",
            "properties": [
                {
                    "name": "electionYear",
                    "defaultValue": "new Subject<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "electionYearChanged$",
                    "defaultValue": "this.electionYear.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "changeElectionYear",
                    "args": [
                        {
                            "name": "year",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class YearService {\r\n  private electionYear = new Subject<string>();\r\n  electionYearChanged$ = this.electionYear.asObservable();\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  public changeElectionYear(year: string) {\r\n    this.electionYear.next(year);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-bea2d34bd40fceaf272dba5038dd137ddf60c11db8a748acb31e3ed8655c6972128123a51cdc8c20ea979dd9ba6ca7d04f9d9e7e86a41ceeb8696c9f6eeb7b21",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  navigateTo() {\r\n    return browser.get(browser.baseUrl) as Promise<any>;\r\n  }\r\n\r\n  getTitleText() {\r\n    return element(by.css('app-root h1')).getText() as Promise<string>;\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MockCandidateCardService",
            "id": "class-MockCandidateCardService-f5c4d54560edbf041590e445b71c434389fb8a7c542fcde5b807aa2077861a4a7086533ef8371c71a3136588052d512dc96ccadada6c77277cf4a2fcbd07248f",
            "file": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate-card.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { of } from \"rxjs\";\r\nimport { CandidateCardService } from 'src/app/store/services/candidate.card.service';\r\nimport { CandidateCard } from \"src/app/store/interfaces/candidate.card\";\r\n\r\nconst mockCandidateCard: CandidateCard = {\r\n  id: 'mock|id',\r\n  name: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  candidateImgURL: null,\r\n  website: 'https://www.google.com/',\r\n  office: 'Mayor',\r\n  district: null,\r\n  year: '2020',\r\n  raised: '150000',\r\n  donors: '3250',\r\n}\r\n\r\nexport class MockCandidateCardService implements Partial<CandidateCardService> {\r\n  getCandidateCard = () => of(mockCandidateCard);\r\n}\r\n",
            "properties": [
                {
                    "name": "getCandidateCard",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Partial"
            ]
        },
        {
            "name": "MockCandidateDetailsService",
            "id": "class-MockCandidateDetailsService-4d0a590c1831e283669fb937478a550884d736fed2c0c3eee97e2877152d3325c9fd0cc4f15e46526e9a43c62c96eb87aec24f98c2c7be01d0e7581b61e29967",
            "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Meta, Story } from '@storybook/angular/types-6-0';\r\nimport { moduleMetadata } from '@storybook/angular';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { of } from 'rxjs';\r\n\r\nimport { CandidateDetailsModule } from '../candidate-details.module';\r\nimport { CandidateDetailsHeaderComponent } from './candidate-details-header.component';\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\nimport { CandidateDetailsHeader } from 'src/app/store/interfaces/candidate-details-header';\r\n\r\nexport default {\r\n  title: 'Candidate Details/Details Header',\r\n  component: CandidateDetailsHeaderComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [],\r\n      imports: [\r\n        CandidateDetailsModule,\r\n        HttpClientModule,\r\n      ],\r\n      providers: [],\r\n    }),\r\n  ], \r\n  argTypes: {\r\n    imageUrl: { type: 'string' },\r\n    candidateName: { type: 'string' },\r\n    description: { type: 'string' },\r\n    website: { type: 'string' },\r\n    raised: { type: 'number' },\r\n    donors: { type: 'number' },\r\n    averageDonation: { type: 'number' },\r\n  },\r\n} as Meta;\r\n\r\nconst mockHeader: CandidateDetailsHeader = {\r\n    id: 'mock|id',\r\n    imageUrl: null,\r\n    candidateName: 'John Jones',\r\n    description: 'Former Fire Fighter and Active Reservist',\r\n    website: 'https://www.google.com/',\r\n    raised: '150000',\r\n    donors: '3250',\r\n    averageDonation: '200',\r\n}\r\n\r\nclass MockCandidateDetailsService implements Partial<CandidateDetailsService> {\r\n  getHeader = () => of(mockHeader);\r\n}\r\n\r\nconst fakeActivatedRoute = {\r\n} as ActivatedRoute;\r\n\r\nconst Template: Story<CandidateDetailsHeaderComponent> = (args: CandidateDetailsHeaderComponent) => ({\r\n  moduleMetadata: {\r\n    providers: [\r\n      { provide: CandidateDetailsService, useClass: MockCandidateDetailsService },\r\n      // See: https://www.joshuacolvin.net/mocking-activated-route-data-in-angular/\r\n      { \r\n        provide: ActivatedRoute,\r\n        useValue: {\r\n          paramMap: of({\r\n            // candidateId: '',\r\n            get: (key: string) => {\r\n              switch (key) {\r\n                case 'candidateId':\r\n                  return '';\r\n              }\r\n            }\r\n          }),\r\n        },\r\n      }\r\n    ]\r\n  },\r\n  props: args,\r\n})\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n};\r\n",
            "properties": [
                {
                    "name": "getHeader",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Partial"
            ]
        },
        {
            "name": "MockCandidateDetailsService",
            "id": "class-MockCandidateDetailsService-a1d914372982f9dee62d1f1e6d19e0b73099f39ea7cdd9088ba3a5d32c2885c4ffaef9762b30bed84c368a9cec2ecb3ad5bfba42dfc5d218dc777b69422ee949-1",
            "file": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.mock-candidate-details.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { of } from \"rxjs\";\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\nimport { CandidateDetailsHeader } from \"src/app/store/interfaces/candidate-details-header\";\r\n\r\nconst mockCandidateDetailsHeader: CandidateDetailsHeader = {\r\n  id: 'mock|id',\r\n  candidateName: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  imageUrl: null,\r\n  website: 'https://www.google.com/',\r\n  raised: '150000',\r\n  donors: '3250',\r\n  averageDonation: '250',\r\n};\r\n\r\nexport class MockCandidateDetailsService implements Partial<CandidateDetailsService> {\r\n  // getCandidateCard = () => of(mockCandidateCard);\r\n  getHeader = () => of(mockCandidateDetailsHeader);\r\n}\r\n",
            "properties": [
                {
                    "name": "getHeader",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Partial"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "MockCandidateDetailsService-1"
        },
        {
            "name": "MockCandidateQuickViewService",
            "id": "class-MockCandidateQuickViewService-c1e6186eedf9677cc4fe6e11c28fdface9113f97ef2f0583301b2e620bb2568cf53fbae1b8fbcb54c1c929b72293f9ac7516f7dbf136d959048707f26eeecf52",
            "file": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.mock-candidate.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { of } from \"rxjs\";\r\nimport { CandidateQuickView } from \"src/app/store/interfaces/candidate.quickview\";\r\nimport { CandidateQuickViewService } from \"src/app/store/services/candidate.quickview.service\";\r\n\r\nconst mockCandidateQuickView: CandidateQuickView = {\r\n  id: 'mock|id',\r\n  raisedVsSpent: {\r\n    id: 'mock|id',\r\n    raised: '150000',\r\n    spent: '170000',\r\n    averageDonation: '1237',\r\n  },\r\n  donationsByGroupData: {\r\n    id: 'mock|id',\r\n    groups: [\r\n    {\r\n      name: 'ABC 1',\r\n      amount: '12345',\r\n      percent: '50',\r\n    },\r\n    {\r\n      name: 'ABC 2',\r\n      amount: '1234',\r\n      percent: '30',\r\n    },\r\n    {\r\n      name: 'ABC 3',\r\n      amount: '123',\r\n      percent: '10',\r\n    },\r\n    {\r\n      name: 'ABC 4',\r\n      amount: '12',\r\n      percent: '5',\r\n    },\r\n    {\r\n      name: 'ABC 5',\r\n      amount: '1',\r\n      percent: '1',\r\n    },\r\n  ],\r\n  },\r\n  raisedInOut: {\r\n    id: 'mock|id',\r\n    inside: '12345',\r\n    outside: '4321',\r\n    areaName: 'City of San Diego',\r\n    jurisdiction: 'City',\r\n    // jurisdictionSuffix: '1',\r\n  },\r\n  outsideMoney: {\r\n    id: 'mock|id',\r\n    support: '56789',\r\n    oppose: '9876',\r\n  },\r\n}\r\n\r\nexport class MockCandidateQuickViewService implements Partial<CandidateQuickViewService> {\r\n  getCandidateQuickView = () => of(mockCandidateQuickView);\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "getCandidateQuickView",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Partial"
            ]
        },
        {
            "name": "MockCandidateService",
            "id": "class-MockCandidateService-2a6a7411ae2994c3270968bcc7753004979d981909eaa0bfcc2e80266bd2e358076aa71c16b7e153bd8d8e88db94534f104ec12d9046f63a668d38aaa9e5f553",
            "file": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate.service.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { of } from \"rxjs\";\r\nimport { Candidate } from \"src/app/store/interfaces/candidate\";\r\nimport { CandidateService } from \"src/app/store/services/candidate.service\";\r\n\r\nconst mockCandidate: Candidate = {\r\n  id: 'mock|id',\r\n  full_name: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  image_url: null,\r\n  website: 'https://www.google.com/',\r\n  agency: 'City of San Diego',\r\n  office: 'Mayor',\r\n  district: null,\r\n  year: '2020',\r\n  in_general_election: true,\r\n  full_office_name: 'Mayor San Diego',\r\n  jurisdiction: 'City',\r\n  total_contributions: '150000',\r\n  contributor_count: '3250',\r\n}\r\n\r\nexport class MockCandidateService implements Partial<CandidateService> {\r\n  getCandidates = () => of([mockCandidate]);\r\n}\r\n",
            "properties": [
                {
                    "name": "getCandidates",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Partial"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-47f712c4ede5da10cc06065333da5fab79c3a83165c3fea3d6134dc1df13e9f01fcb0d65c851fa8208d0930a3e58cf7719d01f9a1cfb1d42771d6fb5d4d0c5b4",
            "file": "src/app/public/components/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [
                "./about.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.scss']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n.about_container{\r\n    padding:20px 40px 0px 30px;\r\n}\r\n.about{\r\n    margin: 20px auto 20px auto;\r\n    text-align:center;\r\n    padding:40px 40px 40px 40px;\r\n    font-weight: 100;\r\n    box-shadow: $vvshadow;\r\n    color:#4E4E4E;\r\n    background-color: #fff;\r\n    h1{\r\n      margin: 0px;\r\n    }\r\n    p{\r\n      margin:10px 0px 20px 0px;\r\n      line-height: 1.4;\r\n    }\r\n    .about_caption{\r\n        max-width: 650px;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n\r\n    .orgs{\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        column-gap: 40px;\r\n        margin: 40px auto 40px auto;\r\n        max-width: 870px;\r\n        row-gap: 20px;\r\n        a{\r\n            font-weight: bold;\r\n        }\r\n        p{ \r\n            font-size: 14px;\r\n        }\r\n        img{\r\n            margin-bottom: 20px;\r\n            margin-top: 20px;\r\n            max-width: 100%;\r\n        }\r\n    }\r\n\r\n    .transparent{\r\n        display:grid;\r\n        grid-template-columns: 1fr 425px;\r\n        padding:0px;\r\n\r\n        .transparent_copy{\r\n\r\n            text-align: left;\r\n            align-self: center;\r\n            \r\n        }\r\n\r\n        h1{\r\n            text-align: left !important;\r\n            align-self: center;\r\n        }\r\n\r\n        .transparent_photo{\r\n            align-self: end;\r\n            justify-self: end;\r\n            img{\r\n                transform: translate(40px,45px);\r\n            }\r\n        }\r\n        .transparent_photo_mobile{\r\n            display: none;\r\n            visibility: hidden;\r\n        }\r\n    }\r\n\r\n   \r\n    \r\n\r\n\r\n    @media only screen and (max-width: 1000px) {\r\n        .orgs{\r\n            grid-template-columns: 1fr !important;\r\n            max-width: 600px;\r\n        }\r\n        .transparent{\r\n     \r\n            grid-template-columns: 1fr;\r\n\r\n            .transparent_copy{\r\n\r\n                text-align: center;\r\n                \r\n            }\r\n            \r\n            .transparent_photo{\r\n                display: none;\r\n                visibility: hidden;\r\n            }\r\n            .transparent_photo_mobile{\r\n                display: inherit;\r\n                visibility: visible;\r\n                align-self: center;\r\n                justify-self: center;\r\n                img{\r\n                    transform: translate(0px,40px);\r\n                    max-height: 400px;\r\n                    width:auto;\r\n                    max-width: 100%;\r\n                }\r\n\r\n            }\r\n\r\n            h1{\r\n                text-align: center !important;\r\n            }\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./about.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"about_container\">\r\n  <div class=\"about\">\r\n    <h1>About Us</h1>\r\n    <p class=\"about_caption\">We are a coalition of non-partisan organizations working together to create transparency for campaign contributions and expenditures with local San Diego candidates.\r\n    </p>\r\n    <div class=\"orgs\">\r\n        <div>\r\n          <a href=\"https://opensandiego.org/\"><img src=\"../../../assets/about/osd.svg\" width=\"auto\" height=\"50\" alt=\"Open San Diego\"/></a>\r\n          <p><a href=\"https://opensandiego.org/\">Open San Diego</a> is a group of San Diegans who believe data and technology can better serve citizens, sparking a more vibrant democracy and civic life. We are a brigade of the national, non-partisan Code for America, leveraging their resources, but keenly focused on our improving local issues here at home.</p>\r\n        </div>\r\n        <div>\r\n          <a href=\"https://represent.us/\"><img src=\"../../../assets/about/repus.svg\" width=\"auto\" height=\"50\"  alt=\"Represent Us\"/></a>\r\n          <p><a href=\"https://represent.us/\">RepresentUs</a> brings together conservatives, progressives, and everyone in between to pass powerful anti-corruption laws that stop political bribery, end secret money, and fix our broken elections.</p>\r\n        </div>\r\n        <div>\r\n          <a href=\"https://www.lwv.org/\"><img src=\"../../../assets/about/lwv.svg\" width=\"auto\" height=\"50\" alt=\"The League of Women Voters\"/></a>\r\n          <p><a href=\"https://www.lwv.org/\">The League of Women Voters</a> challenges all efforts and tactics that threaten our democracy and limit the ability of voters to exercise their right to vote.</p>\r\n        </div>\r\n        <div>\r\n          <a href=\"https://www.commoncause.org/\"><img src=\"../../../assets/about/commoncause.svg\" width=\"auto\" height=\"50\"  alt=\"Common Cause\"/></a>\r\n          <p><a href=\"https://www.commoncause.org/\">Common Cause</a> is made up of more than 1 million powerful, fearless, ordinary Americans working together to build a democracy that works for us all.</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"transparent\">\r\n      <div class=\"transparent_copy\">\r\n        <h1>We Fight for Transparency</h1>\r\n        <p>Currently, campaign finance information for candidates running for local offices as well as money spent by outside groups to support or defeat them is not readily accessible to the public. When the amount of money being spent as well as the source is not known, voters feel disenfranchised by the election process. Making campaign finance data easy to find and read will increase public trust and confidence in the election process.</p>\r\n     </div>\r\n     <div class=\"transparent_photo\">\r\n      <img src=\"../../../../assets/about/VV_FooterBG-AboutUs.png\" width=\"100%\" height=\"auto\" alt=\"Voter\"/>\r\n     </div>\r\n     <div class=\"transparent_photo_mobile\">\r\n      <img src=\"../../../../assets/about/VV_FooterBG-AboutUs-Mobile.png\" width=\"auto\" height=\"auto\" alt=\"Voter\"/>\r\n     </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-20d8f005b98143aacd0a44ae94a815ef6c0cf78bd01966cd1c570bc03f8dda2f07b560af367d70386208f9530f05311bebd04d1f3b0d94356a1fd5c73f2c4b15",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'sdvv-frontend'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'sdvv-frontend';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<home></home>\r\n"
        },
        {
            "name": "BreadcrumbComponent",
            "id": "component-BreadcrumbComponent-cca3150a62a280fdf0918a7b131bde32a9d674a26d91e61042c6ce553061728cb2ca7c89324d75212475d5c7b9a9c1c41c5969eada702de9ac6176190fb24be5",
            "file": "src/app/public/components/breadcrumb/breadcrumb.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "breadcrumb",
            "styleUrls": [
                "./breadcrumb.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "home",
                    "defaultValue": "{icon: 'pi pi-home', routerLink: '/home', label: ' San Diego'}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "createBreadcrumbs",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRoute",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        },
                        {
                            "name": "breadcrumbs",
                            "type": "MenuItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<MenuItem[]>",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRoute",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "breadcrumbs",
                            "type": "MenuItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\n\r\nimport {MenuItem} from 'primeng/api';\r\nimport { filter } from 'rxjs/operators';\r\nimport { CandidateCardService } from 'src/app/store/services/candidate.card.service';\r\n\r\n@Component({\r\n  selector: 'breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss'],\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n  items: MenuItem[];\r\n  readonly home = {icon: 'pi pi-home', routerLink: '/home', label: ' San Diego'};\r\n  \r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private candidateCardService: CandidateCardService,\r\n  ) { }\r\n\r\n   async createBreadcrumbs(route: ActivatedRoute, url: string = '', breadcrumbs: MenuItem[] = []): Promise<MenuItem[]> {\r\n    if (route.children.length < 1) {\r\n      return breadcrumbs;\r\n    }\r\n\r\n    for (const child of route.children) {\r\n      const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\r\n\r\n      if (routeURL !== '') {\r\n        url += `/${routeURL}`;\r\n      }\r\n\r\n      let label: string;\r\n      const type: string = child.snapshot.data['type'];\r\n\r\n      if (type === 'district') {\r\n        label = child.snapshot.data.office.office;\r\n\r\n        if (child.snapshot.params['district_number'] !== '0') {\r\n          label += ` District ` + child.snapshot.params['district_number'];\r\n        }\r\n      } else if (type === 'candidate') {\r\n        const candidateId = child.snapshot.params['candidateId'];\r\n        const candidate$ = this.candidateCardService.getCandidateCard(candidateId)\r\n        const candidate = await (candidate$).toPromise();\r\n        label = candidate.name;\r\n      } else if (type === 'details') {\r\n        label = 'Details';\r\n      } else if (type === 'year') {\r\n        label = child.snapshot.params['year'];\r\n      }\r\n\r\n      if (label) {\r\n        breadcrumbs.push({label, routerLink: url});\r\n      }\r\n\r\n      return this.createBreadcrumbs(child, url, breadcrumbs);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe( async () => this.items = await this.createBreadcrumbs(this.activatedRoute.root))\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./breadcrumb.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "candidateCardService",
                        "type": "CandidateCardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "candidateCardService",
                        "type": "CandidateCardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-breadcrumb [home]=\"home\" [model]=\"items\"></p-breadcrumb>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8ceaf520f96e5437b08eeda244d84efb29effe62ddca4fc38eaa229085c2a1126c5715e61445bae741505aca1e4d377b350cb05fadd1dc45d9b2bbf7527029f1",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CandidateCardComponent",
            "id": "component-CandidateCardComponent-3c363c1c9762414a54a8c49ea05c852c5b38ebb356df56f3dfdbcefe6f0f60974e8ef6479b434cba5e55a13fd312066e2bb28bbd635ce52b3f5a3a73f49bf7c9",
            "file": "src/app/candidate/candidate-card/candidate-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "candidate-card",
            "styleUrls": [
                "./candidate-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./candidate-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "candidateId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inExpandedCard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitCandidateId",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "candidateImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "defaultImagePath",
                    "defaultValue": "'assets/candidate-card/profile.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "donors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "fullName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectCandidate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setCandidate",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "CandidateCard",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "CandidateCard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CandidateCardService } from 'src/app/store/services/candidate.card.service';\r\nimport { CandidateCard } from 'src/app/store/interfaces/candidate.card';\r\n\r\n@Component({\r\n  selector: 'candidate-card',\r\n  templateUrl: './candidate-card.component.html',\r\n  styleUrls: ['./candidate-card.component.scss']\r\n})\r\n\r\nexport class CandidateCardComponent implements OnChanges {\r\n  @Input() candidateId: string;\r\n  @Input() inExpandedCard?: boolean;\r\n  @Output() private emitCandidateId = new EventEmitter<any>();\r\n\r\n  private defaultImagePath = 'assets/candidate-card/profile.png';\r\n\r\n  candidateImg: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  fullName: string;\r\n  description: string;\r\n  raised: number;\r\n  donors: number;\r\n  website: string;\r\n\r\n  buttonText: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private candidateCardService: CandidateCardService,\r\n  ) { }\r\n\r\n  private setCandidate(candidate: CandidateCard): void {\r\n    this.candidateImg = candidate.candidateImgURL \r\n      ? candidate.candidateImgURL\r\n      : this.defaultImagePath;\r\n    this.firstName = candidate.name.split(' ')[0];\r\n    this.lastName = candidate.name.slice(this.firstName.length+1);\r\n    this.fullName = candidate.name;\r\n    this.description = candidate.description;\r\n    this.raised = parseInt(candidate.raised);\r\n    this.donors = parseInt(candidate.donors);\r\n    this.website = candidate.website;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n\r\n    if (changes['candidateId']) {\r\n      this.candidateCardService.getCandidateCard(changes['candidateId'].currentValue)\r\n        .subscribe(candidate => this.setCandidate(candidate));\r\n    }\r\n\r\n    this.buttonText = (this.inExpandedCard) ? 'See Full Details' : 'See Details';\r\n  }\r\n\r\n  selectCandidate() {\r\n    if (this.inExpandedCard) {\r\n      this.router.navigate(['details'], { relativeTo: this.activatedRoute });\r\n    } else {\r\n      this.router.navigate([this.candidateId], { relativeTo: this.activatedRoute });\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n@import \"../../styles/global\";\r\n\r\n.candidate-card-outer-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.candidate {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    .candidate-image-container {\r\n        height: 125px;\r\n        width: 125px;\r\n    }\r\n    .candidate-image {\r\n        display: flex;\r\n        height: 125px;\r\n        width: 125px;\r\n        border-radius: 50%;\r\n        overflow: hidden;\r\n        border: 1px solid $vvbackground;\r\n        \r\n        img {\r\n            object-fit: cover;\r\n            object-position: center top;\r\n            width: 100%;\r\n            height: auto;\r\n            background-color: $vvbackground;\r\n        }\r\n    }\r\n}\r\n\r\n.candidate-card {\r\n    text-align: center;\r\n    // height: 320px;\r\n    margin: 10px;\r\n    padding: 15px 25px 15px 25px;\r\n    background: #fff;\r\n    box-shadow: $vvshadow;\r\n    // width: 180px !important;\r\n    h1 {\r\n        font-size: 20px;\r\n        color: $vvdarkblue;\r\n    }\r\n    h2 {\r\n        font-weight: normal;\r\n        font-size: 12px;\r\n        color: $vvgrey;\r\n        margin: 5px 0px 10px 0px;\r\n    }\r\n    h3 {\r\n        font-size: 18px;\r\n        color: $vvdarkgrey;\r\n    }\r\n    .first{\r\n        margin-top:10px;\r\n    }\r\n\r\n    .candidate-numbers {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        margin-bottom:10px;\r\n        div {\r\n            padding: 0 6px;\r\n            h2, h3{\r\n                margin: 1px 0;\r\n            }\r\n        }\r\n        .raised h3 {\r\n            color: $vvgreen;\r\n        }\r\n    } \r\n    .candidate-button {\r\n        @include button-styles;\r\n        padding: 0 16px;\r\n    }\r\n    .candidate-button:hover {\r\n        background-color: $vvlightblue;\r\n        text-decoration: none;\r\n    }\r\n}\r\n\r\n.candidate-card.in-expanded {\r\n    margin: 0px;\r\n    padding: 0;\r\n    box-shadow: none;\r\n    height: auto;\r\n    \r\n    .candidate-image {\r\n        border: 0px;\r\n    }\r\n}\r\n\r\n.website-link {\r\n    display: flex;\r\n    justify-content: center;\r\n    vertical-align: middle;\r\n    align-items: center;\r\n    margin-top: 10px;\r\n    font-size: 14px;\r\n    color: $vvlightblue;\r\n\r\n    .mat-icon {\r\n        padding-right: 5px;\r\n    }\r\n}\r\n",
                    "styleUrl": "./candidate-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "candidateCardService",
                        "type": "CandidateCardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "candidateCardService",
                        "type": "CandidateCardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"candidate-card-outer-container\">\r\n\r\n    <div class=\"candidate-card justify-center align-center nogutter\" [ngClass]=\"{'in-expanded' : inExpandedCard}\">\r\n\r\n    <div class=\"candidate p-col-12\">\r\n      <div class=\"candidate-image-container\">\r\n        <div class=\"candidate-image\">\r\n          <img [src]=\"candidateImg\" [alt]=\"fullName\">\r\n        </div>\r\n      </div>\r\n\r\n      <h1 class=\"first\">{{firstName}}</h1>\r\n      <h1>{{lastName}}</h1>\r\n      <h2>{{description}}</h2>\r\n    </div>\r\n\r\n    <div class=\"candidate-numbers\">\r\n      <div class=\"raised\">\r\n        <h2>Raised</h2>\r\n        <h3>{{raised | currency : 'USD' : 'symbol' : '1.0-0'}}</h3>\r\n      </div>\r\n\r\n      <div class=\"donors\">\r\n        <h2>Donors</h2>\r\n        <h3>{{donors}}</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <button *ngIf=\"buttonText\"\r\n      class=\"candidate-button\" \r\n      mat-flat-button (click)=\"selectCandidate()\"\r\n    >{{buttonText}}</button>\r\n\r\n    <div *ngIf=\"inExpandedCard && website\" class=\"website-link\">\r\n      <mat-icon>link</mat-icon>\r\n      <a href=\"{{website}}\">Website</a>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "CandidateDetailsHeaderComponent",
            "id": "component-CandidateDetailsHeaderComponent-c9521b5253b7f887b25139907a76acdd4e2d9494b74812f0cb018b78807228f4c565b52a309e8f5a603719c8947b3043dd6760c7e813761d38889ffd44664f37",
            "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-candidate-details-header",
            "styleUrls": [
                "./candidate-details-header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./candidate-details-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "averageDonation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "averageDonationAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "candidateName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "defaultImagePath",
                    "defaultValue": "'assets/candidate-card/profile.png'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "donors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "donorsCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "faLink",
                    "defaultValue": "faLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "raisedAmount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\n\r\nimport { getCompactFormattedCurrency,  } from '../../shared/number-formatter'\r\n@Component({\r\n  selector: 'app-candidate-details-header',\r\n  templateUrl: './candidate-details-header.component.html',\r\n  styleUrls: ['./candidate-details-header.component.scss']\r\n})\r\nexport class CandidateDetailsHeaderComponent implements OnInit {\r\n  imageUrl: string;\r\n  candidateName: string;\r\n  description: string;\r\n  website: string;\r\n  raised: number;\r\n  donors: number;\r\n  averageDonation: number;\r\n\r\n  private defaultImagePath = 'assets/candidate-card/profile.png';\r\n\r\n  public raisedAmount: string;\r\n  public donorsCount: string;\r\n  public averageDonationAmount: string;\r\n  faLink = faLink;\r\n\r\n  constructor(\r\n    private candidateDetailsService: CandidateDetailsService,\r\n    private route: ActivatedRoute,\r\n   ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId');\r\n\r\n      this.candidateDetailsService.getHeader(candidateId)\r\n        .subscribe( header => {\r\n          this.imageUrl = header.imageUrl \r\n            ? header.imageUrl\r\n            : this.defaultImagePath;\r\n          this.candidateName = header.candidateName;\r\n          this.description = header.description;\r\n          this.website = header.website;\r\n          this.raised = parseInt(header.raised);\r\n          this.donors = parseInt(header.donors);\r\n          this.averageDonation = parseInt(header.averageDonation);\r\n  \r\n          this.raisedAmount = getCompactFormattedCurrency(this.raised);\r\n          this.donorsCount = this.donors.toLocaleString();\r\n          this.averageDonationAmount = getCompactFormattedCurrency(this.averageDonation);\r\n        })\r\n    });\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.details-header-wrapper {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr; \r\n  grid-template-rows: 1fr 1fr 1fr;\r\n  column-gap: 10px;\r\n  align-items: stretch;\r\n  background-color: #ECEFF2;\r\n\r\n  div {\r\n    background-color: white;\r\n  }\r\n}\r\n\r\n.image {\r\n  grid-column: 1;\r\n  grid-row: 1 / 4;\r\n\r\n  padding: 5px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  background-color: white;\r\n}\r\n\r\n.image img {\r\n  border-radius: 50%;\r\n  max-width: 100%;\r\n  max-height: 100%;\r\n  background-color: rgb(238, 238, 238);\r\n}\r\n\r\n.info {\r\n  grid-column: 2;\r\n  grid-row: 1 / 4;\r\n\r\n  text-align: center;\r\n  font-size: clamp(1em, 1.75vw, 10vw);\r\n\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n\r\n  .website fa-icon {\r\n    padding-right: MIN(.6em, 2vw);\r\n  }\r\n}\r\n\r\n.candidate-name {\r\n  font-weight: bold;\r\n  font-size: clamp(1.5em, 2.5vw, 10vw);\r\n}\r\n\r\n.raised, .donors, .average-donation {\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  font-size: clamp(1em, 2.5vw, 10vw);\r\n  .amount {\r\n    font-size: 1.25em;\r\n  }  \r\n}\r\n\r\n.raised, .donors, .average-donation {\r\n  grid-column: 3;\r\n}\r\n.raised {\r\n  grid-row: 1;\r\n}\r\n.donors {\r\n  grid-row: 2;\r\n}\r\n.average-donation {\r\n  grid-row: 3;\r\n}\r\n\r\n.raised .amount {\r\n  color: green;\r\n}\r\n.donors .amount, .average-donation .amount  {\r\n  color: blue;\r\n}\r\n\r\n\r\n@media (min-width: 768px) {\r\n  .details-header-wrapper {\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    column-gap: 15px;    \r\n  }\r\n  .image, .info, .average-donation {\r\n    grid-row: 1 / 3;\r\n  }\r\n  .info {\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n  }\r\n\r\n  .raised, .donors, .average-donation {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    text-align: center;\r\n  }\r\n\r\n  .average-donation {\r\n    grid-column: 4;\r\n    div {\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  .raised, .donors {\r\n    grid-column: 3;\r\n    div {\r\n      padding: 5px;\r\n    }\r\n  }\r\n}\r\n\r\n@media (min-width: 1500px) {\r\n  .details-header-wrapper {\r\n    grid-template-rows: 1fr 1fr;\r\n  }\r\n  .image {\r\n    grid-row: 1 / 2;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n\r\n    img {\r\n      max-width: 40%;\r\n    }\r\n  }\r\n  .info {\r\n    grid-column: 1;\r\n    grid-row: 2 / 3;\r\n    justify-content: space-evenly;\r\n  }\r\n\r\n  .raised, .donors, .average-donation {\r\n    grid-row: 1 / 3;\r\n  }\r\n  .raised {\r\n    grid-column: 2;\r\n  }\r\n  .donors {\r\n    grid-column: 3;\r\n  }\r\n  .average-donation {\r\n    grid-column: 4;\r\n  }\r\n}\r\n\r\n@media (max-width:380px) {\r\n  .details-header-wrapper {\r\n    min-height: 120px;\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n\r\n  .image {\r\n    display: none;\r\n  }\r\n\r\n  .info {\r\n    grid-column: 1;\r\n  }\r\n  \r\n  .raised, .donors, .average-donation {\r\n    grid-column: 2;\r\n  }\r\n}\r\n\r\n@media (max-width:300px) {\r\n  .details-header-wrapper {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  .raised, .donors, .average-donation {\r\n    display: none;\r\n  }\r\n}\r\n",
                    "styleUrl": "./candidate-details-header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"details-header-wrapper\">\r\n  <div class=\"image\"><img [src]=\"imageUrl\"/></div>\r\n  <div class=\"info\">\r\n    <div class=\"candidate-name\">{{candidateName}}</div>\r\n    <div class=\"description\">{{description}}</div>\r\n    <div class=\"website\">\r\n      <a [href]=\"website\"><fa-icon [icon]=\"faLink\"></fa-icon>Website</a>\r\n    </div>\r\n  </div>\r\n  <div class=\"raised\">\r\n    <div class=\"label\">Raised</div>\r\n    <div class=\"amount\">{{raisedAmount}}</div>\r\n  </div>\r\n  <div class=\"donors\">\r\n    <div class=\"label\">Donors</div>\r\n    <div class=\"amount\">{{donorsCount}}</div>\r\n  </div>\r\n  <div class=\"average-donation\">\r\n    <div class=\"label\">Average Donation</div>\r\n    <div class=\"amount\">{{averageDonationAmount}}</div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CardListComponent",
            "id": "component-CardListComponent-095ba71a9105810d00489f31ad836652975a56f4e467ca7c002ee7ebc091feef2906ccfc936878e46e280be21ab05456e049b23759b359ba3a04292068e48222",
            "file": "src/app/office/components/card-list/card-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "card-list",
            "styleUrls": [
                "./card-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "candidateIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "district",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpenExpanded",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCandidateCards",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CandidateService } from 'src/app/store/services/candidate.service';\r\n\r\n@Component({\r\n  selector: 'card-list',\r\n  templateUrl: './card-list.component.html',\r\n  styleUrls: ['./card-list.component.scss'],\r\n})\r\nexport class CardListComponent implements OnInit {\r\n  office: string;\r\n  district: string;\r\n  candidateIds: string[];\r\n  year: string;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private candidateService: CandidateService,\r\n  ) { }\r\n\r\n  setCandidateCards(): void {\r\n    this.candidateService.getCandidates(\r\n      { office: this.office, district: this.district, year: this.year }\r\n    ).subscribe(candidates => {\r\n      this.candidateIds = candidates.map(candidate => candidate.id);\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {  \r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.office = this.activatedRoute.snapshot.data.office.office;\r\n      this.district = params.get('district_number')\r\n      this.district = this.district != '0' ? this.district : null;\r\n      this.year = params.get('year')\r\n      this.setCandidateCards();\r\n    })\r\n  }\r\n\r\n  onOpenExpanded(candidateId: string) {\r\n    this.router.navigate([candidateId], { relativeTo: this.activatedRoute });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".candidate-cards{\r\n  padding:10px 20px;\r\n  margin: 0em;\r\n}\r\n",
                    "styleUrl": "./card-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"candidate-cards grid justify-left nogutter\">\r\n  <div *ngFor=\"let id of candidateIds\">\r\n    <candidate-card\r\n      [candidateId]=\"id\"\r\n      (emitCandidateId)=\"onOpenExpanded($event)\"\r\n    ></candidate-card>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ContributionsByGroupComponent",
            "id": "component-ContributionsByGroupComponent-0a8397102542578bd1ff025e926a02cc23d620300ba8706ccb488155a853456ae4d1d63ec1bbe8a68d090e5922212661e0adaa3f0748075d8c1c613dc1d89209",
            "file": "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contributions-by-group",
            "styleUrls": [
                "./contributions-by-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contributions-by-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "contributionGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Donations by Group'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "\"Total contributions from the five largest groups of campaign donors.  Groups are determined by the industry segment of each donor\\'s employer.\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contributions-by-group',\n  templateUrl: './contributions-by-group.component.html',\n  styleUrls: ['./contributions-by-group.component.scss']\n})\nexport class ContributionsByGroupComponent implements OnInit {\n  @Input() contributionGroups;\n\n  title = 'Donations by Group';\n  tooltipText = \"Total contributions from the five largest groups of campaign donors.  Groups are determined by the industry segment of each donor\\'s employer.\";\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./contributions-by-group.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"raised-by-group-wrapper\">\n  <app-expanded-chart-title\n    [titleText]=\"title\"\n    [tooltipText]=\"tooltipText\"\n  ></app-expanded-chart-title>\n\n  <app-contributions-by-group-table\n    [contributionGroups]=\"contributionGroups\"\n  ></app-contributions-by-group-table>\n</div>\n"
        },
        {
            "name": "ContributionsByGroupTableComponent",
            "id": "component-ContributionsByGroupTableComponent-33ea49ad6c320aa8ff06a3be8cbdc47f9b79ae9b1fd552046aebc7f9cfea0f39019b70ff3f142bbf70ff2170c01e2aeb5dd4f4ed9f879d7b6cdae46cce9e1afc",
            "file": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-contributions-by-group-table",
            "styleUrls": [
                "./contributions-by-group-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contributions-by-group-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "contributionGroups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "ContributionGroup[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTableDataSource()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "displayedColumns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "faCircle",
                    "defaultValue": "faCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisplayedColumns",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTableData",
                    "args": [
                        {
                            "name": "groups",
                            "type": "ContributionGroup[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "groups",
                            "type": "ContributionGroup[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport interface ContributionGroup {\r\n  name: string;\r\n  amount: number;\r\n  percent: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-contributions-by-group-table',\r\n  templateUrl: './contributions-by-group-table.component.html',\r\n  styleUrls: ['./contributions-by-group-table.component.scss']\r\n})\r\nexport class ContributionsByGroupTableComponent implements OnChanges {\r\n\r\n  @Input() contributionGroups: ContributionGroup[];\r\n\r\n  dataSource = new MatTableDataSource();\r\n  displayedColumns: any[];\r\n  faCircle = faCircle;\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(): void {\r\n    this.setDisplayedColumns();\r\n    this.setTableData(this.contributionGroups);\r\n  }\r\n\r\n  setDisplayedColumns() {\r\n    this.displayedColumns = [\r\n      'colorCode',\r\n      'industry',\r\n      'amount',\r\n      'percentage',\r\n    ];\r\n  }\r\n\r\n  setTableData(groups: ContributionGroup[]) {\r\n    const colorCodes = [ '#007431', '#00903d', '#00af4a', '#00d359', '#00fc6a' ];\r\n\r\n    const topFiveIndustries = groups.map((group, index) =>\r\n      ({\r\n        colorCode: colorCodes[index],\r\n        industry: group['name'],\r\n        amount: group['amount'],\r\n        percentage: group['percent'],\r\n      })\r\n    );\r\n\r\n    this.dataSource.data = topFiveIndustries;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n.groups {\r\n  .groups-table {\r\n    width: 100%;\r\n    text-align: left;\r\n  }\r\n\r\n  .mat-cell {\r\n    font-size: 13px;\r\n    color: $vvgrey;\r\n    padding: 8px;\r\n  }\r\n\r\n  .mat-cell:nth-last-child(2),\r\n  .mat-cell:last-child,\r\n  .mat-header-cell:nth-last-child(2),\r\n  .mat-header-cell:last-child {\r\n    text-align: right;\r\n  }\r\n\r\n  .mat-cell:last-child {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  fa-icon {\r\n    font-size: 16px;\r\n  }  \r\n}\r\n\r\n\r\n",
                    "styleUrl": "./contributions-by-group-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "<div class=\"groups\">\r\n  <div>\r\n    <table class=\"groups-table\" mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"colorCode\">\r\n        <th mat-header-cell *matHeaderCellDef>Color Code</th>\r\n        <td [ngClass]=\"{'remove-border': i == dataSource.data.length - 1}\" mat-cell *matCellDef=\"let element; let i = index\" [style.color]=\"element.colorCode\">\r\n          <fa-icon [icon]=\"faCircle\"></fa-icon>\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"industry\">\r\n        <th mat-header-cell *matHeaderCellDef>Industry</th>\r\n        <td [ngClass]=\"{'remove-border': i == dataSource.data.length - 1}\" mat-cell *matCellDef=\"let element; let i = index\">{{ element.industry }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"amount\">\r\n        <th mat-header-cell *matHeaderCellDef>Amount</th>\r\n        <td [ngClass]=\"{'remove-border': i == dataSource.data.length - 1}\" mat-cell *matCellDef=\"let element; let i = index\">{{ element.amount | currency:'USD':'symbol':'1.0-0' }}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"percentage\">\r\n        <th mat-header-cell *matHeaderCellDef>Percentage</th>\r\n        <td [ngClass]=\"{'remove-border': i == dataSource.data.length - 1}\" mat-cell *matCellDef=\"let element; let i = index\">{{ element.percentage | number:'1.0-0' }}%</td>\r\n      </ng-container>\r\n\r\n      \r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DetailsComponent",
            "id": "component-DetailsComponent-5f210166ddad742191be35bf07ddcb06a2585f423b6bd5817777a7817e76c781b3eea77b5d6f1d2c7dfe67d7b85e55bf48605b45e2248018d6aa022cad0966d5",
            "file": "src/app/candidate-details/details/details.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details",
            "styleUrls": [
                "./details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.scss']\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  \r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.candidate-details {\r\n  padding: 20px 20px;\r\n  margin: 0em;  \r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n",
                    "styleUrl": "./details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"candidate-details\">\r\n\r\n  <app-candidate-details-header\r\n  ></app-candidate-details-header>\r\n\r\n  <mat-tab-group dynamicHeight mat-align-tabs=\"space-around\" mat-align-tabs=\"start\">\r\n    <mat-tab label=\"Raised v. Spent\">\r\n      <ng-template matTabContent>\r\n        <app-details-tab-raised-v-spent  class=\"details-tab\"\r\n        ></app-details-tab-raised-v-spent>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"By Occupation\">\r\n      <ng-template matTabContent>\r\n        <app-details-tab-raised-by-industry class=\"details-tab\"\r\n        ></app-details-tab-raised-by-industry>\r\n      </ng-template>\r\n    </mat-tab>      \r\n\r\n    <mat-tab label=\"By Location\">\r\n      <ng-template matTabContent>\r\n        <app-details-tab-raised-by-location class=\"details-tab\"\r\n        ></app-details-tab-raised-by-location>\r\n      </ng-template>\r\n    </mat-tab>\r\n\r\n    <mat-tab label=\"Outside Money\">\r\n      <ng-template matTabContent>\r\n        <app-details-tab-outside-money class=\"details-tab\"\r\n        ></app-details-tab-outside-money>\r\n      </ng-template>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n\r\n</div>\r\n"
        },
        {
            "name": "DetailsContainerOutsideMoneyComponent",
            "id": "component-DetailsContainerOutsideMoneyComponent-3643341ce5e8b14697c50f442234ff58e9fc53a7ae0fc9a0bf55af9fd7899d649ff93aff55a565bcc0f827c5737662a8b42c41378fdb24c506d8d6ee125a6ab7",
            "file": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-container-outside-money",
            "styleUrls": [
                "./details-container-outside-money.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-container-outside-money.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faCircle",
                    "defaultValue": "faCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "hoveredCommittee",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "oppositionColor",
                    "defaultValue": "'#6964AD'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "oppositionCommittees",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "oppositionExpenditures",
                    "defaultValue": "{\r\n    title: 'Expenditures in Opposition',\r\n    categories: [],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "supportColor",
                    "defaultValue": "'#3392FF'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "supportCommittees",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "supportExpenditures",
                    "defaultValue": "{\r\n    title: 'Expenditures in Support',\r\n    categories: [],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "committeeHoveredOver",
                    "args": [
                        {
                            "name": "committee",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "committee",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\n\r\n@Component({\r\n  selector: 'app-details-container-outside-money',\r\n  templateUrl: './details-container-outside-money.component.html',\r\n  styleUrls: ['./details-container-outside-money.component.scss']\r\n})\r\nexport class DetailsContainerOutsideMoneyComponent implements OnInit {\r\n  hoveredCommittee: string = null;\r\n  oppositionCommittees;\r\n  supportCommittees;\r\n\r\n  oppositionColor = '#6964AD';\r\n  supportColor = '#3392FF';\r\n\r\n  oppositionExpenditures = {\r\n    title: 'Expenditures in Opposition',\r\n    categories: [],\r\n  };\r\n\r\n  supportExpenditures = {\r\n    title: 'Expenditures in Support',\r\n    categories: [],\r\n  };\r\n  \r\n  faCircle = faCircle;\r\n\r\n  constructor(\r\n    private candidateDetailsService: CandidateDetailsService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  \r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId');\r\n\r\n      this.candidateDetailsService.getOutsideMoney(candidateId)\r\n        .subscribe( response => {\r\n\r\n          this.supportCommittees = response.supportGroups.map((group, i) => ({\r\n            id: 'S' + i.toString(),\r\n            name: group.committee ? group.committee : 'null',\r\n            value: parseInt(group.sum),\r\n            percent: parseFloat(group.average),\r\n            color: this.supportColor,\r\n          }))\r\n\r\n          this.oppositionCommittees = response.oppositionGroups.map((group, i) => ({\r\n            id: 'O' + i.toString(),\r\n            name: group.committee ? group.committee : 'null',\r\n            value: parseInt(group.sum),\r\n            percent: parseFloat(group.average),\r\n            color: this.oppositionColor,\r\n          }))\r\n\r\n        })\r\n    });\r\n  }\r\n\r\n  committeeHoveredOver(committee){\r\n    this.hoveredCommittee = committee;\r\n  }\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.outside-money-container {\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.committee-tables {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.opposition-panel, .support-panel {\r\n  flex: 1 1 50%;\r\n  padding-left: 5%;\r\n  padding-right: 5%;\r\n\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.heading {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\nfa-icon {\r\n  font-size: 10px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./details-container-outside-money.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"outside-money-container\">\r\n  \r\n  <app-outside-money-stacked-bar\r\n    *ngIf=\"oppositionCommittees && supportCommittees\"\r\n    [opposedCommittees]=\"oppositionCommittees\"\r\n    [supportCommittees]=\"supportCommittees\"\r\n    [committeeHighlighted]=\"hoveredCommittee\"\r\n    (committeeHighlightedChange)=\"committeeHoveredOver($event)\"\r\n  ></app-outside-money-stacked-bar>\r\n  \r\n  <div class=\"committee-tables\">\r\n    <div class=\"opposition-panel\">\r\n      <div class=\"heading\">\r\n        <fa-icon [icon]=\"faCircle\" [icon]=\"faCircle\" [style.color]=\"oppositionColor\" ></fa-icon>\r\n        {{oppositionExpenditures.title}}\r\n      </div>\r\n      <app-top-categories-table class=\"opposition-table\"\r\n        *ngIf=\"oppositionCommittees\"\r\n        [categories]='oppositionCommittees'\r\n        [categoryHighlighted]=\"hoveredCommittee\"\r\n        (categoryHighlightedChange)=\"committeeHoveredOver($event)\"\r\n      ></app-top-categories-table>      \r\n    </div>\r\n\r\n    <div class=\"support-panel\">\r\n      <div class=\"heading\">\r\n        <fa-icon [icon]=\"faCircle\" [style.color]=\"supportColor\" ></fa-icon>\r\n        {{supportExpenditures.title}}\r\n      </div>\r\n      <app-top-categories-table  class=\"support-table\"\r\n        *ngIf=\"supportCommittees\"\r\n        [categories]='supportCommittees'\r\n        [categoryHighlighted]=\"hoveredCommittee\"\r\n        (categoryHighlightedChange)=\"committeeHoveredOver($event)\"\r\n      ></app-top-categories-table>\r\n    </div>\r\n  </div>\r\n  \r\n</div>\r\n"
        },
        {
            "name": "DetailsRaisedByIndustryComponent",
            "id": "component-DetailsRaisedByIndustryComponent-8770615ea91eca3470bc832b61e52c0516f82f9f626b0ede421656367299cd520553b7003194288a6bbb75ae60161dcfc01464b57dfe533080bd756b82588dd2",
            "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-raised-by-industry",
            "styleUrls": [
                "./details-raised-by-industry.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-raised-by-industry.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "raisedByIndustries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RaisedByIndustry[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "sortButtons",
                    "defaultValue": "[{\r\n      text: 'HIGH',\r\n      order: SortOrder.High,\r\n      icon: faSortAmountUp,\r\n    }, {\r\n      text: 'LOW',\r\n      order: SortOrder.Low,\r\n      icon: faSortAmountDownAlt,\r\n    },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "sortOrder",
                    "defaultValue": "SortOrder.High",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SortOrder",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "SortOrderType",
                    "defaultValue": "SortOrder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "doSort",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSort",
                    "args": [
                        {
                            "name": "order",
                            "type": "SortOrder",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "order",
                            "type": "SortOrder",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { faSortAmountUp, faSortAmountDownAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\n\r\nimport { RaisedByIndustry } from '../../vv-charts/raised-by-industry-bar/raised-by-industry-bar.component';\r\n\r\nexport enum SortOrder {\r\n  High =  1,\r\n  Low  = -1,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-details-raised-by-industry',\r\n  templateUrl: './details-raised-by-industry.component.html',\r\n  styleUrls: ['./details-raised-by-industry.component.scss']\r\n})\r\nexport class DetailsRaisedByIndustryComponent implements OnInit {\r\n\r\n  raisedByIndustries: RaisedByIndustry[];\r\n  \r\n  sortOrder: SortOrder = SortOrder.High;\r\n  SortOrderType = SortOrder;\r\n\r\n  sortButtons = [{\r\n      text: 'HIGH',\r\n      order: SortOrder.High,\r\n      icon: faSortAmountUp,\r\n    }, {\r\n      text: 'LOW',\r\n      order: SortOrder.Low,\r\n      icon: faSortAmountDownAlt,\r\n    },\r\n  ];\r\n\r\n  constructor(\r\n    private candidateDetailsService: CandidateDetailsService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId');\r\n\r\n      this.candidateDetailsService.getRaisedByIndustry(candidateId)\r\n        .subscribe( response => {\r\n          this.raisedByIndustries = response.occupations.map(occupation =>\r\n            ({\r\n              name: occupation.name,\r\n              value: parseInt(occupation.amount),\r\n            }));\r\n            this.doSort();\r\n        })\r\n    });\r\n  }\r\n\r\n  doSort() {\r\n    this.raisedByIndustries = this.raisedByIndustries\r\n      .sort((a, b) => (a.value - b.value) * this.sortOrder);\r\n\r\n    this.raisedByIndustries = [...this.raisedByIndustries];\r\n  }\r\n\r\n  onSort(order: SortOrder) {\r\n    this.sortOrder = order;\r\n    this.doSort();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n.details-raised-by-industry-wrapper {\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.raised-by-industry-chart {\r\n  width: 100%;\r\n}\r\n\r\n.raised-by-industry-header-wrapper {\r\n  display: grid;\r\n  grid-template-rows: auto auto auto;\r\n}\r\n\r\n.sort-options {\r\n  grid-row: 2;\r\n  place-self: start;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n\r\n  padding-left: 10px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n\r\n  .label {\r\n    padding-right: 10px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .buttons button {\r\n    font-size: 0.75em;\r\n  }\r\n}\r\n",
                    "styleUrl": "./details-raised-by-industry.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 35,
                "jsdoctags": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"details-raised-by-industry-wrapper\">\r\n\r\n  <div class=\"raised-by-industry-header-wrapper\">\r\n\r\n    <div class=\"sort-options\">\r\n      <label class=\"label\">Sort</label>\r\n      <div class=\"buttons\">\r\n\r\n        <button mat-flat-button \r\n          *ngFor=\"let sortButton of sortButtons\"\r\n          [color]=\"(sortOrder === sortButton.order) ? 'primary' : ''\" \r\n          (click)=\"onSort(sortButton.order)\" \r\n        >\r\n        {{sortButton.text}}\r\n        <fa-icon [icon]=\"sortButton.icon\"></fa-icon>\r\n       </button>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <app-raised-by-industry-bar class=\"raised-by-industry-chart\"\r\n    *ngIf=\"raisedByIndustries\"\r\n    [raisedByIndustries]=\"raisedByIndustries\"\r\n  ></app-raised-by-industry-bar>\r\n\r\n</div>\r\n"
        },
        {
            "name": "DetailsRaisedSpentSummaryComponent",
            "id": "component-DetailsRaisedSpentSummaryComponent-7a6c162f509d2ce51b3db51f4d5f5e2ddb53e8eff895426f755dc415d4adf6f8d6b3eeeabdabe1012f49b12b44b2f47afcd5088302a9291a5735b46ca32c4cdf",
            "file": "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-raised-spent-summary",
            "styleUrls": [
                "./details-raised-spent-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-raised-spent-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "spent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "formatNumber",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnChanges, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\n\r\n@Component({\r\n  selector: 'app-details-raised-spent-summary',\r\n  templateUrl: './details-raised-spent-summary.component.html',\r\n  styleUrls: ['./details-raised-spent-summary.component.scss']\r\n})\r\nexport class DetailsRaisedSpentSummaryComponent implements OnInit {\r\n  raised: number;\r\n  spent: number;\r\n\r\n  constructor(\r\n    private candidateDetailsService: CandidateDetailsService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId');\r\n\r\n      this.candidateDetailsService.getRaisedSpent(candidateId)\r\n        .subscribe( response => {\r\n          this.raised = parseInt(response.summary.totalRaised);\r\n          this.spent = parseInt(response.summary.totalSpent);\r\n        })\r\n    });\r\n  }\r\n\r\n  formatNumber(amount: number): string {\r\n    const newAmount =  amount ? amount : 0;\r\n    return newAmount.toLocaleString('en', { style: 'currency', currency: 'USD', maximumFractionDigits: 0});\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".raised-spent-container {\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.raised-spent {\r\n  min-width: 150px;\r\n  width: 60%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 1.2em;\r\n}\r\n\r\n.raised-row, .spent-row, .balance-row {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.raised-row, .spent-row {\r\n  margin-bottom: 15px;\r\n  margin-top: 15px;  \r\n}\r\n\r\n.raised-row > .amount {\r\n  color: green;\r\n}\r\n\r\n.spent-row > .amount {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n\r\n.balance-row > .amount {\r\n  font-weight: bold;\r\n}\r\n",
                    "styleUrl": "./details-raised-spent-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"raised-spent-container\">\r\n  <div class=\"raised-spent\">\r\n    <div class=\"raised-row\">\r\n      <div class=\"label\">Raised:</div>\r\n      <div class=\"amount\">{{formatNumber(raised)}}</div>\r\n    </div>\r\n    <div class=\"spent-row\">\r\n      <div class=\"label\">Spent:</div>\r\n      <div class=\"amount\">{{formatNumber(spent)}}</div>\r\n    </div>\r\n    <mat-divider ></mat-divider>\r\n    <div class=\"balance-row\">\r\n      <div class=\"label\">\r\n        <p>Current<br>Balance:</p>\r\n      </div>\r\n      <div class=\"amount\">{{formatNumber(raised-spent)}}</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DetailsTabOutsideMoneyComponent",
            "id": "component-DetailsTabOutsideMoneyComponent-9fcef0402476a4d719e8797e1f038abc42d25311dbca625e99b2764ca842f27eb5bc2c46877ebd9021bcb8664683caca8e14e8651e676d424b515f85358c9a1e",
            "file": "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-tab-outside-money",
            "styleUrls": [
                "./details-tab-outside-money.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-tab-outside-money.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "{\r\n    top: 'Independent Expenditures',\r\n    bottom: 'By Outside Money',\r\n    tooltipText: 'Placeholder tooltip text for Amount Raised by Outside Money!',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-details-tab-outside-money',\r\n  templateUrl: './details-tab-outside-money.component.html',\r\n  styleUrls: ['./details-tab-outside-money.component.scss']\r\n})\r\nexport class DetailsTabOutsideMoneyComponent implements OnInit {\r\n  title = {\r\n    top: 'Independent Expenditures',\r\n    bottom: 'By Outside Money',\r\n    tooltipText: 'Placeholder tooltip text for Amount Raised by Outside Money!',\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.tab-outside-money {\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  padding: 15px;\r\n  margin: 10px;\r\n}\r\n",
                    "styleUrl": "./details-tab-outside-money.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"tab-outside-money\">\r\n\r\n  <app-details-tab-title\r\n    [smallTitleText]=\"title.top\"\r\n    [largeTitleText]=\"title.bottom\"\r\n    [tooltipText]=\"title.tooltipText\"\r\n  ></app-details-tab-title>\r\n\r\n  <app-details-container-outside-money\r\n  ></app-details-container-outside-money>\r\n\r\n</div>\r\n"
        },
        {
            "name": "DetailsTabRaisedByIndustryComponent",
            "id": "component-DetailsTabRaisedByIndustryComponent-265e6c4420b366ba38c11aaa9f7af2e1c708d37df41f59dcbbead62ce9703c8438a7d0bdedbcbd5524fcd378fd66ca9d9b253ac937b49b5eb30a3fdbcba7541d",
            "file": "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-tab-raised-by-industry",
            "styleUrls": [
                "./details-tab-raised-by-industry.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-tab-raised-by-industry.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "{\r\n    top: 'Amount Raised',\r\n    bottom: 'By Occupation',\r\n    tooltipText: 'Placeholder tooltip text for Amount Raised by Occupation!',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-details-tab-raised-by-industry',\r\n  templateUrl: './details-tab-raised-by-industry.component.html',\r\n  styleUrls: ['./details-tab-raised-by-industry.component.scss']\r\n})\r\nexport class DetailsTabRaisedByIndustryComponent implements OnInit {\r\n\r\n  title = {\r\n    top: 'Amount Raised',\r\n    bottom: 'By Occupation',\r\n    tooltipText: 'Placeholder tooltip text for Amount Raised by Occupation!',\r\n  };\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.tab-raised-by-industry {\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  padding: 15px;\r\n  margin: 10px;\r\n}\r\n",
                    "styleUrl": "./details-tab-raised-by-industry.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"tab-raised-by-industry\">\r\n  <app-details-tab-title\r\n    [smallTitleText]=\"title.top\"\r\n    [largeTitleText]=\"title.bottom\"\r\n    [tooltipText]=\"title.tooltipText\"\r\n  ></app-details-tab-title>\r\n\r\n  <app-details-raised-by-industry\r\n  ></app-details-raised-by-industry>\r\n</div>\r\n"
        },
        {
            "name": "DetailsTabRaisedByLocationComponent",
            "id": "component-DetailsTabRaisedByLocationComponent-9365329480fd9b859b8de28e2edd2f98474785801f27609d0718d0cfe8ff4d974fa92168a865c4a1ef8c5e2fb7ce33451af29b61fda9a4ca49f7879eb09fa163",
            "file": "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-tab-raised-by-location",
            "styleUrls": [
                "./details-tab-raised-by-location.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-tab-raised-by-location.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "raisedByLocations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "defaultValue": "{\r\n    top: 'Amount Raised',\r\n    bottom: 'By Location',\r\n    tooltipText: 'Placeholder tooltip text for Amount Raised by Location!',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "getAmount",
                    "args": [
                        {
                            "name": "location",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "locations",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "location",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "locations",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\n\r\n@Component({\r\n  selector: 'app-details-tab-raised-by-location',\r\n  templateUrl: './details-tab-raised-by-location.component.html',\r\n  styleUrls: ['./details-tab-raised-by-location.component.scss']\r\n})\r\nexport class DetailsTabRaisedByLocationComponent implements OnInit {\r\n\r\n  raisedByLocations;\r\n\r\n  title = {\r\n    top: 'Amount Raised',\r\n    bottom: 'By Location',\r\n    tooltipText: 'Placeholder tooltip text for Amount Raised by Location!',\r\n  };\r\n\r\n  constructor(\r\n    private candidateDetailsService: CandidateDetailsService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId');\r\n\r\n      this.candidateDetailsService.getRaisedByLocation(candidateId)\r\n        .subscribe( response => {\r\n          this.raisedByLocations = {\r\n            inDistrict: this.getAmount('In District', response.locations),\r\n            inCity: this.getAmount('In City', response.locations),\r\n            inCounty: this.getAmount('In County', response.locations),\r\n            inState: this.getAmount('In State', response.locations),\r\n            outState: this.getAmount('Out of State', response.locations),\r\n          }\r\n        })\r\n    });\r\n  }\r\n\r\n  getAmount(location: string, locations: any[]) {\r\n    const foundLocation = locations.find(locationItem => locationItem.name === location);\r\n    return foundLocation \r\n      ? parseInt(foundLocation.amount)\r\n      : 0;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.tab-raised-by-location {\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  padding: 15px;\r\n  margin: 10px;\r\n}\r\n",
                    "styleUrl": "./details-tab-raised-by-location.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"tab-raised-by-location\">\r\n  <app-details-tab-title\r\n    [smallTitleText]=\"title.top\"\r\n    [largeTitleText]=\"title.bottom\"\r\n    [tooltipText]=\"title.tooltipText\"\r\n  ></app-details-tab-title>\r\n\r\n  <app-raised-by-location-bar\r\n    *ngIf=\"raisedByLocations\"\r\n    [raisedByLocations]=\"raisedByLocations\"\r\n  ></app-raised-by-location-bar>  \r\n</div>\r\n"
        },
        {
            "name": "DetailsTabRaisedVSpentComponent",
            "id": "component-DetailsTabRaisedVSpentComponent-09b5932030b402bb1522a42d97b42874f0c4f6680ae2891bb6701d83ab3a4546f6a6e4cb8d616b39a2e97b55f3bb8141bb0bea5fbac65491afa87a1fa2789951",
            "file": "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-tab-raised-v-spent",
            "styleUrls": [
                "./details-tab-raised-v-spent.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-tab-raised-v-spent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-details-tab-raised-v-spent',\r\n  templateUrl: './details-tab-raised-v-spent.component.html',\r\n  styleUrls: ['./details-tab-raised-v-spent.component.scss']\r\n})\r\nexport class DetailsTabRaisedVSpentComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.raised-and-spent-grid {\r\n  display: grid;\r\n  grid-template-columns: 50% 50%;\r\n  grid-template-rows: 1 1 1;\r\n\r\n  row-gap: 15px;\r\n  column-gap: 15px;\r\n  background-color: #ECEFF2;\r\n}\r\n\r\n.raised-panel, .spent-panel, .summary-panel {\r\n  background-color: white;  \r\n  padding: 15px;\r\n  margin: 10px;\r\n}\r\n\r\n.raised-panel {\r\n  grid-column: 1 / 3;\r\n  grid-row: 1 / 2;\r\n}\r\n\r\n.spent-panel {\r\n  grid-column: 1 / 3;\r\n  grid-row: 2 / 3;\r\n}\r\n\r\n.summary-panel {\r\n  grid-column: 1 / 3;\r\n  grid-row: 3 / 4;\r\n}\r\n\r\n\r\n@media (min-width: 1500px) {\r\n  .raised-and-spent-grid{\r\n    .raised-panel {\r\n      grid-column: 1 / 2;\r\n      grid-row: 1 / 2;\r\n    }\r\n    \r\n    .spent-panel {\r\n      grid-column: 1 / 3;\r\n      grid-row: 2 / 3;\r\n    }\r\n    \r\n    .summary-panel {\r\n      grid-column: 2 / 3;\r\n      grid-row: 1 / 2;\r\n    }\r\n  }\r\n}\r\n\r\n@media (min-width: 1600px) {\r\n  .raised-and-spent-grid{\r\n    .raised-panel {\r\n      grid-column: 1 / 2;\r\n      grid-row: 1 / 3;\r\n    }\r\n    \r\n    .spent-panel {\r\n      grid-column: 2 / 3;\r\n      grid-row: 1 / 3;\r\n    }\r\n    \r\n    .summary-panel {\r\n      grid-column: 1 / 3;\r\n      grid-row: 3 / 4;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./details-tab-raised-v-spent.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"raised-and-spent-container raised-and-spent-grid\">\r\n  <div class=\"raised-panel\">\r\n    <app-details-total-raised\r\n    ></app-details-total-raised>\r\n  </div>\r\n  <div class=\"spent-panel\">\r\n    <app-details-total-spent\r\n    ></app-details-total-spent>\r\n  </div>\r\n  <div class=\"summary-panel\">\r\n    <app-details-raised-spent-summary\r\n    ></app-details-raised-spent-summary>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DetailsTabTitleComponent",
            "id": "component-DetailsTabTitleComponent-eaae1672b3c592d481dc18bae049a5bc254ba62864f3348a88f6490d250edffb9b870be51400465b36c4348e9355727e842ec2584526593a654d8e9434b7a865",
            "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-tab-title",
            "styleUrls": [
                "./details-tab-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-tab-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "largeTitleText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "smallTitleText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "'Placeholder tooltip text.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faQuestionCircle",
                    "defaultValue": "faQuestionCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-details-tab-title',\n  templateUrl: './details-tab-title.component.html',\n  styleUrls: ['./details-tab-title.component.scss']\n})\nexport class DetailsTabTitleComponent implements OnInit {\n  @Input() smallTitleText: string;\n  @Input() largeTitleText: string;\n  @Input() tooltipText?: string = 'Placeholder tooltip text.';\n\n  faQuestionCircle = faQuestionCircle;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n.title {\r\n  color: #16375D;\r\n  text-align: center;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  font-size: 1em;\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .top-title{\r\n    font-size: 1.25em;\r\n  }\r\n  .bottom-title{\r\n    font-size: 2.0em;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .tooltip-icon {\r\n    color: $vvgrey;\r\n    cursor: pointer;\r\n    padding-left: .5em;\r\n    font-size: 10px;\r\n  } \r\n\r\n}\r\n\r\n::ng-deep .tooltip-text {\r\n  font-size: 16px;\r\n}\r\n",
                    "styleUrl": "./details-tab-title.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<div class=\"title\" >\n\n  <p>\n    <span class=\"top-title\">{{smallTitleText}}</span>\n  </p>\n\n  <p>\n    <span class=\"bottom-title\">{{largeTitleText}}</span>\n    <span \n      matTooltipClass=\"tooltip-text\"\n      aria-hidden=\"true\"\n      [matTooltip]=\"tooltipText\" \n    >    \n      <sub class=\"tooltip-icon\">\n        <i class=\"helper-tip\" ><fa-icon [icon]=\"faQuestionCircle\"></fa-icon></i>\n      </sub>\n    </span> \n  </p>\n  \n</div>\n"
        },
        {
            "name": "DetailsTotalRaisedComponent",
            "id": "component-DetailsTotalRaisedComponent-1b0dbdf0ee18bed3e6f066de91c354a9e66379521ba07dfc11825e58b80259e6bffa7b49c998b1202013828dd45bdad3c64a9583da756465a1b0fb8297d46965",
            "file": "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-total-raised",
            "styleUrls": [
                "./details-total-raised.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-total-raised.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "colors",
                    "defaultValue": "['#00e25f', '#00b24b', '#007e35']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "faQuestionCircle",
                    "defaultValue": "faQuestionCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "raisedCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "'Placeholder tooltip text.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "totalRaised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "totalRaisedFormatted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\n\r\n@Component({\r\n  selector: 'app-details-total-raised',\r\n  templateUrl: './details-total-raised.component.html',\r\n  styleUrls: ['./details-total-raised.component.scss']\r\n})\r\nexport class DetailsTotalRaisedComponent implements OnInit {\r\n  tooltipText = 'Placeholder tooltip text.';\r\n  colors = ['#00e25f', '#00b24b', '#007e35'];\r\n\r\n  totalRaised: number;\r\n  totalRaisedFormatted: string;\r\n  raisedCategories: any[];\r\n\r\n  faQuestionCircle = faQuestionCircle;\r\n  \r\n  constructor(\r\n    private candidateDetailsService: CandidateDetailsService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId');\r\n\r\n      this.candidateDetailsService.getRaisedSpent(candidateId)\r\n        .subscribe( response => {\r\n          this.totalRaised = parseInt(response.summary.totalRaised);\r\n          this.totalRaisedFormatted = this.totalRaised\r\n            .toLocaleString('en', { style: 'currency', currency: 'USD', maximumFractionDigits: 0});\r\n\r\n        this.raisedCategories = response.raisedGroups.map((group, i) => ({\r\n            name: group.name,\r\n            value: parseInt(group.amount),\r\n            color: i < this.colors.length ? this.colors[i] : 'red',\r\n          }))\r\n        })\r\n    });\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.total-raised-chart-panel {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n\r\n  .total-raised-header {\r\n    flex: 0 0 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-size: 1.5em;\r\n    .total {\r\n      color: green;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n.total-raised-chart {\r\n  flex: 1 1 auto;\r\n}\r\n\r\n.total-raised-footer {\r\n  flex: 0 0 auto;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.tooltip-text {\r\n  color: #0077ff;\r\n  font-size: 1.1em;\r\n  padding: 0px 5px 5px 0px;\r\n}\r\n",
                    "styleUrl": "./details-total-raised.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"total-raised-chart-panel\">\r\n\r\n  <div class=\"total-raised-header\">\r\n    <div class=\"title\">Total Raised</div>\r\n    <div class=\"total\">{{totalRaisedFormatted}}</div>\r\n  </div>\r\n\r\n  <app-total-raised-bar class=\"total-raised-chart\"\r\n    *ngIf=\"raisedCategories\"\r\n    [raisedCategories]=\"raisedCategories\"\r\n  ></app-total-raised-bar>\r\n\r\n  <div class=\"total-raised-footer\">\r\n    <div>\r\n      <i\r\n        class=\"tooltip-text\"\r\n        aria-hidden=\"true\"\r\n        [matTooltip]=\"tooltipText\" \r\n      ><fa-icon [icon]=\"faQuestionCircle\"></fa-icon>\r\n      </i>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "DetailsTotalSpentComponent",
            "id": "component-DetailsTotalSpentComponent-7a407debe0bb1f79757636e8818193864eb1e495cce7b43389b5d35942f042b44aa1be1226130534b2f87de39ccf8fc85356557419c7d500e490c7bcdb7a2ad4",
            "file": "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-details-total-spent",
            "styleUrls": [
                "./details-total-spent.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./details-total-spent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cashInHand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "categoriesCombined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "colors",
                    "defaultValue": "['#800000', '#b30000', '#cc0000', '#ff0000', '#ff9999']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "faHandHoldingUsd",
                    "defaultValue": "faHandHoldingUsd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "faMoneyBillWave",
                    "defaultValue": "faMoneyBillWave",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "faQuestionCircle",
                    "defaultValue": "faQuestionCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "hoveredCategory",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "loansAndDebts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "spendingMap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "title",
                    "defaultValue": "\"Total Spent\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "'Placeholder tooltip text.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "totalSpent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "totalSpentFormatted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "categoryHoveredOver",
                    "args": [
                        {
                            "name": "category",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSpendingCodeDescription",
                    "args": [
                        {
                            "name": "spendingCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "spendingCode",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { faMoneyBillWave, faHandHoldingUsd, faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CandidateDetailsService } from 'src/app/store/services/candidate.details.service';\r\nimport { spendingCodes } from './spending-codes';\r\n\r\n@Component({\r\n  selector: 'app-details-total-spent',\r\n  templateUrl: './details-total-spent.component.html',\r\n  styleUrls: ['./details-total-spent.component.scss']\r\n})\r\nexport class DetailsTotalSpentComponent implements OnInit {\r\n  title = \"Total Spent\";\r\n  tooltipText = 'Placeholder tooltip text.';\r\n  colors = ['#800000', '#b30000', '#cc0000', '#ff0000', '#ff9999'];\r\n\r\n  cashInHand: number;\r\n  loansAndDebts: number;\r\n  totalSpent: number;\r\n  totalSpentFormatted: string;\r\n\r\n  categoriesCombined: any[];\r\n  hoveredCategory: string = null;\r\n\r\n  faMoneyBillWave = faMoneyBillWave;\r\n  faHandHoldingUsd = faHandHoldingUsd;\r\n  faQuestionCircle = faQuestionCircle;\r\n\r\n  spendingMap;\r\n\r\n  constructor(\r\n    private candidateDetailsService: CandidateDetailsService,\r\n    private route: ActivatedRoute,\r\n  ) { }\r\n\r\n  getSpendingCodeDescription(spendingCode: string): string {\r\n    return `${spendingCode}: ` + this.spendingMap.get(spendingCode);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.spendingMap = new Map(spendingCodes);\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId');\r\n\r\n      this.candidateDetailsService.getRaisedSpent(candidateId)\r\n        .subscribe( response => {\r\n          this.cashInHand = parseInt(response.cashOnHand);\r\n          this.loansAndDebts = parseInt(response.loansAndDebts);\r\n          this.totalSpent = parseInt(response.summary.totalSpent);\r\n          this.totalSpentFormatted = this.totalSpent\r\n            .toLocaleString('en', { style: 'currency', currency: 'USD', maximumFractionDigits: 0});\r\n\r\n          this.categoriesCombined = response.spentGroup.map((group, i) => ({\r\n            id: i.toString(),\r\n            code: group.spending_code,\r\n            name: group.spending_code ? this.getSpendingCodeDescription(group.spending_code) : 'not categorized',\r\n            value: parseInt(group.sum),\r\n            percent: parseFloat(group.average),\r\n            color: i < this.colors.length ? this.colors[i] : 'red',\r\n          }))\r\n\r\n        })\r\n    });\r\n  }\r\n\r\n  categoryHoveredOver(category){\r\n    this.hoveredCategory = category;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.details-total-spending-wrapper{\r\n  display: flex;\r\n\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.total-spent-chart-panel, .total-spent-table-panel {\r\n    flex: 1 1 50%;\r\n}\r\n\r\n.total-spent-chart-panel {\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .total-spent-header{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-size: 1.5em;\r\n    .total-spent {\r\n      color: red;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n.total-spent-table-panel{\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.total-spent-footer {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;  \r\n}\r\n\r\n.total-spent-cash-n-debts{\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  .amount{\r\n    font-size: .8em;\r\n\r\n  }\r\n  .label{\r\n    font-size: .6em;\r\n  }\r\n\r\n  .cash-in-hand {\r\n    margin-right: 1em;\r\n    fa-icon {\r\n      color: green;\r\n    }\r\n  }\r\n\r\n  .loans-and-debts {\r\n    fa-icon {\r\n      color: darkorange;\r\n    }\r\n  }\r\n\r\n  fa-icon {\r\n    margin-right: .4em;\r\n  }\r\n\r\n}\r\n\r\n.tooltip-text {\r\n  color: #0077ff;\r\n  font-size: 1.1em;\r\n  padding: 0px 5px 5px 0px;\r\n}\r\n\r\n@media (min-width: 1600px) {\r\n  .details-total-spending-wrapper{ \r\n    flex-direction: column;\r\n    flex-wrap: nowrap;\r\n  }\r\n}\r\n",
                    "styleUrl": "./details-total-spent.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "candidateDetailsService",
                        "type": "CandidateDetailsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"details-total-spending-wrapper\">\r\n\r\n  <div class=\"total-spent-chart-panel\">\r\n\r\n    <div class=\"total-spent-header\">\r\n      <div class=\"title\">Total Spent</div>\r\n      <div class=\"total-spent\">{{totalSpentFormatted}}</div>\r\n    </div>\r\n\r\n    <app-total-spent-donut \r\n      *ngIf=\"categoriesCombined\"\r\n      [spendingCategories]=\"categoriesCombined\"\r\n      [categoryHighlighted]=\"hoveredCategory\"\r\n      (categoryHighlightedChange)=\"categoryHoveredOver($event)\"\r\n    ></app-total-spent-donut>\r\n    </div>\r\n\r\n  <div class=\"total-spent-table-panel\">\r\n    <app-top-categories-table \r\n    *ngIf=\"categoriesCombined\"\r\n    [categories]='categoriesCombined'\r\n    [categoryHighlighted]=\"hoveredCategory\"\r\n    (categoryHighlightedChange)=\"categoryHoveredOver($event)\"\r\n    ></app-top-categories-table>\r\n\r\n    <div class=\"total-spent-footer\">\r\n\r\n      <div class=\"total-spent-cash-n-debts\">\r\n        <!-- <div class=\"cash-in-hand\">\r\n          <div class=\"amount\"><fa-icon [icon]=\"faMoneyBillWave\"></fa-icon>{{cashInHand}}</div>\r\n          <div class=\"label\">(Cash on Hand)</div>\r\n        </div>\r\n        <div class=\"loans-and-debts\">\r\n          <div class=\"amount\"><fa-icon [icon]=\"faHandHoldingUsd\"></fa-icon>{{loansAndDebts}}</div>\r\n          <div class=\"label\">(Loans & Debts)</div>\r\n        </div> -->\r\n      </div>\r\n\r\n       <div>\r\n        <i\r\n          class=\"tooltip-text\"\r\n          aria-hidden=\"true\"\r\n          [matTooltip]=\"tooltipText\" \r\n        ><fa-icon [icon]=\"faQuestionCircle\"></fa-icon>\r\n        </i>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "ElectionYearSelectorComponent",
            "id": "component-ElectionYearSelectorComponent-d4a1e0bb2233192a46580f9525315ed3fd52467f12a9bc20e053ab043f7d13aa1a44efa1baee5bb6bc3697824989d9ae7a89cb8a290e73fb9bfcea12125bc9b4",
            "file": "src/app/election-year-selector/election-year-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "election-year-selector",
            "styleUrls": [
                "./election-year-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./election-year-selector.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selectedYear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Year",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "years",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Year[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OfficeSummaryService } from 'src/app/store/services/office-summary.service';\r\nimport { YearService } from 'src/app/store/services/year.service';\r\n\r\ninterface Year {\r\n  name: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'election-year-selector',\r\n  templateUrl: './election-year-selector.component.html',\r\n  styleUrls: ['./election-year-selector.component.scss']\r\n})\r\nexport class ElectionYearSelectorComponent implements OnInit {\r\n  years: Year[];\r\n  selectedYear: Year;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private yearService: YearService,\r\n    private officeSummaryService: OfficeSummaryService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.officeSummaryService.getSummaries()\r\n      .subscribe(offices => {\r\n        const years = offices.map(office => office.year);\r\n        const uniqueYears = [...new Set(years)].sort().reverse();\r\n\r\n        this.years = uniqueYears.map(year => ({\r\n          name: year,\r\n        }))\r\n      });\r\n\r\n    this.yearService.electionYearChanged$.subscribe(year => {\r\n      this.selectedYear = { name: year };\r\n    })\r\n  }\r\n\r\n  change(event) {\r\n    const year = event.value.name;\r\n    this.router.navigate([`year/${year}`]);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host ::ng-deep .p-dropdown {\r\n  width: 100%;\r\n  padding-top: 7px;\r\n  padding-bottom: 7px;\r\n}\r\n",
                    "styleUrl": "./election-year-selector.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "yearService",
                        "type": "YearService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "officeSummaryService",
                        "type": "OfficeSummaryService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "yearService",
                        "type": "YearService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "officeSummaryService",
                        "type": "OfficeSummaryService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p-dropdown inputId=\"dropdown\" [autoDisplayFirst]=\"false\" [options]=\"years\" [(ngModel)]=\"selectedYear\" placeholder=\"Election Year\" (onChange)=\"change($event)\" optionLabel=\"name\"></p-dropdown>\r\n"
        },
        {
            "name": "ExpandedAverageDonationComponent",
            "id": "component-ExpandedAverageDonationComponent-89146b9fc80fb8fc497f9437dd6ba1ff5bfe7047ee2333e21ba56057aafedf83519e2b3ff3039201460466391ccf6c68191ba1e47f24919b104344500fcce386",
            "file": "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expanded-average-donation",
            "styleUrls": [
                "./expanded-average-donation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expanded-average-donation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "amount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Average Donation'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expanded-average-donation',\n  templateUrl: './expanded-average-donation.component.html',\n  styleUrls: ['./expanded-average-donation.component.scss']\n})\nexport class ExpandedAverageDonationComponent implements OnInit {\n  @Input() amount: number = 0;\n  title = 'Average Donation';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n.average-donation{\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 5px 5px;\r\n\r\n  .title {\r\n    font-weight: normal;\r\n    font-size: 12px;\r\n    margin-top: 5px;\r\n    margin-bottom: 0px;\r\n    color: $vvgrey;\r\n  }\r\n\r\n  .amount {\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n    margin-top: 5px;\r\n    color: $vvdarkgrey;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./expanded-average-donation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<div class=\"average-donation\">\n  <div class=\"title\">{{title}}</div>\n  <div class=\"amount\">{{ amount | currency:'USD':'symbol':'1.0-0' }}</div>\n</div>\n"
        },
        {
            "name": "ExpandedChartTitleComponent",
            "id": "component-ExpandedChartTitleComponent-093a40de3f9f73b10f8fbf969df115dbac424c8ba17c4b40b646ffbc17baafc2a6515f674973439997e03c028dcfa5f350d7766357af746ff561bb606dd6fadb",
            "file": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expanded-chart-title",
            "styleUrls": [
                "./expanded-chart-title.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expanded-chart-title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "textColor",
                    "defaultValue": "'#244366'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "titleText",
                    "defaultValue": "'Title Text Here'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipColor",
                    "defaultValue": "'#707070'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "'Placeholder text.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faQuestionCircle",
                    "defaultValue": "faQuestionCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, } from '@angular/core';\n\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\n\n\n@Component({\n  selector: 'app-expanded-chart-title',\n  templateUrl: './expanded-chart-title.component.html',\n  styleUrls: ['./expanded-chart-title.component.scss']\n})\nexport class ExpandedChartTitleComponent {\n  @Input() titleText: string = 'Title Text Here';\n  @Input() textColor: string = '#244366';\n  @Input() tooltipText: string = 'Placeholder text.';\n  @Input() tooltipColor: string = '#707070';\n  \n  faQuestionCircle = faQuestionCircle;\n\n  constructor() { }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".title {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  \r\n  .text {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .tooltip-icon {\r\n    cursor: pointer;\r\n    padding-left: .5em;\r\n    font-size: 10px;\r\n  } \r\n}\r\n\r\n::ng-deep .tooltip-text {\r\n  font-size: 16px;\r\n}\r\n",
                    "styleUrl": "./expanded-chart-title.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "templateData": "\n<div class=\"title\" >\n\n  <p>\n    <span class=\"text\" [style.color]=\"textColor\">{{titleText}}</span>\n    <span \n      matTooltipClass=\"tooltip-text\"\n      aria-hidden=\"true\"\n      [matTooltip]=\"tooltipText\" \n    >    \n      <sup [style.color]=\"tooltipColor\" class=\"tooltip-icon\">\n        <i><fa-icon [icon]=\"faQuestionCircle\"></fa-icon></i>\n      </sup>\n   </span> \n  </p>\n  \n</div>\n"
        },
        {
            "name": "ExpandedOutsideMoneyComponent",
            "id": "component-ExpandedOutsideMoneyComponent-2a1e0aaf07f1a08cf6897bce134ecd978f08744f24c83b815fbd130729e42bad00ce0b8444ecca53f4f79f06c05fe8ffef0d42bec047c3bbc9bf142e6701a972",
            "file": "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expanded-outside-money",
            "styleUrls": [
                "./expanded-outside-money.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expanded-outside-money.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "oppose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "support",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "totalExpenditures",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "'#2c2c2c'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "faQuestionCircle",
                    "defaultValue": "faQuestionCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "formattedCurrency",
                    "defaultValue": "getCompactFormattedCurrency",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "textColor",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "title",
                    "defaultValue": "'Outside Money'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "'Amount of money raised and spent by independent expenditure committees spent in support or opposition of a candidate but not contributed directly to their campaign.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, } from '@angular/core';\r\n\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\r\n\r\n@Component({\r\n  selector: 'app-expanded-outside-money',\r\n  templateUrl: './expanded-outside-money.component.html',\r\n  styleUrls: ['./expanded-outside-money.component.scss']\r\n})\r\nexport class ExpandedOutsideMoneyComponent implements OnInit {\r\n  @Input() support: number;\r\n  @Input() oppose: number;\r\n  @Input() totalExpenditures: number;\r\n\r\n  faQuestionCircle = faQuestionCircle;\r\n  title = 'Outside Money';\r\n  tooltipText = 'Amount of money raised and spent by independent expenditure committees spent in support or opposition of a candidate but not contributed directly to their campaign.';\r\n  textColor = 'white';\r\n  backgroundColor = '#2c2c2c';\r\n\r\n  formattedCurrency = getCompactFormattedCurrency;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outside-money-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid;\r\n}\r\n\r\n.content {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-flow: wrap;\r\n  justify-content: center;\r\n  padding-bottom: 5px;\r\n}\r\n\r\n.outside-money-chart {\r\n  flex: 1 1 75%;\r\n  min-width: 40%;\r\n  max-width: 100%;\r\n\r\n  box-shadow: 1px 0 grey;\r\n  z-index: 2;\r\n}\r\n\r\n.expenditures-panel {\r\n  flex: 1 1 25%;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .expenditures {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    padding: .5em 1em 1em 1em;\r\n\r\n    .label {\r\n      font-size: 12px;\r\n      padding-bottom: .6em;\r\n    }\r\n    .amount {\r\n      font-size: 18px;\r\n      font-weight: bold;\r\n    }\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./expanded-outside-money.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"outside-money-container\"\r\n  [style.backgroundColor]=\"backgroundColor\"\r\n  [style.borderColor]=\"backgroundColor\"\r\n>\r\n\r\n  <app-expanded-chart-title\r\n    [titleText]=\"title\"\r\n    [textColor]=\"textColor\"\r\n    [tooltipText]=\"tooltipText\"\r\n    [tooltipColor]=\"textColor\"\r\n  ></app-expanded-chart-title>\r\n\r\n  <div class=\"content\">\r\n    <div class=\"outside-money-chart\">\r\n      <app-outside-spending-bar \r\n        [support]=\"support\"\r\n        [oppose]=\"oppose\"\r\n        [backgroundColor]=\"backgroundColor\"\r\n        [textColor]=\"textColor\"       \r\n      ></app-outside-spending-bar>\r\n    </div>\r\n\r\n    <div class=\"expenditures-panel\" [style.color]=\"textColor\">\r\n      <div class=\"expenditures\">\r\n        <div class=\"label\">Total Expenditures</div>\r\n        <div class=\"amount\">{{formattedCurrency(totalExpenditures, 1)}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "ExpandedQuickViewComponent",
            "id": "component-ExpandedQuickViewComponent-a62be208e8a78290f8bcd0d2d1e6be7cd91676cd40f7acd210772a7dda1f31a47fc864385fb07e8b32cdca6b61c3cd6e49615f61ed23b3de3b865d4c8aa929b1",
            "file": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expanded-quick-view",
            "styleUrls": [
                "./expanded-quick-view.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expanded-quick-view.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "candidateId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isExpanded",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "donationsByGroupData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DonationsByGroup",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "faTimesCircle",
                    "defaultValue": "faTimesCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "outsideMoneyData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OutsideMoney",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "raisedInOutData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RaisedInOut",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "raisedVsSpentData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RaisedVsSpent",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQuickView",
                    "args": [
                        {
                            "name": "quickView",
                            "type": "CandidateQuickView",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "quickView",
                            "type": "CandidateQuickView",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showFullDetailsClicked",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport type { RaisedVsSpent } from '../../vv-charts/interfaces/raisedVsSpent';\r\nimport type { DonationsByGroup } from '../../vv-charts/interfaces/donationsByGroup';\r\nimport type { RaisedInOut } from '../../vv-charts/interfaces/raisedInOut';\r\nimport type { OutsideMoney } from '../../vv-charts/interfaces/outsideMoney';\r\n\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CandidateQuickViewService } from 'src/app/store/services/candidate.quickview.service';\r\nimport { CandidateQuickView } from 'src/app/store/interfaces/candidate.quickview';\r\n\r\n\r\n@Component({\r\n  selector: 'app-expanded-quick-view',\r\n  templateUrl: './expanded-quick-view.component.html',\r\n  styleUrls: ['./expanded-quick-view.component.scss']\r\n})\r\nexport class ExpandedQuickViewComponent implements OnChanges {\r\n  @Input() candidateId: string;\r\n  @Output() isExpanded = new EventEmitter<boolean>();\r\n\r\n  public raisedVsSpentData: RaisedVsSpent;\r\n  public donationsByGroupData: DonationsByGroup;\r\n  public raisedInOutData: RaisedInOut;\r\n  public outsideMoneyData: OutsideMoney;\r\n\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private candidateQuickViewService: CandidateQuickViewService,\r\n  ) { }\r\n  \r\n  private setQuickView(quickView: CandidateQuickView): void {\r\n    this.raisedVsSpentData = {\r\n      id: quickView.raisedVsSpent.id,\r\n      raised: parseInt(quickView.raisedVsSpent.raised),\r\n      spent: parseInt(quickView.raisedVsSpent.spent),\r\n      averageDonation: parseInt(quickView.raisedVsSpent.averageDonation),\r\n    };\r\n\r\n    this.donationsByGroupData = {\r\n      id: quickView.donationsByGroupData.id,\r\n      groups: quickView.donationsByGroupData.groups.map(group => ({\r\n        ...group,\r\n        amount: parseInt(group.amount),\r\n        percent: parseInt(group.percent),\r\n      }))\r\n    };\r\n    \r\n    this.raisedInOutData = {\r\n      ...quickView.raisedInOut,\r\n      inside: parseInt(quickView.raisedInOut.inside),\r\n      outside: parseInt(quickView.raisedInOut.outside),\r\n    };\r\n\r\n    this.outsideMoneyData = {\r\n      ...quickView.outsideMoney,\r\n      support: parseInt(quickView.outsideMoney.support),\r\n      oppose: parseInt(quickView.outsideMoney.oppose),\r\n      scale: quickView.outsideMoney.scale ? parseInt(quickView.outsideMoney.scale) : 1,\r\n    };\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void  {\r\n\r\n    if (changes['candidateId'] && changes['candidateId'].currentValue) {\r\n      let candidateId = changes['candidateId'].currentValue;\r\n\r\n      this.candidateQuickViewService.getCandidateQuickView(candidateId)\r\n        .subscribe( quickView => {\r\n          this.setQuickView(quickView);\r\n        });\r\n    }\r\n  }\r\n\r\n  showFullDetailsClicked( candidateId ) {\r\n    this.router.navigate([`/under-construction`]);\r\n  }\r\n\r\n  close() {\r\n    this.isExpanded.emit(false);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../styles/variables\";\r\n@import \"../../styles/elements\";\r\n\r\n:host {\r\n  padding: 0rem;\r\n}\r\n\r\n.quick-view-container {\r\n  padding: 15px 25px 15px 25px;\r\n  margin: 10px;\r\n  background: #fff;\r\n  box-shadow: $vvshadow;\r\n\r\n  position: relative;\r\n  .close {\r\n    position: absolute;\r\n    top: 15px;\r\n    right: 15px;\r\n  }\r\n}\r\n\r\n.quick-view-layout, .items-3-4 {\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n}\r\n\r\n.quick-view-layout {\r\n\r\n  .item-1 {\r\n    flex: 1 2 auto;\r\n  }\r\n  .item-2 {\r\n    flex: 1 1 auto;\r\n  }\r\n\r\n  .items-3-4 {\r\n    flex: 4 2 auto;\r\n    min-height: 100px;\r\n    height: 100%;\r\n  }\r\n  .item-3 {\r\n    flex: 2 1 auto;\r\n  }\r\n  .item-4 {\r\n    flex: 1 2 auto;\r\n  }\r\n\r\n}\r\n\r\n.item-5 {\r\n  margin-top: 15px;\r\n}\r\n",
                    "styleUrl": "./expanded-quick-view.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "candidateQuickViewService",
                        "type": "CandidateQuickViewService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 28,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "candidateQuickViewService",
                        "type": "CandidateQuickViewService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\r\n<div class=\"quick-view-container\">\r\n\r\n  <div class=\"quick-view-layout\">\r\n    <div class=\"item-1\">\r\n\r\n      <candidate-card *ngIf=\"candidateId\"\r\n        [candidateId]=\"candidateId\"\r\n        [inExpandedCard]=\"true\"\r\n        (emitCandidateId)=\"showFullDetailsClicked($event)\"\r\n      ></candidate-card>\r\n      \r\n    </div>\r\n    <div class=\"item-2\">\r\n\r\n      <app-expanded-raised-vs-spent *ngIf=\"raisedVsSpentData\"\r\n        [raised]=\"raisedVsSpentData.raised\"\r\n        [spent]=\"raisedVsSpentData.spent\"\r\n        [averageDonation]=\"raisedVsSpentData.averageDonation\"\r\n      ></app-expanded-raised-vs-spent>\r\n\r\n    </div>\r\n    <div class=\"items-3-4\">\r\n      <div class=\"item-3\">\r\n\r\n      <app-contributions-by-group *ngIf=\"donationsByGroupData\"\r\n        [contributionGroups]=\"donationsByGroupData.groups\"\r\n      ></app-contributions-by-group>\r\n\r\n      </div>\r\n      <div class=\"item-4\">\r\n\r\n      <app-expanded-raised-in-vs-out *ngIf=\"raisedInOutData\"\r\n        [inside]=\"raisedInOutData.inside\"\r\n        [outside]=\"raisedInOutData.outside\"\r\n        [areaName]=\"raisedInOutData.areaName\"\r\n        [jurisdiction]=\"raisedInOutData.jurisdiction\"\r\n      ></app-expanded-raised-in-vs-out>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"item-5\">\r\n    <app-expanded-outside-money *ngIf=\"outsideMoneyData\"\r\n      [support]=\"outsideMoneyData['support']\"\r\n      [oppose]=\"outsideMoneyData['oppose']\"\r\n      [totalExpenditures]=\"outsideMoneyData['support']+outsideMoneyData['oppose']\"\r\n    ></app-expanded-outside-money>\r\n  </div>\r\n\r\n\r\n  <div class=\"close\">\r\n    <i style=\"font-size: 25px;\" aria-hidden=\"true\" (click)=\"close()\">\r\n      <fa-icon [icon]=\"faTimesCircle\"></fa-icon>\r\n    </i>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ExpandedRaisedInVsOutComponent",
            "id": "component-ExpandedRaisedInVsOutComponent-830715898d3cf4a675a781f8b2eb778ec89d513812326e087cf9c48fa503b128c4580c1833acbcb77ad1d07e86a4a42454264df144312d23c2a64014b2c9a307",
            "file": "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expanded-raised-in-vs-out",
            "styleUrls": [
                "./expanded-raised-in-vs-out.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expanded-raised-in-vs-out.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "areaName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inside",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "jurisdiction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "jurisdictionSuffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "outside",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "jurisdictionComplete",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "tooltipText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-expanded-raised-in-vs-out',\n  templateUrl: './expanded-raised-in-vs-out.component.html',\n  styleUrls: ['./expanded-raised-in-vs-out.component.scss']\n})\nexport class ExpandedRaisedInVsOutComponent implements OnChanges {\n  @Input() inside: number;\n  @Input() outside: number;\n  @Input() areaName: string; // Example: City of San Diego\n  @Input() jurisdiction: string; // Example: City, District\n  @Input() jurisdictionSuffix?: string; // Example '1', '5'\n\n  title: string;\n  tooltipText: string;\n  jurisdictionComplete: string;\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.setData();\n  }\n\n  setData() {\n    this.jurisdictionComplete = this.jurisdiction;\n    this.jurisdictionComplete += (this.jurisdictionSuffix) ? ` ${this.jurisdictionSuffix}` : '';\n    \n    this.title = `In vs. Out of ${this.jurisdictionComplete}`;\n    this.tooltipText = `Total campaign funds raised in the ${this.areaName} versus funds raised outside of city limits.`;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.raised-in-vs-out-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .chart {\r\n    height: 100%;\r\n  }\r\n}\r\n",
                    "styleUrl": "./expanded-raised-in-vs-out.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\n<div class=\"raised-in-vs-out-container\">\n  <app-expanded-chart-title class=\"title\"\n    [titleText]=\"title\"\n    [tooltipText]=\"tooltipText\"\n  ></app-expanded-chart-title>\n\n  <app-raised-in-vs-out-donut class=\"chart\"\n    [inside]=\"inside\"\n    [outside]=\"outside\"\n  ></app-raised-in-vs-out-donut>\n</div>\n"
        },
        {
            "name": "ExpandedRaisedVsSpentComponent",
            "id": "component-ExpandedRaisedVsSpentComponent-4ced8a8c073194c292337eb105d4071552b4b85fc45105e62ce34f9eed96e8b1c49191ae33fb6ea0cd99320a04b2540df5d965569cb4df59ae6121e02db7ca28",
            "file": "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-expanded-raised-vs-spent",
            "styleUrls": [
                "./expanded-raised-vs-spent.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./expanded-raised-vs-spent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "averageDonation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "spent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'Raised v. Spent'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "tooltipText",
                    "defaultValue": "'Total campaign funds raised and spent by the candidate.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-expanded-raised-vs-spent',\n  templateUrl: './expanded-raised-vs-spent.component.html',\n  styleUrls: ['./expanded-raised-vs-spent.component.scss']\n})\nexport class ExpandedRaisedVsSpentComponent implements OnInit {\n\n  @Input() raised: number;\n  @Input() spent: number;\n  \n  @Input() averageDonation: number;\n\n  title = 'Raised v. Spent';\n  tooltipText = 'Total campaign funds raised and spent by the candidate.';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.raised-vs-spent-wrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n}\r\n\r\n.chart-title {\r\n  flex: 0 0 auto;\r\n}\r\n\r\n.raised-vs-spent-chart {\r\n  flex: 1 0 auto;\r\n}\r\n\r\n.average-footer {\r\n  flex: 0 0 auto;\r\n}\r\n",
                    "styleUrl": "./expanded-raised-vs-spent.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<div class=\"raised-vs-spent-wrapper\">\n  <app-expanded-chart-title class=\"chart-title\"\n    [titleText]=\"title\"\n    [tooltipText]=\"tooltipText\"\n  ></app-expanded-chart-title>\n\n  <app-raised-vs-spent-bar class=\"raised-vs-spent-chart\"\n    [raised]=\"raised\"\n    [spent]=\"spent\"\n  ></app-raised-vs-spent-bar>\n\n  <app-expanded-average-donation class=\"average-footer\"\n    [amount]=\"averageDonation\"\n  ></app-expanded-average-donation>\n</div>\n"
        },
        {
            "name": "FaqComponent",
            "id": "component-FaqComponent-9bd63c047333830e0d967d2b237f28ddf81b7d9ac6dd13815542db0c7911fee2779b8198994ec16a8ade919bbb9f33f23b0f305365bf0665d98956be39707601",
            "file": "src/app/public/components/faq/faq.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-faq",
            "styleUrls": [
                "./faq.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./faq.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-faq',\r\n  templateUrl: './faq.component.html',\r\n  styleUrls: ['./faq.component.scss']\r\n})\r\nexport class FaqComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n\r\n.faq{\r\n        padding:20px 40px 40px 40px;\r\n        margin:20px 40px;\r\n        background-color:#ffffff;\r\n        box-shadow: $vvshadow;\r\n\r\n        h1{\r\n            margin:20px 0px 30px 0px;\r\n            text-align: left;\r\n        }\r\n\r\n        .fact{\r\n            color: $vvblue;\r\n            font-weight:normal;\r\n            margin-bottom:5px;\r\n            font-size: 18px;\r\n            line-height: 1.4;\r\n            max-width: 800px;\r\n        }\r\n\r\n        .answer{\r\n            margin-top:0px !important;\r\n            color: $vvdarkgrey;\r\n            margin-bottom: 20px;\r\n            font-size: 14px;\r\n            line-height: 1.4;\r\n            font-weight: 100;\r\n            max-width: 1200px;\r\n        }\r\n       \r\n  \r\n}\r\n",
                    "styleUrl": "./faq.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"faq\">\r\n  <h1>Frequently Asked Questions</h1>\r\n  <h3 class=\"fact\">Where is this data sourced?</h3>\r\n\r\n\r\n  <p class=\"answer\">All of our data is sourced directly from the <a href=\"https://ssl.netfile.com/static/agency/csd/\"\r\n      target=\"_blank\">City of San Diego</a> public records. It is our priority to show you unbiased accurate\r\n    information about campaign finance.</p>\r\n\r\n\r\n  <h3 class=\"fact\">How often is this site updated?</h3>\r\n\r\n  <p class=\"answer\">Our data is pulled from the <a href=\"https://ssl.netfile.com/static/agency/csd/\"\r\n      target=\"_blank\">City of San Diego</a> public records multiple times a week to ensure you are able to see the\r\n    latest campaign finance data for your local elections.\r\n  </p>\r\n\r\n\r\n  <h3 class=\"fact\">Who manages this site?</h3>\r\n  <p class=\"answer\">This site is a collaboration between the Voters' Voice Initiatives, a non-partisan community group\r\n    advocating for election reform and Open San Diego, a brigade of the national, non-partisan Code for America.\r\n  </p>\r\n\r\n\r\n  <h3 class=\"fact\">How do I find out what city council district I am in?</h3>\r\n  <p class=\"answer\">You can use our built-in district finder or use the city’s finder.\r\n  </p>\r\n\r\n\r\n  <h3 class=\"fact\">What is outside money?</h3>\r\n  <p class=\"answer\">Outside money refers to all independent expenditures for or against a candidate.\r\n  </p>\r\n\r\n  <h3 class=\"fact\">What is an independent expenditure?</h3>\r\n  <p class=\"answer\">Independent expenditures are campaign contributions for communications that expressly advocate for the election or defeat of a candidate that is not made in cooperation, consultation or concert with; or at the request or suggestion of a candidate, candidate's authorized committee or political party.\r\n  </p>\r\n\r\n  <h3 class=\"fact\">What is the difference between donating to a candidate's campaign committee and donating to an independent expenditure committee supporting the candidate?</h3>\r\n  <p class=\"answer\">In the city of San Diego, candidates running for municipal office are subject to campaign finance limits on how much you can donate.  For City Council the limit is $1200 and for Mayor and City Attorney it is currently $2,300.\r\n    There are no limits to how much money you can donate to an independent expenditure committee working separately on behalf of, or against a candidate.\r\n  </p>\r\n\r\n\r\n  <h3 class=\"fact\">How does this effort help reduce the impact of money on politics?</h3>\r\n  <p class=\"answer\">Campaign finance disclosure is an essential public accountability mechanism.  Providing public access to this kind of information about the flow of money in elections empowers oversight and accountability in the government decision-making process.  Data transparency is critical to maintaining public trust.</p>\r\n\r\n  <h3 class=\"fact\">What are Democracy Dollars?</h3>\r\n  <p class=\"answer\">Democracy Dollars are a method of public financing of elections which can be an effective tool to increase voter engagement, expand opportunity for more community members of diverse experience to run for office and combat the rising influence of money on political outcomings.</p>\r\n\r\n  <h3 class=\"fact\">How do Democracy Dollars work?</h3>\r\n  <p class=\"answer\">Candidates receive public funds to finance their campaigns for office. In this program each registered voter would receive (4) democracy dollar certificates worth $25 each to give to the candidate(s) of their choice running for Mayor, City Attorney or City Council.<br/><br/>\r\n    Candidates qualify for public funds by raising a threshold number of small donor contributions and agree to forego big dollar contributions. Once qualified, candidates are able to fund their campaign by asking for and receiving Democracy Dollars from the voters.  This ensures that candidates are beholden to the public they represent and voters have a voice in who makes it to the ballot box.\r\n    You can read more about it <a href=\"https://sdvotersvoice.org/how-does-it-work%3F\" target=\"_blank\">here.</a></p>\r\n\r\n\r\n\r\n</div>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-4c6f6f37e9dc317220ff50428c371c99a1eebfd25fdadb14adf79063ac10ba394f99171573260362518c0d458c02b8cfc00b6d7dea3ba7517b698e58d8dceed7",
            "file": "src/app/public/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "lastUpdatedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { LastUpdatedService } from 'src/app/store/services/last-updated.service';\r\n\r\n@Component({\r\n  selector: 'footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  lastUpdatedDate: string;\r\n\r\n  constructor(\r\n    private lastUpdatedService: LastUpdatedService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {     \r\n    this.lastUpdatedService.getLastUpdated()\r\n      .subscribe(update => this.lastUpdatedDate = update.updated);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n.footer {\r\n  display: grid;\r\n  grid-template-columns: 3fr auto;\r\n  padding: 40px 40px 40px 40px;\r\n  color: $vvdarkblue;\r\n  border:none;\r\n  background-color: $vvbackground;\r\n\r\n  h3 {\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 1.2;\r\n    margin-bottom: 5px;\r\n    margin-right: 40px;\r\n  }\r\n\r\n  p {\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    line-height: 1.3;\r\n    max-width: 600px;\r\n    margin-right: 40px;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .footer_links {\r\n    margin: 20px 20px 20px 0px;\r\n    display: inline-block;\r\n    \r\n    font-weight: 400;\r\n    font-size: 14px;\r\n    line-height: 1.5;\r\n    text-decoration: none;\r\n    color: $vvblue;\r\n\r\n    .footer_logo {\r\n      align-self: center;\r\n      justify-self: center;\r\n      margin-right: 20px;\r\n    }\r\n\r\n    .updated{\r\n    color: $vvgreen;\r\n    font-style: italic;\r\n    font-size: 12px;\r\n    }\r\n\r\n    .footer_links:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 636px) {\r\n  .footer {\r\n    grid-template-columns: 1fr;\r\n    text-align: center;\r\n   \r\n    h3 {\r\n      font-size: 14px;\r\n      margin-right: 0px;\r\n    }\r\n\r\n    p {\r\n      margin-right: 0px;\r\n    }\r\n\r\n    .last {\r\n      margin-right: 0px !important;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "lastUpdatedService",
                        "type": "LastUpdatedService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "lastUpdatedService",
                        "type": "LastUpdatedService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"footer\">\r\n  <div>\r\n    <div class=\"footer_nav\">\r\n      <div class=\"footer_links\">\r\n        <a routerLink=\"/about\">About</a>\r\n      </div>\r\n      <div class=\"footer_links\">\r\n        <a routerLink=\"/faq\">FAQ</a>\r\n      </div>\r\n      <div class=\"footer_links last\">\r\n        <a href=\"https://registertovote.ca.gov/\" target=\"_blank\" rel=\"noopener noreferrer\">Register to Vote</a>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <h3>Brought to you by the Voters' Voice Initiatives and San Diego’s Public Ethics Commission</h3>\r\n      <p>The San Diego Campaign Finance Dashboard is being developed by volunteers in a non-partisan coalition as a service\r\n        to our community. Data has been gathered from public records posted by the\r\n        <a href=\"https://efile.sandiego.gov/\"\r\n          target=\"_blank\">City of San Diego Electronic Filing System\r\n        </a> in order to create the graphs and summaries for each candidate’s campaign.</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"footer_logo\">\r\n    <img src=\"../../../assets/home/VV_Logo_Color@2x.png\" alt=\"Voter's Voice Initiative\" width=\"120\" height=\"auto\">\r\n    <p class=\"updated\">Last Updated {{ lastUpdatedDate }}</p>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-9e6f72322431740f24700320358c5bb091c497fb5e4331999d4e77740f43da7c0d5bb2d645997a97f860ca86bb61f311cb55c8fe136f7096dd6410154fcb9c63",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          primary\r\n          size=\"small\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-62231dda21f3f61a8d5514b54f7c8e1191700b613eb3a467593528cf468e696d4746be73afaee91819a8a434351092534ea1fce6b73195d49f4ed12053710e91-1",
            "file": "src/app/navigation-menu/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "homeLink",
                    "defaultValue": "'/home'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "sideMenuService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SideMenuService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sideNavToggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { SideMenuService } from 'src/app/navigation-menu/services/side-menu.service';\r\n\r\n@Component({\r\n  selector: 'header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  homeLink = '/home';\r\n\r\n  constructor(\r\n    public sideMenuService: SideMenuService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  resetSidenav() {\r\n  }\r\n\r\n  sideNavToggle() {\r\n    this.sideMenuService.toggleSideMenu();\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n.router-link-active {\r\n  color: $vvyellow !important;\r\n}\r\n\r\n.logo{\r\n  &:focus{\r\n    outline: none !important;\r\n  }\r\n}\r\n\r\n.header-nav{\r\n  .bar-toggle{\r\n    display:none;\r\n    color:#fff;\r\n  }\r\n  font-size: 18px;\r\n  display: grid;\r\n  grid-template-columns: 3fr auto auto;\r\n  padding: 10px 20px;\r\n  text-align: left;\r\n  background-color: $vvdarkblue;\r\n  align-items: center;\r\n  .nav_links {\r\n      margin-left: 20px;\r\n      margin-right: 20px;\r\n      color: #ffffff;\r\n      text-decoration: none;\r\n      font-weight: 100;\r\n      &:hover {\r\n          text-decoration: underline;\r\n          color: $vvyellow;\r\n        }\r\n        &:active {\r\n          color: $vvyellow;\r\n        }\r\n    }\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  \r\n  .header-nav{\r\n    .bar-toggle{\r\n      display:block !important;\r\n      color:#fff;\r\n      padding-right:20px;\r\n      font-size:22px;\r\n    }\r\n    grid-template-columns: auto 3fr auto auto !important;\r\n  }\r\n  \r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sideMenuService",
                        "type": "SideMenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "sideMenuService",
                        "type": "SideMenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<div class=\"header-nav\">\r\n  <i class=\"bar-toggle\" (click)=\"sideNavToggle()\">\r\n    <fa-icon [icon]=\"['fas', 'bars']\"></fa-icon>\r\n  </i>\r\n  \r\n  <div>\r\n    <img class=\"logo\" src=\"../../../assets/home/VV_Logo_Reversed@2x.png\" alt=\"Voter's Voice Initiative\" width=\"120\" height=\"auto\"\r\n      routerLinkActive=\"active-link\" [routerLink]=\"homeLink\" (click)=\"resetSidenav()\">\r\n  </div>\r\n  <a class=\"nav_links\" routerLink=\"/about\" routerLinkActive=\"router-link-active\" (click)=\"resetSidenav()\">About</a>\r\n  <a class=\"nav_links\" routerLink=\"/faq\" routerLinkActive=\"router-link-active\" (click)=\"resetSidenav()\">FAQ</a>\r\n</div>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-85a970696ff1150ecf78bd6a0ca3e29a7a70678fc2563d7d5480cb8c50eda4200b4e55f0cb176a81cb85a7418b8c9028d573c41576423bc44513855d138e50d9",
            "file": "src/app/navigation-menu/components/home/home.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isOpened",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "sideMenuService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SideMenuService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sidenav",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDrawer",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'drawer', {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLoad",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:load', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onResize",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'window:resize', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setMenu",
                    "args": [
                        {
                            "name": "pageWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageWidth",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:load",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20
                },
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { MatDrawer } from '@angular/material/sidenav';\r\nimport { SideMenuService } from 'src/app/navigation-menu/services/side-menu.service';\r\n\r\n@Component({\r\n  selector: 'home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  @ViewChild('drawer', { static: true }) sidenav: MatDrawer;\r\n  isOpened: boolean = true;\r\n\r\n  constructor(\r\n    public sideMenuService: SideMenuService,\r\n  ) { }\r\n  \r\n  @HostListener('window:load', ['$event'])\r\n  onLoad(event): void {\r\n    this.setMenu(event.currentTarget.innerWidth);\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event): void {\r\n    this.setMenu(event.target.innerWidth);\r\n  }\r\n\r\n  setMenu(pageWidth: number) {\r\n    if (this.sidenav !== undefined && pageWidth) {\r\n      if (pageWidth <= 1200) {\r\n        this.sideMenuService.closeSideMenu();\r\n        this.sidenav.mode = 'over';\r\n      } else {\r\n        this.sideMenuService.openSideMenu();\r\n        this.sidenav.mode = 'side';\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sideMenuService.sideMenuOpened$\r\n      .subscribe(isOpened => this.isOpened = isOpened);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n.main_section{\r\n  background-color: $vvbackground;\r\n}\r\n.full-width{\r\n  padding: 0px;\r\n}\r\n.logo{\r\n  &:focus{\r\n    outline: none !important;\r\n  }\r\n}\r\n.sidenav-container {\r\n  height: 95vh;\r\n  border: 1px solid rgba(0, 0, 0, 0.5);\r\n\r\n  .mat-accordion {\r\n\r\n    .mat-expansion-panel {\r\n      border-radius: 0px !important;\r\n      box-shadow: none !important;\r\n      border-bottom: 1px solid #F5F5F5;\r\n\r\n      .mat-expansion-panel-content {\r\n        background: lighten($vvbackground, 3%);\r\n        .mat-expansion-panel-body {\r\n          padding: 0 20px 0;\r\n          margin: 0 10px;\r\n        \r\n        }\r\n      \r\n        i {\r\n          opacity: 0.7;\r\n        }\r\n\r\n        .mat-expansion-panel-header {\r\n          .mat-content{\r\n            display: flex;\r\n            justify-content: space-between;\r\n            //margin: 0;\r\n          }\r\n\r\n          .mat-expansion-indicator {\r\n            padding: 0 5px;\r\n          }\r\n          transition: none;\r\n          background: lighten($vvbackground, 3%);\r\n          padding: 5px 0px;\r\n\r\n          &:hover {\r\n            background: lighten($vvbackground, 3%) !important;\r\n            border-bottom: 2px $vvlightblue solid;\r\n            font-style: italic;\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    .active-link {\r\n      background-color: $vvlightblue !important;\r\n      \r\n\r\n      .mat-content .mat-expansion-panel-header-title {\r\n        color: $vvlightgrey;         \r\n      }\r\n    }\r\n\r\n    .mat-expansion-panel-header {\r\n      transition: 300ms ease;\r\n      .mat-content .mat-expansion-panel-header-title {\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n      }\r\n\r\n      &:hover {\r\n        background-color: lighten($vvlightblue, 10%) !important;\r\n\r\n        .mat-content .mat-expansion-panel-header-title {\r\n          color: $vvlightgrey;         \r\n        }\r\n      }\r\n      \r\n    }\r\n\r\n    .mat-expansion-panel-body {\r\n      ul {\r\n        list-style-type: none;\r\n        padding: 0px;\r\n\r\n        li {\r\n          margin: 0 0 5px 0;\r\n\r\n          &:hover {\r\n            font-weight: bold;\r\n            color: $vvlightblue;\r\n            cursor: pointer;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .candidate-selected {\r\n      font-weight: bold;\r\n      color: $vvlightblue;\r\n    }\r\n\r\n    .district-selected {\r\n      background: lighten($vvbackground, 3%) !important;\r\n      border-bottom: 2px $vvlightblue solid;\r\n      font-style: italic;\r\n    }\r\n}\r\n\r\n  .submenu {\r\n    overflow-y: hidden;\r\n    transition: transform 300ms ease;\r\n    transform: scaleY(0);\r\n    transform-origin: top;\r\n    padding-left: 30px;\r\n    background: $vvlightgrey;\r\n  }\r\n\r\n  .submenu.expanded {\r\n    transform: scaleY(1);\r\n  }\r\n\r\n  .menu-button-expand {\r\n    transition: 300ms ease-in-out;\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  .menu-button-expand.rotated {\r\n    transform: rotate(180deg);\r\n  }\r\n\r\n  mat-nav-list {\r\n    width: 15vw;\r\n    padding-top: 0;\r\n  }\r\n}\r\n\r\n:host ::ng-deep .mat-list-item-content {\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n\r\n  .sidenav-container {\r\n    mat-drawer {\r\n      @media only screen and (min-width: 1201px) {\r\n        width: 150px;\r\n      }\r\n\r\n      @media only screen and (max-width: 1200px) {\r\n        width: 200px;\r\n      }\r\n    }\r\n    .mat-accordion {\r\n      .mat-expansion-panel {\r\n        @media only screen and (min-width: 1201px) {\r\n          width: 150px;\r\n        }\r\n\r\n        @media only screen and (max-width: 1200px) {\r\n          width: 200px;\r\n        }\r\n        .mat-expansion-panel-content {\r\n          .mat-expansion-panel-header {\r\n            font-size: 12px;\r\n            padding: 5px 16px 0px 16px;\r\n          }\r\n\r\n          .mat-expansion-panel-body {\r\n            padding: 0px;\r\n          }\r\n\r\n          .fa-map-marked-alt {\r\n            padding-top: 4px;\r\n          }\r\n        }\r\n\r\n        .mat-accordion .mat-expansion-panel {           \r\n          margin-top: 0px;\r\n          margin-bottom: 0px;\r\n        }\r\n\r\n        .mat-expansion-panel-header {\r\n          font-size: 12px;\r\n          padding: 0 12px;\r\n        }\r\n\r\n        .mat-expansion-panel-body {\r\n          padding: 0px;\r\n      \r\n          ul li {\r\n            font-size: 12px;\r\n            padding: 0 16px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*CTA Stack*/\r\n@media only screen and (max-width: 636px) {\r\n  .headline {\r\n    font-size: 26px;\r\n  }\r\n\r\n  .subheadline {\r\n    margin: auto;\r\n  }\r\n\r\n  .last {\r\n    margin-right: 0px !important;\r\n  }\r\n}\r\n\r\n.year-breadcrumb {\r\n  display: flex;\r\n}\r\n",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sideMenuService",
                        "type": "SideMenuService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "sideMenuService",
                        "type": "SideMenuService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<header></header>\r\n\r\n<mat-drawer-container class=\"sidenav-container\">\r\n  <mat-drawer #drawer align=\"start\" [opened]=\"isOpened\">\r\n    <side-menu></side-menu>\r\n  </mat-drawer>\r\n\r\n  <mat-drawer-content class=\"main_section\">\r\n    <div class=\"year-breadcrumb\">\r\n      <breadcrumb></breadcrumb>\r\n    </div>\r\n    <router-outlet></router-outlet>\r\n    <footer></footer>\r\n  </mat-drawer-content>\r\n</mat-drawer-container>\r\n"
        },
        {
            "name": "LibUiChartsComponent",
            "id": "component-LibUiChartsComponent-5bfd130d241776406aa1a696a16149895985a9d3716631368afc7eab5940e10c0663886bddb8c198db6c41f04444dd35a148abdbb828b22a6abb716554110d2d",
            "file": "projects/lib-ui-charts/src/lib/lib-ui-charts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "lib-lib-ui-charts",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  lib-ui-charts works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-lib-ui-charts',\r\n  template: `\r\n    <p>\r\n      lib-ui-charts works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class LibUiChartsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "NotFoundComponent",
            "id": "component-NotFoundComponent-05ef1b77b1389e73be3b8b37b13e4f914a09377402fc5e529bfaf29ef0b064eb5270c673377f11b17f766c4ca1067372cf1a1762ed5c1d2b4ceb611c569035b8",
            "file": "src/app/public/components/not-found/not-found.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "not-found",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./not-found.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'not-found',\r\n  templateUrl: './not-found.component.html',\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('NotFoundComponent')\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div>\r\n  <h1>404 Error</h1>\r\n  <h1>Page Not Found</h1>\r\n</div>\r\n"
        },
        {
            "name": "OfficeComponent",
            "id": "component-OfficeComponent-4015688b909ad63fbd7e13e41913cb51ea0b4910cedecd66f6176d074ab3928fac71f2de31127828f924fe6f0912c5a8440b1f4c497bebdc6ad580b996ba1cbc",
            "file": "src/app/office/components/office/office.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-office",
            "styleUrls": [
                "./office.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./office.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "candidateIds",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "officeUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "seatName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "selectedCandidateId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCloseExpanded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpenExpanded",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCandidate",
                    "args": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidateId",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setCandidateCards",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setComponentData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SidenavService } from 'src/app/shared/services/sidenav.service';\r\n\r\nimport { CandidateService } from 'src/app/store/services/candidate.service';\r\n\r\ninterface pathParam {\r\n  office: string; \r\n  seatType?: string;\r\n  seatName?: string; \r\n}\r\n\r\n@Component({\r\n  selector: 'app-office',\r\n  templateUrl: './office.component.html',\r\n  styleUrls: ['./office.component.scss'],\r\n})\r\nexport class OfficeComponent implements OnInit {\r\n\r\n  office: string;\r\n  seatName: string;\r\n  selectedCandidateId: string;\r\n  candidateIds: string[] = [];\r\n  isExpanded: boolean = false;\r\n  officeUrl: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private sidenavService: SidenavService,\r\n    private candidateService: CandidateService,\r\n  ) { }\r\n\r\n  setCandidateCards(): void {\r\n    this.candidateService.getCandidates(\r\n      { office: this.office, district: '', year: '2020' }\r\n    ).subscribe(candidates => {\r\n      this.candidateIds = candidates.map(candidate => candidate.id);\r\n    })\r\n  }\r\n\r\n  setComponentData() {\r\n    this.sidenavService.changeSelectedOffice( this.office );  \r\n    this.isExpanded = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.office = data.officePath.split('-').join(' ');\r\n      this.officeUrl = data.officePath;\r\n\r\n      this.setComponentData(); \r\n      this.setCandidateCards();\r\n    })\r\n\r\n    this.route.paramMap.subscribe(params => {\r\n      const candidateId = params.get('candidateId')\r\n      if (candidateId) this.setCandidate(candidateId);\r\n    })\r\n  }\r\n\r\n  setCandidate(candidateId: string) {\r\n    this.sidenavService.changeSelectedCandidate(candidateId);\r\n\r\n    this.isExpanded = true;\r\n    this.selectedCandidateId = candidateId;\r\n  }\r\n\r\n  onOpenExpanded(candidateId: string) {\r\n    this.router.navigate([`/office/${this.officeUrl}`, candidateId], { relativeTo: this.route });\r\n  }\r\n\r\n  onCloseExpanded() {\r\n    this.router.navigate([`/office/${this.officeUrl}`], { relativeTo: this.route });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".candidate-cards{\r\n  padding:10px 20px;\r\n  margin: 0em;\r\n}\r\n",
                    "styleUrl": "./office.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sidenavService",
                        "type": "SidenavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sidenavService",
                        "type": "SidenavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"candidate-cards grid justify-left nogutter\">\r\n  <app-expanded-quick-view class=\"col-12\" \r\n    *ngIf=\"isExpanded\" \r\n    [candidateId]=\"selectedCandidateId\" \r\n    (isExpanded)=\"onCloseExpanded()\"\r\n  ></app-expanded-quick-view>\r\n\r\n  <div *ngFor=\"let id of candidateIds\">\r\n    <candidate-card\r\n      [candidateId]=\"id\"\r\n      (emitCandidateId)=\"onOpenExpanded($event)\"\r\n    ></candidate-card>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "OfficeDistrictComponent",
            "id": "component-OfficeDistrictComponent-1b08826e6874be00f3c0df9c2941ccf080cf195f8d43b042983ac5ab42f3d61c2b3919e9baa32532736d09b8af587295cd6cf7dd8c78168aee8e4520dd037fbe",
            "file": "src/app/office/components/office-districts/office-districts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "office-districts",
            "styleUrls": [
                "./office-districts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./office-districts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "district",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'office-districts',\r\n  templateUrl: './office-districts.component.html',\r\n  styleUrls: ['./office-districts.component.scss'],\r\n})\r\nexport class OfficeDistrictComponent implements OnInit {\r\n  office: string;\r\n  district: string;\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./office-districts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<router-outlet></router-outlet>\r\n\r\n<card-list></card-list>\r\n"
        },
        {
            "name": "OfficeSummaryCardComponent",
            "id": "component-OfficeSummaryCardComponent-a5b77602c349f2cbfd94bced30f1a30354aed5663506d9ba184c79b3245116a4a45caad221612a38ace27412300f56de2ff9814c4024176a60cf8623d7c82a90",
            "file": "src/app/public/components/office-summary-card/office-summary-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "office-summary-card",
            "styleUrls": [
                "./office-summary-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./office-summary-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "summary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "OfficeSummaryWithRoute",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "officeIconsMap",
                    "defaultValue": "{\r\n    'mayor': 'university',\r\n    'city attorney': 'balance-scale',\r\n    'city council': 'map-marked-alt',\r\n    'default': 'question',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "<p>The icons used below must be imported in the module and\ninjected in the module&#39;s constructor. The imported icon\nnames are similar but not exactly the same as those\nused in library.addIcons().</p>\n",
                    "line": 19,
                    "rawdescription": "\n\nThe icons used below must be imported in the module and\ninjected in the module's constructor. The imported icon\nnames are similar but not exactly the same as those\nused in library.addIcons().\n",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getIcon",
                    "args": [
                        {
                            "name": "office",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "office",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectOffice",
                    "args": [
                        {
                            "name": "officeType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "officeType",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { SidenavService } from 'src/app/shared/services/sidenav.service';\r\nimport { OfficeSummaryWithRoute } from '../../interfaces/office-summary-with-route';\r\n\r\n@Component({\r\n  selector: 'office-summary-card',\r\n  templateUrl: './office-summary-card.component.html',\r\n  styleUrls: ['./office-summary-card.component.scss']\r\n})\r\nexport class OfficeSummaryCardComponent implements OnInit {\r\n  @Input() summary: OfficeSummaryWithRoute;\r\n\r\n/**\r\n * The icons used below must be imported in the module and\r\n * injected in the module's constructor. The imported icon \r\n * names are similar but not exactly the same as those\r\n * used in library.addIcons().\r\n */   \r\n  private officeIconsMap = {\r\n    'mayor': 'university',\r\n    'city attorney': 'balance-scale',\r\n    'city council': 'map-marked-alt',\r\n    'default': 'question',\r\n  }\r\n\r\n  constructor(\r\n    private sidenavService: SidenavService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  getIcon(office?: string) {\r\n    const icon = this.officeIconsMap[office.toLowerCase()];\r\n    return icon ? icon : this.officeIconsMap['default'];\r\n  }\r\n\r\n  selectOffice(officeType: string) {\r\n    this.sidenavService.emitCandidateTypeSplash(officeType);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n.office-summary-card{\r\n\r\n  .cta{\r\n    @include button-styles;\r\n    padding: 10px 20px;\r\n    max-width: 200px;\r\n    text-decoration: none !important;\r\n\r\n    fa-icon{\r\n      padding: 0px;\r\n      margin: 0px 4px 0px 0px;\r\n    }\r\n  }\r\n  .cta:hover{\r\n      background-color: $vvlightblue;\r\n  }\r\n\r\n  p{\r\n    margin:10px 0px 20px 0px;\r\n    line-height: 1.4;\r\n  }\r\n\r\n  .racename{\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n  }\r\n\r\n  .raised{\r\n    margin:40px 0px  5px 0px;\r\n  }\r\n\r\n  .candidate_num{\r\n    margin:10px 0px  5px 0px;\r\n  }\r\n\r\n  h3{\r\n    font-size:20px;\r\n    margin: 0px;\r\n  }\r\n\r\n  .amount_raised{\r\n    color:#289A58;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./office-summary-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sidenavService",
                        "type": "SidenavService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "sidenavService",
                        "type": "SidenavService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"office-summary-card\">\r\n  <h2 class=\"racename\">{{summary.office}}</h2> \r\n  <a class=\"cta\" routerLinkActive=\"active-link\" [routerLink]=\"[summary.routeLink]\" (click)=\"selectOffice(summary.office.toLowerCase())\">\r\n    <fa-icon [icon]=\"['fas', getIcon(summary.office)]\"></fa-icon>\r\n      See Candidates\r\n  </a>\r\n  <p class=\"raised\">Total Raised</p>\r\n  <h3 class=\"amount_raised\">${{ summary.total_raised | roundCurrencyDisplay: 1 }}</h3>\r\n  <p class=\"candidate_num\">Candidates</p>\r\n  <h3>{{ summary.candidate_count }}</h3>\r\n</div>\r\n"
        },
        {
            "name": "OfficeSummaryComponent",
            "id": "component-OfficeSummaryComponent-156f1f2657864aa91b9b0248ea69c2ebe220a19045b683ed263b99d9456c80ec696314e1eec7e20bda046524689ccd04c5de4baa855a2f7f3f26a838d0329ba8",
            "file": "src/app/public/components/office-summary/office-summary.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "office-summary",
            "styleUrls": [
                "./office-summary.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./office-summary.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faBalanceScale",
                    "defaultValue": "faBalanceScale",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "faMapMarkedAlt",
                    "defaultValue": "faMapMarkedAlt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "faUniversity",
                    "defaultValue": "faUniversity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "summariesWithRoute",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OfficeSummaryWithRoute[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "getRoute",
                    "args": [
                        {
                            "name": "office",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "office",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { \r\n  faUniversity, faBalanceScale, faMapMarkedAlt \r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { OfficeSummaryWithRoute } from '../../interfaces/office-summary-with-route';\r\n\r\n@Component({\r\n  selector: 'office-summary',\r\n  templateUrl: './office-summary.component.html',\r\n  styleUrls: ['./office-summary.component.scss']\r\n})\r\nexport class OfficeSummaryComponent implements OnInit {\r\n  faUniversity = faUniversity;\r\n  faBalanceScale = faBalanceScale;\r\n  faMapMarkedAlt = faMapMarkedAlt;\r\n\r\n  summariesWithRoute: OfficeSummaryWithRoute[];\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n  ) { }\r\n\r\n  ngOnInit(): void {  \r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      const officeSummaries = this.activatedRoute.snapshot.data.office;\r\n\r\n      this.summariesWithRoute = officeSummaries.map(summary => ({\r\n        ...summary,\r\n        routeLink: this.getRoute(summary),\r\n      }))\r\n    })\r\n  }\r\n\r\n  getRoute(office) {\r\n    let pathSuffix = '/0';\r\n\r\n    // Check to see if the first City Council district should be 1 or 2.\r\n    // For the years 2016 and 2020 the first district will be 1\r\n    // For the years 2018 and 2022 the first district will be 2\r\n    // This check should not be needed after the City Council map component is completed.\r\n    if (office.office.toLowerCase() == 'City Council'.toLowerCase()) {\r\n      if (!Number.isNaN(office.year)) {\r\n        pathSuffix = office.year % 4 === 0 ? '/1' : '/2'\r\n      }\r\n    }\r\n\r\n    return 'office/' + office.office.toLowerCase().split(' ').join('-') + pathSuffix;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n.ftm{\r\n  margin: 20px auto 20px auto;\r\n  text-align:center;\r\n  padding:40px 40px 60px 40px;\r\n  font-weight: 100;\r\n  box-shadow: $vvshadow;\r\n  color:#4E4E4E;\r\n  background-color: #fff;\r\n  h1{\r\n    margin: 0px;\r\n  }\r\n  p{\r\n    margin:10px 0px 20px 0px;\r\n    line-height: 1.4;\r\n  }\r\n  .ftm_caption{   \r\n    display: block;\r\n    margin:10px auto 20px auto;\r\n  }\r\n  .choose{\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    align-content: center;\r\n    \r\n    div{\r\n      border-right:2px solid $vvbackground;\r\n    }\r\n    div:last-child{\r\n      border-right:none;\r\n    }\r\n\r\n    .cta{\r\n\r\n      @include button-styles;\r\n      padding: 10px 20px;\r\n      max-width: 200px;\r\n      text-decoration: none;\r\n      a{\r\n        text-decoration: none;\r\n      }\r\n      fa-icon{\r\n        padding: 0px;\r\n        margin: 0px 4px 0px 0px;\r\n      }\r\n    }\r\n    .cta:hover{\r\n      background-color: $vvlightblue;\r\n    }\r\n  }\r\n\r\n  .racename{\r\n    font-size: 20px;\r\n    margin-bottom: 30px;\r\n  }\r\n  .raised{\r\n    margin:40px 0px  5px 0px;\r\n  }\r\n  .candidate_num{\r\n    margin:10px 0px  5px 0px;\r\n  }\r\n  h3{\r\n    font-size:20px;\r\n    margin: 0px;\r\n  }\r\n  .amount_raised{\r\n    color:#289A58;\r\n  }\r\n}\r\n\r\n.sources{\r\n  margin-top:60px;\r\n  font-size:14px;\r\n  a{\r\n    color:$vvlightblue;\r\n  }\r\n  p{\r\n    margin:0px !important;\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  .choose{\r\n    grid-template-columns: 1fr !important;\r\n    row-gap: 20px;\r\n    div{\r\n      border-bottom:2px solid $vvbackground !important;\r\n      border-right:none!important;\r\n      padding-bottom: 40px;\r\n    }\r\n    div:last-child{\r\n      border-bottom:none!important;\r\n      padding-bottom: 0px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./office-summary.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<div class=\"ftm\">\r\n  <h1>Follow the Money</h1>\r\n  <p class=\"ftm_caption\">See how local campaigns are financed so you can be informed before you vote.</p>\r\n  <div class=\"choose\">\r\n    <div *ngFor=\"let summary of summariesWithRoute;\">\r\n      <office-summary-card [summary]=\"summary\"></office-summary-card>\r\n    </div>    \r\n  </div>\r\n  <div class=\"sources\"><p>All of our data is sourced directly from the <a href=\"https://efile.sandiego.gov/\" target=\"_blank\">City of San Diego</a> Electronic Filing System.</p></div>\r\n</div>\r\n"
        },
        {
            "name": "OutsideMoneyStackedBarComponent",
            "id": "component-OutsideMoneyStackedBarComponent-f4b82e1f3faceb8a8403bf9f6ee4f22dfe9ab68788830f61e52e87b8af3bda2e72611d4602dabd2f29ba6116b3d1179b01571b3aee6ac3a3ae5520f5bb9529b3",
            "file": "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-outside-money-stacked-bar",
            "styleUrls": [
                "./outside-money-stacked-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./outside-money-stacked-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "committeeHighlighted",
                    "defaultValue": "'-1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "opposedCommittees",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "supportCommittees",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "committeeHighlightedChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'item',\r\n      formatter: (params) =>  \r\n        `${params.seriesName}: $${Math.abs(params.value).toLocaleString()}`,\r\n      extraCssText: \"width: 300px; white-space: pre-wrap;\",\r\n    },\r\n    xAxis: {\r\n      type: 'value',\r\n      axisLabel: {\r\n        formatter: (value: number) => \r\n          getCompactFormattedCurrency(Math.abs(value)),\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      data: [''],\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "defaultOpposedBarColor",
                    "defaultValue": "'darkRed'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "defaultSupportBarColor",
                    "defaultValue": "'darkGreen'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "echartsInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ECharts",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "hoveredBar",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "mergeOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "getChartBalancer",
                    "args": [
                        {
                            "name": "sum1",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sum2",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "BarSeriesOption",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sum1",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sum2",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSeriesOptions",
                    "args": [
                        {
                            "name": "committees",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "defaultColor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "direction",
                            "type": "\"left\" | \"right\"",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "BarSeriesOption[]",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "committees",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "defaultColor",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "direction",
                            "type": "\"left\" | \"right\"",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onChartInit",
                    "args": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setChartMergeOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateChartHighlight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\r\n\r\nimport { EChartsOption, ECharts, BarSeriesOption } from 'echarts';\r\n\r\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\r\n\r\n@Component({\r\n  selector: 'app-outside-money-stacked-bar',\r\n  templateUrl: './outside-money-stacked-bar.component.html',\r\n  styleUrls: ['./outside-money-stacked-bar.component.scss']\r\n})\r\nexport class OutsideMoneyStackedBarComponent implements OnChanges {\r\n  @Input() opposedCommittees;\r\n  @Input() supportCommittees;\r\n  @Input() committeeHighlighted: string = '-1';\r\n  @Output() committeeHighlightedChange = new EventEmitter<string>();\r\n\r\n  defaultOpposedBarColor = 'darkRed';\r\n  defaultSupportBarColor = 'darkGreen';\r\n\r\n  echartsInstance: ECharts;\r\n  mergeOption: EChartsOption;\r\n\r\n  chartOption: EChartsOption = {\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'item',\r\n      formatter: (params) =>  \r\n        `${params.seriesName}: $${Math.abs(params.value).toLocaleString()}`,\r\n      extraCssText: \"width: 300px; white-space: pre-wrap;\",\r\n    },\r\n    xAxis: {\r\n      type: 'value',\r\n      axisLabel: {\r\n        formatter: (value: number) => \r\n          getCompactFormattedCurrency(Math.abs(value)),\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      data: [''],\r\n      axisTick: {\r\n        show: false,\r\n      },\r\n    },\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n\r\n    if (changes['opposedCommittees'] || changes['supportCommittees']) {\r\n      this.setChartMergeOption();\r\n    }\r\n\r\n    if (changes['committeeHighlighted']) {\r\n      this.updateChartHighlight();\r\n    }\r\n\r\n  }\r\n\r\n  onChartInit(ec: ECharts): void {\r\n    this.echartsInstance = ec;\r\n  }\r\n\r\n  updateChartHighlight() {\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.dispatchAction({ type: 'downplay' });\r\n      this.echartsInstance.dispatchAction({ \r\n        type: 'highlight', \r\n        seriesId: this.committeeHighlighted,\r\n      });\r\n    }\r\n  }\r\n\r\n  hoveredBar = (event: object) => {\r\n    this.committeeHighlightedChange.emit(event['seriesId']+'');\r\n  }\r\n\r\n\r\n  getSeriesOptions(committees, defaultColor: string, direction: 'left' | 'right'): BarSeriesOption[]  {\r\n    const directionMultiplier = (direction === 'left') ? -1 : 1; \r\n\r\n    const seriesTemplate = {\r\n      type: 'bar',\r\n      stack: 'outside-money',\r\n      emphasis: {\r\n        focus: 'series',\r\n      },\r\n      blur: {\r\n        itemStyle: { opacity: .5, },\r\n      },\r\n    } as const;\r\n\r\n    return committees.map((data) => ({\r\n      ...seriesTemplate,\r\n      id: data.id,\r\n      name: data.name,\r\n      itemStyle: { color: (data.color) ? data.color : defaultColor, },\r\n      data: [ directionMultiplier * data.value],\r\n    }));\r\n  }\r\n  \r\n  getChartBalancer(sum1: number, sum2: number): BarSeriesOption {\r\n    const defaultBarAmount = 1000;\r\n    const maxBarAmount = Math.max(sum1, sum2);\r\n    const barAmount = maxBarAmount > 0 ? maxBarAmount : defaultBarAmount;\r\n\r\n    return {\r\n      type: 'bar',\r\n      stack: 'hidden',\r\n      name: 'chart-balancer',\r\n      barGap: '-100%',\r\n      z: -10,\r\n      itemStyle: { opacity: 0, color: 'grey'},\r\n      silent: true,\r\n      data: [-barAmount, barAmount],\r\n    };\r\n  }\r\n\r\n  setChartMergeOption(): void {\r\n\r\n    const opposedSeries: BarSeriesOption[] =\r\n      this.getSeriesOptions(this.opposedCommittees, this.defaultOpposedBarColor, 'left');\r\n    const supportSeries: BarSeriesOption[] = \r\n      this.getSeriesOptions(this.supportCommittees, this.defaultSupportBarColor, 'right');\r\n\r\n    const seriesSumReducer = (accumulator, currentValue) => accumulator + currentValue.value;\r\n    const opposedSum = this.opposedCommittees.reduce(seriesSumReducer, 0);\r\n    const supportSum = this.supportCommittees.reduce(seriesSumReducer, 0);\r\n\r\n    if (opposedSeries.length > 0) {\r\n      opposedSeries[opposedSeries.length-1]['label'] = {\r\n        show: true,\r\n        fontWeight: 'bold',\r\n        position: 'left',\r\n        formatter: getCompactFormattedCurrency(opposedSum),\r\n      };\r\n    }\r\n\r\n    if (supportSeries.length > 0) {\r\n      supportSeries[supportSeries.length-1]['label'] = {\r\n        show: true,\r\n        fontWeight: 'bold',\r\n        position: 'right',\r\n        formatter: getCompactFormattedCurrency(supportSum),\r\n      };\r\n    }\r\n\r\n    const balancerSeries = this.getChartBalancer(opposedSum, supportSum);\r\n\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.setOption(this.chartOption, true);\r\n    }\r\n\r\n    this.mergeOption = {\r\n      series: [...opposedSeries, ...supportSeries, balancerSeries],\r\n    };\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.outside-money-stacked-bar-chart {\r\n  height: 300px;\r\n  min-height: 150px;\r\n  width: 100%;\r\n  min-width: 150px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n",
                    "styleUrl": "./outside-money-stacked-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 46
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\r\n<div class=\"outside-money-stacked-bar-chart\" echarts \r\n  [options]=\"chartOption\"\r\n  [merge]=\"mergeOption\"\r\n\r\n  (chartInit)=\"onChartInit($event)\"\r\n  (chartMouseOver)=\"hoveredBar($event)\"\r\n  (chartMouseOut)=\"hoveredBar({ seriesId: '-1' })\"\r\n></div>  \r\n"
        },
        {
            "name": "OutsideSpendingBarComponent",
            "id": "component-OutsideSpendingBarComponent-98c3087fe2b9b51e45468238b30848b36504bf21ed6aab4aaa1f04380fb42bac60e42b87fa817ee2be411b8470b3cd4ceca11b89032a9d49d71c9a1af076e013",
            "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-outside-spending-bar",
            "styleUrls": [
                "./outside-spending-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./outside-spending-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "defaultValue": "'white'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "oppose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "support",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "textColor",
                    "defaultValue": "'#4e4e4e'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\n    grid: {\n      left: 20,\n      top: 10,\n      right: 75,\n      bottom: 0,\n      height: 125,\n      containLabel: true,\n    },\n    xAxis: {\n      show: false,\n      // type: 'log',\n      // logBase: 2,\n    },\n    yAxis: {\n      type: 'category',\n      inverse: true,\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        show: false,\n      },\n    },\n    tooltip: {\n      show: true,\n      trigger: 'item',\n      formatter: (params) => `${params.name}: $${(+params.value).toLocaleString()}`,\n    },\n    series: [{\n      type: 'bar',\n      label: {\n        show: true,\n        position: 'right',\n        formatter: (params) => \n        `{a|${params['name']}} \\n {b|${getCompactFormattedCurrency(+params['value'])}}`,     \n        align: 'left',\n        rich: {\n          a: {\n            fontSize: 12,\n          },\n          b: {\n            fontSize: 16,\n            fontWeight: 'bold',\n            padding: [5, 0, 5, 0],\n          },\n        },\n      },\n      barWidth: 20,\n    }],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "mergeOption",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setChartMergeOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nimport { EChartsOption } from 'echarts';\n\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\n\n@Component({\n  selector: 'app-outside-spending-bar',\n  templateUrl: './outside-spending-bar.component.html',\n  styleUrls: ['./outside-spending-bar.component.scss']\n})\nexport class OutsideSpendingBarComponent implements OnChanges {\n  @Input() support: number;\n  @Input() oppose: number;\n  @Input() backgroundColor: string = 'white';\n  @Input() textColor: string = '#4e4e4e';\n\n  mergeOption: EChartsOption = {};\n\n  chartOption: EChartsOption = {\n    grid: {\n      left: 20,\n      top: 10,\n      right: 75,\n      bottom: 0,\n      height: 125,\n      containLabel: true,\n    },\n    xAxis: {\n      show: false,\n      // type: 'log',\n      // logBase: 2,\n    },\n    yAxis: {\n      type: 'category',\n      inverse: true,\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        show: false,\n      },\n    },\n    tooltip: {\n      show: true,\n      trigger: 'item',\n      formatter: (params) => `${params.name}: $${(+params.value).toLocaleString()}`,\n    },\n    series: [{\n      type: 'bar',\n      label: {\n        show: true,\n        position: 'right',\n        formatter: (params) => \n        `{a|${params['name']}} \\n {b|${getCompactFormattedCurrency(+params['value'])}}`,     \n        align: 'left',\n        rich: {\n          a: {\n            fontSize: 12,\n          },\n          b: {\n            fontSize: 16,\n            fontWeight: 'bold',\n            padding: [5, 0, 5, 0],\n          },\n        },\n      },\n      barWidth: 20,\n    }],\n  };\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.setChartMergeOption();\n  }\n\n  setChartMergeOption(): void {\n\n    const rows = {\n      Support: {\n        name: 'Support',\n        color: '#0969d7',\n      },\n      Oppose: {\n        name: 'Oppose',\n        color: '#d5631d',\n      },\n    }\n\n    this.mergeOption = {\n      backgroundColor: this.backgroundColor,\n      yAxis: {\n        axisLabel: {\n          color: this.textColor,\n        },\n        data: [rows.Support.name, rows.Oppose.name],\n      },\n      series: {\n        label: {\n          color: this.textColor,\n        },\n        data: [\n          {\n            name: rows.Support.name,\n            value: this.support,\n            itemStyle: { color: rows.Support.color, },\n          },\n          {\n            name: rows.Oppose.name,\n            value: this.oppose,\n            itemStyle: { color: rows.Oppose.color, },\n          },\n        ],\n      }\n    }\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".outside-spending-chart {\r\n  height: 125px;\r\n}\r\n",
                    "styleUrl": "./outside-spending-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 70
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\n<div class=\"outside-spending-chart\" echarts \n  [options]=\"chartOption\"\n  [merge]=\"mergeOption\"\n></div>  \n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-dc14b12320300a3560aae9da5f0ea2923d91413cab32b5b2ecbb1832e735b7621b9f08e659d24dfe63817a4bf48114b0c2f97fd6bda0a718a6cfe00b9199f492",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"onLogout.emit($event)\"\r\n      (onLogin)=\"onLogin.emit($event)\"\r\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n\r\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\r\n//   <article>\r\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\r\n\r\n// );\r\n// Page.propTypes = {\r\n//   user: PropTypes.shape({}),\r\n//   onLogin: PropTypes.func.isRequired,\r\n//   onLogout: PropTypes.func.isRequired,\r\n//   onCreateAccount: PropTypes.func.isRequired,\r\n// };\r\n\r\n// Page.defaultProps = {\r\n//   user: null,\r\n// };\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nsection h2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nsection p {\r\n  margin: 1em 0;\r\n}\r\n\r\nsection a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nsection ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nsection li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\nsection .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\nsection .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\nsection .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\nsection .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "QuickViewContainerComponent",
            "id": "component-QuickViewContainerComponent-3b90c811f7209565fc79aa7794969e3891710ca7647d192794b5e3148e744b48b58c460fe8cc64127ba8d1492a9fdf2e71a91b7fe0a30ea381c31299a4b7a6d5",
            "file": "src/app/office/components/quick-view-container/quick-view-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "quick-view-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./quick-view-container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "candidateId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "office",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCloseExpanded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'quick-view-container',\r\n  templateUrl: './quick-view-container.component.html',\r\n  // styleUrls: ['./quick-view-container.component.scss'],\r\n})\r\nexport class QuickViewContainerComponent implements OnInit {\r\n  office: string;\r\n  candidateId: string;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.candidateId = params.get('candidateId')\r\n    })\r\n  }\r\n\r\n  onCloseExpanded() {\r\n    const segments = this.router.url.split('/');\r\n    segments.pop();\r\n    const urlWithoutCandidateId = segments.join('/');\r\n    this.router.navigate([urlWithoutCandidateId]);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\r\n<app-expanded-quick-view *ngIf=\"candidateId\"\r\n  [candidateId]=\"candidateId\" \r\n  (isExpanded)=\"onCloseExpanded()\"\r\n></app-expanded-quick-view>\r\n"
        },
        {
            "name": "RaisedByIndustryBarComponent",
            "id": "component-RaisedByIndustryBarComponent-00a9aab6bc85d5eede66612c764ac83975ebff0f1dfa27828e01b2aec750073c3fdb1f2c6c1b5601ac2b2af3514d2f4624cc75c90f6a92d1fcebd399d2021332",
            "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-raised-by-industry-bar",
            "styleUrls": [
                "./raised-by-industry-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./raised-by-industry-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "raisedByIndustries",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "RaisedByIndustry[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\r\n    grid: {\r\n      containLabel: true,\r\n      left: '5%',\r\n      right: '5%',\r\n      top: '2%',\r\n      bottom: '2%',\r\n    },\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'axis',\r\n      formatter: (params) => \r\n        `${params[0].data.name}: $${params[0].data.value.toLocaleString()}`,\r\n      axisPointer: {\r\n        type: 'shadow',\r\n      }\r\n    },\r\n    dataset: {\r\n      source: [],  // set in ngOnChanges\r\n    },\r\n    xAxis: {\r\n      position: 'top',\r\n      axisLabel: {\r\n        formatter: (value: number) => \r\n          getCompactFormattedCurrency(value),\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      axisTick: {\r\n        show: false\r\n      },\r\n    },\r\n    series: [{\r\n      type: 'bar',\r\n      name: 'raised-by-industry-bar',\r\n      encode: {\r\n        y: 'name',\r\n        x: 'value',\r\n        label: 'label',\r\n      },\r\n      label: {\r\n        show: true,\r\n        position: 'right',\r\n        formatter: (params) => \r\n          getCompactFormattedCurrency(params.data['value'], 1),\r\n      },\r\n      itemStyle: {\r\n        color: '#53AE79',\r\n      },\r\n      barCategoryGap: '120%',\r\n      barMinWidth: 16,\r\n    }],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "dataRowsCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "echartsInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ECharts",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "initOpts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "mergeOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChartInit",
                    "args": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setChartHeight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setChartMergeOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 94,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { EChartsOption, ECharts } from 'echarts';\r\n\r\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\r\n\r\nexport interface RaisedByIndustry {\r\n  name: string,\r\n  value: number,\r\n  label?: string,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-raised-by-industry-bar',\r\n  templateUrl: './raised-by-industry-bar.component.html',\r\n  styleUrls: ['./raised-by-industry-bar.component.scss']\r\n})\r\nexport class RaisedByIndustryBarComponent implements OnChanges {\r\n\r\n  @Input() raisedByIndustries: RaisedByIndustry[];\r\n\r\n  private dataRowsCount = 0;\r\n\r\n  echartsInstance: ECharts;\r\n  mergeOption: EChartsOption;\r\n  initOpts: EChartsOption;\r\n  \r\n  chartOption: EChartsOption = {\r\n    grid: {\r\n      containLabel: true,\r\n      left: '5%',\r\n      right: '5%',\r\n      top: '2%',\r\n      bottom: '2%',\r\n    },\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'axis',\r\n      formatter: (params) => \r\n        `${params[0].data.name}: $${params[0].data.value.toLocaleString()}`,\r\n      axisPointer: {\r\n        type: 'shadow',\r\n      }\r\n    },\r\n    dataset: {\r\n      source: [],  // set in ngOnChanges\r\n    },\r\n    xAxis: {\r\n      position: 'top',\r\n      axisLabel: {\r\n        formatter: (value: number) => \r\n          getCompactFormattedCurrency(value),\r\n      },\r\n    },\r\n    yAxis: {\r\n      type: 'category',\r\n      axisTick: {\r\n        show: false\r\n      },\r\n    },\r\n    series: [{\r\n      type: 'bar',\r\n      name: 'raised-by-industry-bar',\r\n      encode: {\r\n        y: 'name',\r\n        x: 'value',\r\n        label: 'label',\r\n      },\r\n      label: {\r\n        show: true,\r\n        position: 'right',\r\n        formatter: (params) => \r\n          getCompactFormattedCurrency(params.data['value'], 1),\r\n      },\r\n      itemStyle: {\r\n        color: '#53AE79',\r\n      },\r\n      barCategoryGap: '120%',\r\n      barMinWidth: 16,\r\n    }],\r\n  }\r\n\r\n  constructor() {  }\r\n\r\n  ngOnChanges(): void { \r\n    this.setChartMergeOption();\r\n    this.setChartHeight();\r\n  }\r\n\r\n  onChartInit(ec: ECharts): void {\r\n    this.echartsInstance = ec;\r\n  }\r\n\r\n  setChartMergeOption(): void {\r\n    this.mergeOption = {\r\n      dataset: {\r\n        source: this.raisedByIndustries,\r\n      }\r\n    };\r\n  }\r\n\r\n  setChartHeight(): void {\r\n    const perItemHeight = 35;\r\n    const topOffset = 80;\r\n    const itemCount = this.raisedByIndustries.length;\r\n\r\n    if (this.dataRowsCount === itemCount) return;\r\n\r\n    const height = itemCount * perItemHeight + topOffset;\r\n\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.resize({ height });\r\n    } else {\r\n      this.initOpts = { height };\r\n    }\r\n\r\n    this.dataRowsCount = itemCount;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".raised-by-industry-chart {\r\n  min-width: 100px;\r\n  width: 100%;\r\n  min-height: 400px;\r\n  height: 100%;\r\n}\r\n",
                    "styleUrl": "./raised-by-industry-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 81
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\r\n<div class=\"raised-by-industry-chart\" echarts \r\n  [options]=\"chartOption\"\r\n  [initOpts]=\"initOpts\" \r\n  (chartInit)=\"onChartInit($event)\"\r\n  [merge]=\"mergeOption\" \r\n></div>\r\n"
        },
        {
            "name": "RaisedByLocationBarComponent",
            "id": "component-RaisedByLocationBarComponent-a2113c6c977f861918d43b8ac46d9376343d865a2bd18e558140ea06499fa79daae83b250623227bdcd056211b1ca8e8250086d36d975d6e5accced280aebdcc",
            "file": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-raised-by-location-bar",
            "styleUrls": [
                "./raised-by-location-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./raised-by-location-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "raisedByLocations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "RaisedByLocations",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'axis',\r\n      formatter: (params) => (params[0].data.value === null) ? '' : \r\n          `${params[0].data.name}: $${params[0].data.value.toLocaleString()}`,\r\n      axisPointer: {\r\n        type: 'shadow',\r\n      }\r\n    },\r\n    xAxis: {\r\n      show: true,\r\n      type: 'category',\r\n      axisTick: {\r\n        show: false\r\n      },\r\n      axisLabel: {\r\n        interval: 0,\r\n      },\r\n      // data: [], // set in ngOnChanges\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      axisLabel: {\r\n        formatter: (value: number) => getCompactFormattedCurrency(value, 1),\r\n      },\r\n    },\r\n    series: [{\r\n      type: 'bar',\r\n      name: 'raised-by-location-bar',\r\n      label: {\r\n        show: true,\r\n        position: 'top',\r\n        formatter: (params) => getCompactFormattedCurrency(params.data['value'], 1),\r\n        fontWeight: 'bold',\r\n      },\r\n      barCategoryGap: '0%',\r\n      // data: [], // set in ngOnChanges\r\n    }],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "echartsInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ECharts",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "locations",
                    "defaultValue": "[\r\n    { name: 'In District',  color: '#71B3FF' },\r\n    { name: 'In City',      color: '#3392FF' },\r\n    { name: 'In County',    color: '#337FD6' },\r\n    { name: 'In State',     color: '#336399' },\r\n    // The element below is to create a space between\r\n    //  the 'In State' and 'Out of State' bars\r\n    { name: '',     color: '' }, \r\n    { name: 'Out of State', color: '#BFD63B'},\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "mergeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "buildChartData",
                    "args": [
                        {
                            "name": "raisedRegions",
                            "type": "RaisedByLocations",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "object[]",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "raisedRegions",
                            "type": "RaisedByLocations",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChartInit",
                    "args": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setChartData",
                    "args": [
                        {
                            "name": "chartData",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "chartData",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { EChartsOption, ECharts } from 'echarts';\r\n\r\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\r\n\r\nexport interface RaisedByLocations {\r\n  inDistrict: number,\r\n  inCity: number,\r\n  inCounty: number,\r\n  inState: number,\r\n  outState: number,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-raised-by-location-bar',\r\n  templateUrl: './raised-by-location-bar.component.html',\r\n  styleUrls: ['./raised-by-location-bar.component.scss']\r\n})\r\nexport class RaisedByLocationBarComponent implements OnChanges {\r\n  @Input() raisedByLocations: RaisedByLocations;\r\n  \r\n  echartsInstance: ECharts;\r\n  mergeOptions: EChartsOption;\r\n\r\n  locations = [\r\n    { name: 'In District',  color: '#71B3FF' },\r\n    { name: 'In City',      color: '#3392FF' },\r\n    { name: 'In County',    color: '#337FD6' },\r\n    { name: 'In State',     color: '#336399' },\r\n    // The element below is to create a space between\r\n    //  the 'In State' and 'Out of State' bars\r\n    { name: '',     color: '' }, \r\n    { name: 'Out of State', color: '#BFD63B'},\r\n  ];\r\n\r\n  chartOption: EChartsOption = {\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'axis',\r\n      formatter: (params) => (params[0].data.value === null) ? '' : \r\n          `${params[0].data.name}: $${params[0].data.value.toLocaleString()}`,\r\n      axisPointer: {\r\n        type: 'shadow',\r\n      }\r\n    },\r\n    xAxis: {\r\n      show: true,\r\n      type: 'category',\r\n      axisTick: {\r\n        show: false\r\n      },\r\n      axisLabel: {\r\n        interval: 0,\r\n      },\r\n      // data: [], // set in ngOnChanges\r\n    },\r\n    yAxis: {\r\n      type: 'value',\r\n      axisLabel: {\r\n        formatter: (value: number) => getCompactFormattedCurrency(value, 1),\r\n      },\r\n    },\r\n    series: [{\r\n      type: 'bar',\r\n      name: 'raised-by-location-bar',\r\n      label: {\r\n        show: true,\r\n        position: 'top',\r\n        formatter: (params) => getCompactFormattedCurrency(params.data['value'], 1),\r\n        fontWeight: 'bold',\r\n      },\r\n      barCategoryGap: '0%',\r\n      // data: [], // set in ngOnChanges\r\n    }],\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(): void { \r\n    const chartData = this.buildChartData(this.raisedByLocations)\r\n\r\n    this.setChartData(chartData);\r\n  }\r\n\r\n  onChartInit(ec: ECharts): void {\r\n    this.echartsInstance = ec;\r\n  }\r\n\r\n\r\n  buildChartData(raisedRegions: RaisedByLocations): object[] {\r\n\r\n    const chartData = [\r\n      { value: raisedRegions['inDistrict'] },\r\n      { value: raisedRegions['inCity'] },\r\n      { value: raisedRegions['inCounty'] },\r\n      { value: raisedRegions['inState'] },\r\n      { value: null },\r\n      { value: raisedRegions['outState'] },\r\n    ];\r\n\r\n    return chartData.map( (item, index) => ({\r\n      ...item,\r\n      itemStyle: { color: this.locations[index].color, },\r\n      name: this.locations[index].name,\r\n    }));\r\n\r\n  }\r\n\r\n  setChartData(chartData: object): void {\r\n    const xAxisData  = this.locations\r\n      .map( location => location.name);\r\n\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.setOption({\r\n        series: [{\r\n          name: 'raised-by-location-bar',\r\n          data: chartData,\r\n        }],\r\n        xAxis: {\r\n          data: xAxisData,\r\n        },\r\n      });\r\n    } else {\r\n      this.chartOption.series[0].data = chartData;\r\n      this.chartOption.xAxis['data'] = xAxisData;\r\n    }\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".raised-by-location-chart {\r\n  height: 400px;\r\n}\r\n",
                    "styleUrl": "./raised-by-location-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 76
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\n<div class=\"raised-by-location-chart\" echarts \n  [options]=\"chartOption\"\n  (chartInit)=\"onChartInit($event)\"\n  [merge]=\"mergeOptions\" \n></div>\n"
        },
        {
            "name": "RaisedByOutsideMoneyBarComponent",
            "id": "component-RaisedByOutsideMoneyBarComponent-afa232d158e8fade79531205f16f79eeaba12b87b7b40bdbcbd5bb1e6b4dd378a93f24d547b275f44728c2fd5b724859e16f8467d6019659510f1065093416ee",
            "file": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-raised-by-outside-money-bar",
            "styleUrls": [
                "./raised-by-outside-money-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./raised-by-outside-money-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "raisedByOutsideMoney",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "RaisedByOutsideMoney",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\n    tooltip: {\n      show: true,\n      trigger: 'item',\n      formatter: (params) =>  \n        `${params.data.name}: $${Math.abs(params.data.value).toLocaleString()}`,\n      axisPointer: {\n        type: 'shadow',\n      }\n    },\n    xAxis: {\n      type: 'value',\n      axisLabel: {\n        formatter: (value: number) => \n          getCompactFormattedCurrency(Math.abs(value)),\n      },\n    },\n    yAxis: {\n      type: 'category',\n    },\n    series: [\n      {\n        type: 'bar',\n        name: 'raised-by-outside-money-in-support',\n        stack: 'outside-money',\n        label: {\n          show: true,\n          position: 'right',\n          formatter: (params) => getCompactFormattedCurrency(\n            Math.abs(params.data['value'])\n          ),\n          fontWeight: 'bold',\n        },\n        itemStyle: { color: '#3392FF' },\n        // data: [], // set in ngOnChanges\n      },\n      {\n        type: 'bar',\n        name: 'raised-by-outside-money-in-opposition',\n        stack: 'outside-money',\n        label: {\n          show: true,\n          position: 'left',\n          formatter: (params) => getCompactFormattedCurrency(\n            Math.abs(params.data['value'])\n          ),\n          fontWeight: 'bold',\n        },\n        itemStyle: { color: '#6964AD' },\n        // data: [], // set in ngOnChanges\n      },\n    ],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "echartsInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ECharts",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "mergeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChartInit",
                    "args": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setChartData",
                    "args": [
                        {
                            "name": "chartData",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "chartData",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nimport { EChartsOption, ECharts } from 'echarts';\n\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\n\nexport interface RaisedByOutsideMoney {\n  inOpposition: number,\n  inSupport: number,\n}\n\n@Component({\n  selector: 'app-raised-by-outside-money-bar',\n  templateUrl: './raised-by-outside-money-bar.component.html',\n  styleUrls: ['./raised-by-outside-money-bar.component.scss']\n})\nexport class RaisedByOutsideMoneyBarComponent implements OnChanges {\n  @Input() raisedByOutsideMoney: RaisedByOutsideMoney;\n\n  echartsInstance: ECharts;\n  mergeOptions: EChartsOption;\n\n  chartOption: EChartsOption = {\n    tooltip: {\n      show: true,\n      trigger: 'item',\n      formatter: (params) =>  \n        `${params.data.name}: $${Math.abs(params.data.value).toLocaleString()}`,\n      axisPointer: {\n        type: 'shadow',\n      }\n    },\n    xAxis: {\n      type: 'value',\n      axisLabel: {\n        formatter: (value: number) => \n          getCompactFormattedCurrency(Math.abs(value)),\n      },\n    },\n    yAxis: {\n      type: 'category',\n    },\n    series: [\n      {\n        type: 'bar',\n        name: 'raised-by-outside-money-in-support',\n        stack: 'outside-money',\n        label: {\n          show: true,\n          position: 'right',\n          formatter: (params) => getCompactFormattedCurrency(\n            Math.abs(params.data['value'])\n          ),\n          fontWeight: 'bold',\n        },\n        itemStyle: { color: '#3392FF' },\n        // data: [], // set in ngOnChanges\n      },\n      {\n        type: 'bar',\n        name: 'raised-by-outside-money-in-opposition',\n        stack: 'outside-money',\n        label: {\n          show: true,\n          position: 'left',\n          formatter: (params) => getCompactFormattedCurrency(\n            Math.abs(params.data['value'])\n          ),\n          fontWeight: 'bold',\n        },\n        itemStyle: { color: '#6964AD' },\n        // data: [], // set in ngOnChanges\n      },\n    ],\n  }\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.setChartData(this.raisedByOutsideMoney);\n  }\n\n  onChartInit(ec: ECharts): void {\n    this.echartsInstance = ec;\n  }\n\n  setChartData(chartData: object): void {\n\n    let series = [\n      {\n        name: 'raised-by-outside-money-in-support',\n        data:[ {\n          name: 'Expenditures in Support',\n          value: chartData['inSupport'],\n        }]\n      },\n      {\n        name: 'raised-by-outside-money-in-opposition',\n        data: [{\n          name: 'Expenditures in Opposition',\n          value: -1 * chartData['inOpposition']\n        }],\n      },\n    ]\n\n    if (this.echartsInstance) {\n      this.echartsInstance.setOption({ series });\n    } else {\n      this.chartOption.series[0].data = series[0].data;\n      this.chartOption.series[1].data = series[1].data;\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".raised-by-outside-money-chart {\r\n  height: 300px;\r\n}\r\n",
                    "styleUrl": "./raised-by-outside-money-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 75
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\n<div class=\"raised-by-outside-money-chart\" echarts \n  [options]=\"chartOption\"\n  (chartInit)=\"onChartInit($event)\"\n  [merge]=\"mergeOptions\" \n></div>\n"
        },
        {
            "name": "RaisedInVsOutDonutComponent",
            "id": "component-RaisedInVsOutDonutComponent-c671d6db7c64a23eee1413085b81f0b39a5e546c6c77af9d6da755c1b97411f944a1fbd0d7efc9343f82094e360431d3cd0424021f98947a25ae400a34258237",
            "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-raised-in-vs-out-donut",
            "styleUrls": [
                "./raised-in-vs-out-donut.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./raised-in-vs-out-donut.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inside",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "outside",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'item',\r\n      formatter: (params) => `Raised ${params.name}:\\n $${(+params.value).toLocaleString()}`,\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        clockwise: false,\r\n        label: {    \r\n          formatter: (params) => \r\n              `{a|${params.data['name']}}\\n` +\r\n              `{b|${getFormattedCurrency(+params.data['value'], 1)}}`,\r\n          rich: {\r\n            a: {\r\n              fontSize: '1em',\r\n            },\r\n            b: {\r\n              fontSize: '1.5em',\r\n              fontWeight: 'bold',\r\n              padding: [10, 0, 0, 0],\r\n            },\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: false\r\n        },\r\n        labelLayout: {\r\n          moveOverlap: 'shiftY',\r\n        },\r\n        emphasis: {\r\n          itemStyle: { opacity: .5, },\r\n        },        \r\n        radius: ['50%', '90%'],\r\n      },\r\n    ],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "mergeOption",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setChartMergeOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { EChartsOption } from 'echarts';\r\nimport { getFormattedCurrency } from '../../shared/number-formatter'\r\n\r\n@Component({\r\n  selector: 'app-raised-in-vs-out-donut',\r\n  templateUrl: './raised-in-vs-out-donut.component.html',\r\n  styleUrls: ['./raised-in-vs-out-donut.component.scss']\r\n})\r\nexport class RaisedInVsOutDonutComponent implements OnChanges {\r\n  @Input() inside: number;\r\n  @Input() outside: number;\r\n\r\n  mergeOption: EChartsOption = {};\r\n\r\n  chartOption: EChartsOption = {\r\n    tooltip: {\r\n      show: true,\r\n      trigger: 'item',\r\n      formatter: (params) => `Raised ${params.name}:\\n $${(+params.value).toLocaleString()}`,\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        clockwise: false,\r\n        label: {    \r\n          formatter: (params) => \r\n              `{a|${params.data['name']}}\\n` +\r\n              `{b|${getFormattedCurrency(+params.data['value'], 1)}}`,\r\n          rich: {\r\n            a: {\r\n              fontSize: '1em',\r\n            },\r\n            b: {\r\n              fontSize: '1.5em',\r\n              fontWeight: 'bold',\r\n              padding: [10, 0, 0, 0],\r\n            },\r\n          },\r\n        },\r\n        labelLine: {\r\n          show: false\r\n        },\r\n        labelLayout: {\r\n          moveOverlap: 'shiftY',\r\n        },\r\n        emphasis: {\r\n          itemStyle: { opacity: .5, },\r\n        },        \r\n        radius: ['50%', '90%'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(): void {\r\n    this.setChartMergeOption();\r\n  }\r\n\r\n  setChartMergeOption(): void {\r\n   \r\n    this.mergeOption = {\r\n      series: [{\r\n        data: [\r\n          {\r\n            name: 'Inside',\r\n            value: this.inside ? this.inside : 0,\r\n            color: '#3392ff',\r\n            itemStyle: { color: '#3392ff' },\r\n            label: { position: 'center', }\r\n          },\r\n          {\r\n            name: 'Outside',\r\n            value: this.outside ? this.outside : 0,\r\n            color: '#bfd63b',\r\n            itemStyle: { color: '#bfd63b' },\r\n            label: { \r\n              position: 'inner', \r\n              textBorderColor: '#bfd63b',\r\n              textBorderWidth: 2,\r\n              textShadowColor: '#bfd63b',\r\n              textShadowBlur: 8,\r\n            }\r\n          },\r\n        ],\r\n      }]\r\n    };\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.raised-in-vs-out-chart {\r\n    min-height: 200px;\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n",
                    "styleUrl": "./raised-in-vs-out-donut.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 54
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\n<div class=\"raised-in-vs-out-chart\" echarts \n  [options]=\"chartOption\"\n  [merge]=\"mergeOption\"\n></div>\n"
        },
        {
            "name": "RaisedVsSpentBarComponent",
            "id": "component-RaisedVsSpentBarComponent-706befb7d472dfe3fae48aa46cb982e079c4e1124c5ebeaf786b75520e0879d5c5933db5007179f30ed9bb1e5e7e3c395b37df207de868ef61acb8f5a535193a",
            "file": "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-raised-vs-spent-bar",
            "styleUrls": [
                "./raised-vs-spent-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./raised-vs-spent-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "spent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\n    grid: {\n      left: 10,\n      right: 10,\n      bottom: 10,\n    },\n    tooltip: {\n      show: true,\n       trigger: 'item',\n      formatter: (params) => \n        `${params.name}: $${params.value.toLocaleString()}`,\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        show: false\n      },\n    },\n    yAxis: {\n      show: false,\n      type: 'value',\n    },\n    series: [{\n      type: 'bar',\n      label: {\n        show: true,\n        position: 'top',\n        formatter: (params) => \n          `{a|${params['name']}} \\n {b|${getCompactFormattedCurrency(+params['value'], 1)}}`,\n        align: 'center',\n        rich: {\n          a: {\n            fontSize: 14,\n          },\n          b: {\n            fontSize: 20,\n            fontWeight: 'bold',\n            padding: [5, 0, 5, 0],\n          },\n        },\n      },\n      barMinWidth: 50,\n      barCategoryGap: '50px',\n    }],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "mergeOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setChartMergeOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nimport { EChartsOption } from 'echarts';\n\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\n\n@Component({\n  selector: 'app-raised-vs-spent-bar',\n  templateUrl: './raised-vs-spent-bar.component.html',\n  styleUrls: ['./raised-vs-spent-bar.component.scss']\n})\nexport class RaisedVsSpentBarComponent implements OnChanges {\n  @Input() raised: number;\n  @Input() spent: number;\n\n  mergeOption: EChartsOption;\n\n  chartOption: EChartsOption = {\n    grid: {\n      left: 10,\n      right: 10,\n      bottom: 10,\n    },\n    tooltip: {\n      show: true,\n       trigger: 'item',\n      formatter: (params) => \n        `${params.name}: $${params.value.toLocaleString()}`,\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        show: false\n      },\n    },\n    yAxis: {\n      show: false,\n      type: 'value',\n    },\n    series: [{\n      type: 'bar',\n      label: {\n        show: true,\n        position: 'top',\n        formatter: (params) => \n          `{a|${params['name']}} \\n {b|${getCompactFormattedCurrency(+params['value'], 1)}}`,\n        align: 'center',\n        rich: {\n          a: {\n            fontSize: 14,\n          },\n          b: {\n            fontSize: 20,\n            fontWeight: 'bold',\n            padding: [5, 0, 5, 0],\n          },\n        },\n      },\n      barMinWidth: 50,\n      barCategoryGap: '50px',\n    }],\n  };\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.setChartMergeOption();\n  }\n\n  setChartMergeOption(): void {\n\n    const items = [\n      {\n        name: 'Raised',\n        value: this.raised,\n        color: '#289a58',\n      },\n      {\n        name: 'Spent',\n        value: this.spent,\n        color: '#ff2c19',\n      },\n    ]; \n\n    this.mergeOption = {\n      xAxis: {\n        data: items.map( items => items.name ),\n      },\n      series: [{\n        data: items.map( (item) => ({\n          ...item,\n          itemStyle: { color: item['color'], },\n        }))\n      }],\n    };\n\n  }\n  \n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.raised-vs-spent-chart {\r\n  height: 100%;\r\n  min-height: 150px;\r\n  width: 100%;\r\n  min-width: 150px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n",
                    "styleUrl": "./raised-vs-spent-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 65
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\n<div class=\"raised-vs-spent-chart\" echarts \n  [options]=\"chartOption\"\n  [merge]=\"mergeOption\" \n></div>\n"
        },
        {
            "name": "RaisedVsSpentBarComponent",
            "id": "component-RaisedVsSpentBarComponent-6b5ff9783a8c4004e713cf3586a0336c102b0609ead9b3a0710a24b8fd0192484ec036cf1d8acdee054fab84dc18eae2c9bc8d7f27a5ee2ac361479388c343f8-1",
            "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "raised-vs-spent-bar",
            "styleUrls": [
                "./raised-vs-spent-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./raised-vs-spent-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "raised",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "spent",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\r\n    grid: {\r\n      left: 10,\r\n      right: 10,\r\n      bottom: 10,\r\n    },\r\n    tooltip: {\r\n      show: true,\r\n       trigger: 'item',\r\n      formatter: (params) => \r\n        `${params.name}: $${params.value.toLocaleString()}`,\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      axisTick: {\r\n        show: false\r\n      },\r\n      axisLabel: {\r\n        show: false\r\n      },\r\n    },\r\n    yAxis: {\r\n      show: false,\r\n      type: 'value',\r\n    },\r\n    series: [{\r\n      type: 'bar',\r\n      label: {\r\n        show: true,\r\n        position: 'top',\r\n        formatter: (params) => \r\n          `{a|${params['name']}} \\n {b|${getCompactFormattedCurrency(+params['value'], 1)}}`,\r\n        align: 'center',\r\n        rich: {\r\n          a: {\r\n            fontSize: 14,\r\n          },\r\n          b: {\r\n            fontSize: 20,\r\n            fontWeight: 'bold',\r\n            padding: [5, 0, 5, 0],\r\n          },\r\n        },\r\n      },\r\n      barMinWidth: 50,\r\n      barCategoryGap: '50px',\r\n    }],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "mergeOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setChartMergeOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\nimport { EChartsOption } from 'echarts';\r\n\r\nimport { getCompactFormattedCurrency } from '../shared/number-formatter'\r\n\r\n@Component({\r\n  selector: 'raised-vs-spent-bar',\r\n  templateUrl: './raised-vs-spent-bar.component.html',\r\n  styleUrls: ['./raised-vs-spent-bar.component.scss']\r\n})\r\nexport class RaisedVsSpentBarComponent implements OnChanges {\r\n  @Input() raised: number = 0;\r\n  @Input() spent: number = 0;\r\n\r\n  mergeOption: EChartsOption;\r\n\r\n  chartOption: EChartsOption = {\r\n    grid: {\r\n      left: 10,\r\n      right: 10,\r\n      bottom: 10,\r\n    },\r\n    tooltip: {\r\n      show: true,\r\n       trigger: 'item',\r\n      formatter: (params) => \r\n        `${params.name}: $${params.value.toLocaleString()}`,\r\n    },\r\n    xAxis: {\r\n      type: 'category',\r\n      axisTick: {\r\n        show: false\r\n      },\r\n      axisLabel: {\r\n        show: false\r\n      },\r\n    },\r\n    yAxis: {\r\n      show: false,\r\n      type: 'value',\r\n    },\r\n    series: [{\r\n      type: 'bar',\r\n      label: {\r\n        show: true,\r\n        position: 'top',\r\n        formatter: (params) => \r\n          `{a|${params['name']}} \\n {b|${getCompactFormattedCurrency(+params['value'], 1)}}`,\r\n        align: 'center',\r\n        rich: {\r\n          a: {\r\n            fontSize: 14,\r\n          },\r\n          b: {\r\n            fontSize: 20,\r\n            fontWeight: 'bold',\r\n            padding: [5, 0, 5, 0],\r\n          },\r\n        },\r\n      },\r\n      barMinWidth: 50,\r\n      barCategoryGap: '50px',\r\n    }],\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['raised'] || changes['spent']) {\r\n      this.setChartMergeOption();\r\n    }\r\n  }\r\n\r\n  setChartMergeOption(): void {\r\n\r\n    const items = [\r\n      {\r\n        name: 'Raised',\r\n        value: this.raised ? this.raised : 0,\r\n        color: '#289a58',\r\n      },\r\n      {\r\n        name: 'Spent',\r\n        value: this.spent ? this.spent : 0,\r\n        color: '#ff2c19',\r\n      },\r\n    ]; \r\n\r\n    this.mergeOption = {\r\n      xAxis: {\r\n        data: items.map( items => items.name ),\r\n      },\r\n      series: [{\r\n        data: items.map( (item) => ({\r\n          ...item,\r\n          itemStyle: { color: item['color'], },\r\n        }))\r\n      }],\r\n    };\r\n\r\n  }\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.raised-vs-spent-chart {\r\n  height: 100%;\r\n  min-height: 150px;\r\n  width: 100%;\r\n  min-width: 150px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n",
                    "styleUrl": "./raised-vs-spent-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 65
            },
            "implements": [
                "OnChanges"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "RaisedVsSpentBarComponent-1",
            "templateData": "\r\n<div class=\"raised-vs-spent-chart\" echarts \r\n  [options]=\"chartOption\"\r\n  [merge]=\"mergeOption\" \r\n></div>\r\n"
        },
        {
            "name": "RaisedVsSpentGQLComponent",
            "id": "component-RaisedVsSpentGQLComponent-622dae12f66b5e74d2c4e18b606679e6c21d827ea256c632fc76d7ba30754e67e1603720de05146ba67143a54578bbe28891ba3082580ba99bd1708120dfd3a2",
            "file": "src/app/graphql/raised-vs-spent-gql/raised-vs-spent-gql.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "gql-raised-vs-spent",
            "styleUrls": [],
            "styles": [],
            "template": "<raised-vs-spent-bar [raised]=\"raised\" [spent]=\"spent\"></raised-vs-spent-bar>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "candidateId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "raised",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "spent",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { RaisedVsSpentGQL, RaisedVsSpent } from './raised-vs-spent-gql.query';\r\n\r\n@Component({\r\n  selector: 'gql-raised-vs-spent',\r\n  template: `\r\n    <raised-vs-spent-bar [raised]=\"raised\" [spent]=\"spent\"></raised-vs-spent-bar>\r\n  `,\r\n})\r\nexport class RaisedVsSpentGQLComponent implements OnInit {\r\n  @Input() candidateId: string;\r\n\r\n  raised = 0;\r\n  spent = 0;\r\n\r\n  constructor(private raisedVsSpentGQL: RaisedVsSpentGQL) {}\r\n\r\n  ngOnInit() {\r\n\r\n    this.raisedVsSpentGQL.watch({\r\n      candidateId: this.candidateId,\r\n    }, {\r\n      // errorPolicy: 'all',\r\n    }).valueChanges.subscribe( (result: any) => {\r\n      const raisedVsSpent: RaisedVsSpent = result.data;\r\n\r\n      if (raisedVsSpent.candidate) {\r\n        this.raised = raisedVsSpent.candidate.committee.contributions.sum;\r\n        this.spent = raisedVsSpent.candidate.committee.expenses.sum;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "raisedVsSpentGQL",
                        "type": "RaisedVsSpentGQL",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "raisedVsSpentGQL",
                        "type": "RaisedVsSpentGQL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "SideMenuComponent",
            "id": "component-SideMenuComponent-774441b708d54682f6db96606a0a6995567b917b9b4ef0f8343f75ff6a64a0a63048690eec3518d150ff944267b04504c86850690e5d044cc42f776469646f78",
            "file": "src/app/navigation-menu/components/side-menu/side-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "side-menu",
            "styleUrls": [
                "./side-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeCandidate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "activeDistrict",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "activeOffice",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "candidates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Candidate[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "detailsActive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "electionYear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "linkPrefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "menuDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "buildMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCandidateItem",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "MenuItem",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDistinctSeats",
                    "args": [
                        {
                            "name": "candidates",
                            "type": "Candidate[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidates",
                            "type": "Candidate[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getItems",
                    "args": [
                        {
                            "name": "officeTitle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "candidates",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "officeTitle",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "candidates",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRouterLink",
                    "args": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidate",
                            "type": "Candidate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSeeAllCandidatesItem",
                    "args": [
                        {
                            "name": "officeTitle",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "district",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "{ label: string; icon: string; routerLink: string; routerLinkActiveOptions: { exact: boolean; }; }",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "officeTitle",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "district",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "hasSeats",
                    "args": [
                        {
                            "name": "candidates",
                            "type": "Candidate[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "candidates",
                            "type": "Candidate[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setActiveStatus",
                    "args": [
                        {
                            "name": "fragments",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fragments",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackDetailsActive",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 214,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateExpandedStatus",
                    "args": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.items"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 177,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.items",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateMenuRouterLinks",
                    "args": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.items"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 190,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "this.items",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { CandidateService } from 'src/app/store/services/candidate.service';\r\nimport { Candidate } from 'src/app/store/interfaces/candidate';\r\n\r\nimport { MenuItem } from 'primeng/api';\r\nimport { filter } from 'rxjs/operators';\r\nimport { YearService } from 'src/app/store/services/year.service';\r\n\r\n@Component({\r\n  selector: 'side-menu',\r\n  templateUrl: './side-menu.component.html',\r\n  styleUrls: ['./side-menu.component.scss'],\r\n})\r\nexport class SideMenuComponent implements OnInit {\r\n  items: MenuItem[];\r\n  candidates: Candidate[];\r\n  electionYear: string;\r\n  detailsActive: boolean;\r\n  activeOffice: string;\r\n  activeDistrict: string;\r\n  activeCandidate: string;\r\n\r\n  linkPrefix: string;\r\n  menuDisabled: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private candidateService: CandidateService,\r\n    private yearService: YearService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.yearService.electionYearChanged$.subscribe(year => {\r\n      if (year === '') {\r\n        this.electionYear = '-';\r\n        this.menuDisabled = true;\r\n      } else {\r\n        this.electionYear = year;\r\n        this.linkPrefix = `/year/${this.electionYear}/office/`;\r\n        this.menuDisabled = false;\r\n      }\r\n\r\n      this.buildMenu();\r\n      this.trackDetailsActive();\r\n    });\r\n  }\r\n\r\n  getDistinctSeats(candidates: Candidate[]): string[] {\r\n    const seats: string[] = candidates.map(candidate => candidate.district).sort();\r\n    return [... new Set(seats)];\r\n  }\r\n\r\n  hasSeats(candidates: Candidate[]): boolean {\r\n    return candidates.some(candidate => candidate.district !== null);\r\n  }\r\n\r\n  getRouterLink(candidate: Candidate): string {\r\n    const linkPrefix = this.linkPrefix + candidate.office.toLowerCase().split(' ').join('-');\r\n    const linkDistrict =  candidate.district \r\n      ? `/${candidate.district}`\r\n      : `/0`;\r\n    const linkSuffix = this.detailsActive ? `/details` : ``;\r\n    return `${linkPrefix}${linkDistrict}/${candidate.id}${linkSuffix}`;\r\n  }\r\n\r\n  getCandidateItem(candidate: Candidate): MenuItem {\r\n    return {\r\n      id: candidate.id,\r\n      label: candidate.full_name,\r\n      icon: 'pi pi-user',\r\n      routerLinkActiveOptions: { exact:true },\r\n      routerLink: this.getRouterLink(candidate),\r\n    }\r\n  }\r\n\r\n  getSeeAllCandidatesItem(officeTitle: string, district: string = null) {\r\n    const linkPrefix = this.linkPrefix +  `${officeTitle.toLowerCase().split(' ').join('-')}`;\r\n\r\n    const linkDistrict =  district \r\n      ? `/${district}`\r\n      : `/0`;\r\n\r\n    return {\r\n      label: 'See All ',\r\n      icon: 'pi pi-users',\r\n      routerLink: `${linkPrefix}${linkDistrict}`,\r\n      routerLinkActiveOptions: { exact:true },     \r\n    }\r\n  }\r\n\r\n  getItems(officeTitle, candidates) {\r\n    let candidatesForOffice = candidates\r\n      .filter(candidate => candidate.office === officeTitle);\r\n\r\n    if (candidatesForOffice.length < 1) {\r\n      return [];\r\n    }\r\n\r\n    const hasSeats = this.hasSeats(candidatesForOffice);\r\n\r\n    if (hasSeats) {\r\n      const distinctSeats = this.getDistinctSeats(candidatesForOffice);\r\n\r\n      return distinctSeats.map(seat => {\r\n        const seeAllCandidatesItem = this.getSeeAllCandidatesItem(officeTitle, seat);\r\n        const candidatesMenuItems = candidatesForOffice\r\n          .filter(candidate => candidate.district === seat)\r\n          .map(candidate => this.getCandidateItem(candidate));\r\n\r\n        return {\r\n          id: seat,\r\n          label: `District ${seat}`,\r\n          icon: 'fa fa-fw fa-map-marker',\r\n          items: [ seeAllCandidatesItem, ...candidatesMenuItems, ],\r\n        }\r\n      });\r\n\r\n    } else {\r\n      const seeAllCandidatesItem = this.getSeeAllCandidatesItem(officeTitle);\r\n      const candidatesMenuItems = candidatesForOffice.map(candidate => this.getCandidateItem(candidate))\r\n\r\n      return [ seeAllCandidatesItem, ...candidatesMenuItems, ];\r\n    }\r\n  }\r\n\r\n  buildMenu() {\r\n    const items_template = [\r\n      {\r\n        office_title: 'Mayor',\r\n        icon: 'fa fa-fw fa-university',\r\n      },\r\n      {\r\n        office_title: 'City Council',\r\n        icon: 'fa fa-fw fa-map',\r\n      },\r\n      {\r\n        office_title: 'City Attorney',\r\n        icon: 'fa fa-fw fa-balance-scale',\r\n      },\r\n    ];\r\n\r\n    this.candidateService\r\n      .getCandidates({ year: this.electionYear })\r\n      .subscribe(candidates => {\r\n        this.candidates = candidates;\r\n\r\n        this.items = items_template.map( item => {\r\n          const newItem = {};\r\n          newItem['id'] = item['office_title'].toLowerCase().split(' ').join('-');\r\n          newItem['label'] = item['office_title'].toUpperCase();\r\n\r\n          const officeItems = this.getItems(item.office_title, this.candidates);\r\n          newItem['items'] = officeItems;\r\n\r\n          if (this.menuDisabled || officeItems.length < 1) {\r\n            newItem['expanded'] = false;\r\n            newItem['disabled'] = true;\r\n          }\r\n\r\n          return newItem;\r\n        })\r\n\r\n        this.updateExpandedStatus();\r\n    })\r\n  }\r\n\r\n  setActiveStatus(fragments: string[]) {\r\n    let fragmentIndex = fragments.indexOf('office');\r\n    if (fragmentIndex >= 0 ) {\r\n      this.activeOffice = fragments[++fragmentIndex];\r\n      this.activeDistrict = fragments[++fragmentIndex];\r\n    }\r\n  }\r\n\r\n  updateExpandedStatus(items = this.items) {\r\n    if (!items) { return; }\r\n\r\n    items.forEach( item => {\r\n      if (item.id === this.activeOffice || item.id === this.activeDistrict) {\r\n        item.expanded = true;\r\n      }\r\n      if (item.items) {\r\n        this.updateExpandedStatus(item.items);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateMenuRouterLinks(items = this.items) {\r\n    if (!items) { return; }\r\n\r\n    items.forEach( item => {\r\n      if (item.id === this.activeOffice) {\r\n        item.expanded = true;\r\n      }\r\n\r\n      if (item.items) {\r\n        this.updateMenuRouterLinks(item.items);\r\n      } else {\r\n        if (item.hasOwnProperty('routerLink')) {\r\n          const candidate = this.candidates\r\n            .find(candidate => candidate.id === item.id);\r\n\r\n          if (candidate) {\r\n            item.routerLink = this.getRouterLink(candidate);\r\n          }\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  trackDetailsActive() {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(event => {\r\n        const urlFragments = event['url'].split('/').filter( fragment => fragment);\r\n        this.setActiveStatus(urlFragments);\r\n        \r\n        const detailsActive = event['url'].includes('/details')\r\n        if (this.detailsActive !== detailsActive) {\r\n          this.detailsActive = detailsActive;\r\n          this.updateMenuRouterLinks();\r\n        }\r\n\r\n        this.updateExpandedStatus();\r\n      });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n::ng-deep .p-panelmenu .p-menuitem-link-active {\r\n  background-color: #125db380;\r\n}\r\n\r\n::ng-deep .p-panelmenu .p-panelmenu-header {\r\n  :hover {\r\n\t  background-color: #3392ff !important;\r\n    color: white !important;\r\n  }\r\n  :focus {\r\n\t  background-color: #125DB3 !important;\r\n    color: white !important;\r\n  }\r\n}\r\n\r\n::ng-deep .p-panelmenu .p-menuitem-text {\r\n  font-family: Roboto,Helvetica Neue,sans-serif;\r\n  font-size: 15px;\r\n}\r\n",
                    "styleUrl": "./side-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "yearService",
                        "type": "YearService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "candidateService",
                        "type": "CandidateService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "yearService",
                        "type": "YearService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<election-year-selector></election-year-selector>\r\n<p-panelMenu [model]=\"items\" [style]=\"{'width':'200px'}\" [multiple]=\"false\" ></p-panelMenu>\r\n"
        },
        {
            "name": "SplashComponent",
            "id": "component-SplashComponent-a6f617d86c26a83aeb1fb28764643358f0d8c9e5172a38635b7fe5ab703b2d4ae8bec4d43b5c23c08168f1e987396515f2f27055c8c4fb6b94819703047ed291",
            "file": "src/app/public/components/splash/splash.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-splash",
            "styleUrls": [
                "./splash.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./splash.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-splash',\r\n  templateUrl: './splash.component.html',\r\n  styleUrls: ['./splash.component.scss']\r\n})\r\nexport class SplashComponent implements OnInit {\r\n\r\n  constructor(\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n.splashpage{\r\n  padding:20px 40px 0px 30px;\r\n}\r\n",
                    "styleUrl": "./splash.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"splashpage\">\r\n  <splash-hero></splash-hero>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n"
        },
        {
            "name": "SplashHeroComponent",
            "id": "component-SplashHeroComponent-792b1f8245f7f85f7151e68872a33cf1cd536758c272fc39315c33f977440c6d3451ae76b6c6ae8ec645929e036ad7a2763b1cd71821ec70e0c70ba767461e43",
            "file": "src/app/public/components/splash-hero/splash-hero.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "splash-hero",
            "styleUrls": [
                "./splash-hero.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./splash-hero.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faBinoculars",
                    "defaultValue": "faBinoculars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "faGavel",
                    "defaultValue": "faGavel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "faHandshake",
                    "defaultValue": "faHandshake",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "faMoneyBill",
                    "defaultValue": "faMoneyBill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { faBinoculars, faMoneyBill, faHandshake, faGavel } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'splash-hero',\r\n  templateUrl: './splash-hero.component.html',\r\n  styleUrls: ['./splash-hero.component.scss']\r\n})\r\nexport class SplashHeroComponent implements OnInit {\r\n  faBinoculars = faBinoculars; \r\n  faMoneyBill = faMoneyBill; \r\n  faHandshake = faHandshake; \r\n  faGavel = faGavel;\r\n    \r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n.whorwe {\r\n  background-image: url(\"../../../../assets/splash/bg-whorwe@2x.jpg\");\r\n  background-size: 100% 100%;\r\n  background-position: 50% 50%;\r\n  color:#fff;\r\n  margin: auto;\r\n  text-align:center;\r\n  padding:40px;\r\n  font-weight: 100;\r\n  box-shadow: $vvshadow;\r\n\r\n  .goals {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    align-content: center;\r\n    column-gap: 20px;\r\n    margin: 0px auto 40px auto;    \r\n\r\n    .bullet {\r\n      font-weight:bold;\r\n      font-size:14px;\r\n      max-width:170px;\r\n      margin: auto;\r\n    }\r\n\r\n    .bullet-icon > fa-icon {\r\n      display: block;\r\n      margin: 20px auto;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    font-size:18px;\r\n    font-weight:bold;\r\n    padding:0;\r\n    margin-top:0px;\r\n    margin-bottom:20px;\r\n    color:#fff;\r\n  }\r\n\r\n  .vv-description {\r\n    margin-top:0px;\r\n    margin-bottom:20px;\r\n    font-size:14px;\r\n    line-height: 1.4;\r\n    max-width: 600px;\r\n    margin-left:auto;\r\n    margin-right:auto; \r\n  }\r\n  \r\n  a {\r\n    color: $vvyellow;\r\n    text-decoration: none;    \r\n   \r\n    &:hover {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 1000px) {\r\n  .goals{\r\n    grid-template-columns: 1fr 1fr!important;\r\n    row-gap: 20px;\r\n    max-width:500px;   \r\n  }\r\n}\r\n\r\n@media only screen and (max-width: 400px) {\r\n  .goals{\r\n    grid-template-columns: 1fr!important;\r\n    row-gap: 20px;\r\n    max-width:500px;   \r\n  }\r\n}\r\n",
                    "styleUrl": "./splash-hero.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"whorwe\" [style.backgroundSize]=\"'cover'\">\r\n  <h1>Who's Behind the Voters' Voice Initiatives?</h1>\r\n  <p class=\"vv-description\">The Voters’ Voice Initiatives is a non-partisan coalition (including <a href=\"https://represent.us/\">Represent.us</a> and the \r\n    <a href=\"https://www.lwv.org/\">League of Women Voters</a>) working to give “We The People” a greater voice in our local government by:</p>\r\n    <div class=\"goals\">\r\n        <div>\r\n            <i class=\"bullet-icon\">\r\n                <fa-icon [icon]=\"faBinoculars\" size=\"2x\"></fa-icon>\r\n            </i>\r\n            <p class=\"bullet\">Improving Transparency in Campaign Finance</p>\r\n        </div>\r\n        <div>\r\n            <i class=\"bullet-icon\">\r\n                <fa-icon [icon]=\"faMoneyBill\" size=\"2x\"></fa-icon>\r\n            </i>\r\n            <p class=\"bullet\">Providing Full Disclosure on the Flow of Money</p>\r\n        </div>\r\n        <div>\r\n            <i class=\"bullet-icon\">\r\n                <fa-icon [icon]=\"faHandshake\" size=\"2x\"></fa-icon>\r\n            </i>\r\n            <p class=\"bullet\">Reducing the Potential for Corruption</p>\r\n        </div>\r\n        <div>\r\n            <i class=\"bullet-icon\">\r\n                <fa-icon [icon]=\"faGavel\" size=\"2x\"></fa-icon>\r\n            </i>\r\n            <p class=\"bullet\">Increasing Accountability in Government</p>\r\n        </div>\r\n    </div>\r\n  <a routerLink=\"/about\">Learn About Us</a>\r\n</div>\r\n"
        },
        {
            "name": "TopCategoriesTableComponent",
            "id": "component-TopCategoriesTableComponent-8e4483f03c0c5a61c31ec4f5d243e7da6d7ea9ef5165c5c4072495cb50e7dae80025b35a77b647a0ee742ce8b35a0d848ce77e55c33dd80d171356e3fcd818e6",
            "file": "src/app/shared/components/top-categories-table/top-categories-table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top-categories-table",
            "styleUrls": [
                "./top-categories-table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./top-categories-table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Category[]",
                    "decorators": []
                },
                {
                    "name": "categoryHighlighted",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "categoryHighlightedChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'value', 'percent']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "methodsClass": [
                {
                    "name": "hoveredRow",
                    "args": [
                        {
                            "name": "row",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "object",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTabletData",
                    "args": [
                        {
                            "name": "tableData",
                            "type": "object[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tableData",
                            "type": "object[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges, Output, EventEmitter, OnInit} from '@angular/core';\r\n\r\nimport { getCompactFormattedCurrency } from '../../number-formatter'\r\n\r\nexport interface Category {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  percent: number;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-top-categories-table',\r\n  templateUrl: './top-categories-table.component.html',\r\n  styleUrls: ['./top-categories-table.component.scss']\r\n})\r\nexport class TopCategoriesTableComponent implements OnChanges, OnInit {\r\n\r\n  @Input() categories: Category[];\r\n  @Input() categoryHighlighted: string;\r\n  @Output() categoryHighlightedChange = new EventEmitter<string>();\r\n    \r\n  dataSource;\r\n  displayedColumns: string[] = ['name', 'value', 'percent'];\r\n\r\n  constructor() { }\r\n  ngOnInit(): void {\r\n    let categories = this.categories;\r\n    this.setTabletData(categories);\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    let categories = this.categories;\r\n    this.setTabletData(categories);\r\n  }\r\n\r\n  setTabletData(tableData: object[]): void {\r\n\r\n    this.dataSource = tableData.map( (row) => ({\r\n        ...row,\r\n        value: getCompactFormattedCurrency(row['value']),\r\n        boxShadowStyle: `10px 0px 0px 0px ${row['color']} inset`,\r\n        percent: (row['percent']/100)\r\n          .toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 1 }),\r\n      })\r\n    );\r\n\r\n  }\r\n\r\n  hoveredRow(row: object) {  \r\n    this.categoryHighlightedChange.emit(row['id']);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.categories-table {\r\n  width: 100%;\r\n  text-align: left;\r\n  background-color: transparent;\r\n\r\n  border-spacing:0 20px;\r\n\r\n  .percent, .value {\r\n    text-align: right;\r\n  }\r\n\r\n  .mat-row {\r\n    height: 30px;\r\n  }\r\n\r\n  .mat-cell {\r\n    padding-right: 10px;\r\n    border: 0;\r\n  }\r\n\r\n  .mat-row:hover .mat-cell, .highlighted {\r\n    border-color: currentColor;\r\n    background-color: #cccccc;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./top-categories-table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "implements": [
                "OnChanges",
                "OnInit"
            ],
            "templateData": "\r\n<div class='table-wrapper'>\r\n  <table mat-table [dataSource]=\"dataSource\" class=\"categories-table\">\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <td mat-cell *matCellDef=\"let category\" class='category-name'\r\n      [style.box-shadow]=\"category.boxShadowStyle\">{{category.name}}</td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"value\">\r\n      <td mat-cell *matCellDef=\"let category\" class='value'>{{category.value}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"percent\">\r\n      <td mat-cell *matCellDef=\"let category\" class='percent'>{{category.percent}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-row \r\n      *matRowDef=\"let row; columns: displayedColumns\"\r\n      (mouseover)=\"hoveredRow(row)\"\r\n      (mouseout)=\"hoveredRow({id: '-1'})\"\r\n      [class.highlighted]=\"row.id === categoryHighlighted\"\r\n    ></tr>\r\n  </table>\r\n</div>\r\n"
        },
        {
            "name": "TotalRaisedBarComponent",
            "id": "component-TotalRaisedBarComponent-216986133a9760789e7f35d06b13430d177e147c1e6debc16317191b4eaf48348e5c44d88111a4a90faada34ae8a81bdc221b400f66ac4afe1aef0bb80134c95",
            "file": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-total-raised-bar",
            "styleUrls": [
                "./total-raised-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./total-raised-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "raisedCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "RaisedCategory[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "chartOption",
                    "defaultValue": "{\n    tooltip: {\n      show: true,\n      trigger: 'axis',\n      formatter: (params) => (params[0].data.value === null) ? '' : \n          `${params[0].data.name}:<br />$${params[0].data.value.toLocaleString()}`,\n      axisPointer: {\n        type: 'shadow',\n      }\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        interval: 0,\n        formatter: (value) => `${value.split(' ').join('\\n')}`,\n      },\n    },\n    yAxis: {\n      show: false,\n    },\n    series: [{\n      type: 'bar',\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: 18,\n        fontWeight: 'bold',\n        formatter: (params) => \n          getCompactFormattedCurrency(params.data['value']),\n      },\n      itemStyle: { \n        borderRadius: [5, 5, 0, 0],\n      },\n    }],\n    media: [\n      {\n        query: { maxWidth: 375, },\n        option: {\n          xAxis: {\n            axisLabel: {\n              formatter: (value) => `${value.split(' ').join('\\n')}`,\n            },\n          },\n        }\n      },\n\n      {\n        query: { minWidth: 376, },\n        option: {\n          xAxis: {\n            axisLabel: {\n              formatter: (value) => `${value}`,\n            },\n          },\n        }\n      },\n    ],\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "mergeOption",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setChartMergeOption",
                    "args": [
                        {
                            "name": "chartData",
                            "type": "RaisedCategory[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "chartData",
                            "type": "RaisedCategory[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnChanges } from '@angular/core';\n\nimport { EChartsOption } from 'echarts';\n\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\n\nexport interface RaisedCategory {\n  name: string;\n  value: number;\n  color: string;\n}\n\n@Component({\n  selector: 'app-total-raised-bar',\n  templateUrl: './total-raised-bar.component.html',\n  styleUrls: ['./total-raised-bar.component.scss']\n})\nexport class TotalRaisedBarComponent implements OnChanges {\n\n  @Input() raisedCategories: RaisedCategory[];\n\n  mergeOption: EChartsOption = {};\n\n  chartOption: EChartsOption = {\n    tooltip: {\n      show: true,\n      trigger: 'axis',\n      formatter: (params) => (params[0].data.value === null) ? '' : \n          `${params[0].data.name}:<br />$${params[0].data.value.toLocaleString()}`,\n      axisPointer: {\n        type: 'shadow',\n      }\n    },\n    xAxis: {\n      type: 'category',\n      axisTick: {\n        show: false\n      },\n      axisLabel: {\n        interval: 0,\n        formatter: (value) => `${value.split(' ').join('\\n')}`,\n      },\n    },\n    yAxis: {\n      show: false,\n    },\n    series: [{\n      type: 'bar',\n      label: {\n        show: true,\n        position: 'top',\n        fontSize: 18,\n        fontWeight: 'bold',\n        formatter: (params) => \n          getCompactFormattedCurrency(params.data['value']),\n      },\n      itemStyle: { \n        borderRadius: [5, 5, 0, 0],\n      },\n    }],\n    media: [\n      {\n        query: { maxWidth: 375, },\n        option: {\n          xAxis: {\n            axisLabel: {\n              formatter: (value) => `${value.split(' ').join('\\n')}`,\n            },\n          },\n        }\n      },\n\n      {\n        query: { minWidth: 376, },\n        option: {\n          xAxis: {\n            axisLabel: {\n              formatter: (value) => `${value}`,\n            },\n          },\n        }\n      },\n    ],\n  };\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.setChartMergeOption(this.raisedCategories);\n  }\n\n  setChartMergeOption(chartData: RaisedCategory[]): void {\n\n    this.mergeOption = {\n      xAxis: {\n        data: chartData.map( category => category.name),\n      },\n      series: {\n        data: chartData.map( item => ({\n            ...item,\n            itemStyle: { color: item.color, },\n          })),\n      },\n    }\n\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".total-raised-chart {\r\n  height: 100%;\r\n  min-height: 200px;\r\n  width: 100%;\r\n  min-width: 250px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n",
                    "styleUrl": "./total-raised-bar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 84
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\n<div class=\"total-raised-chart\" echarts \n  [options]=\"chartOption\"\n  [merge]=\"mergeOption\"\n></div>\n"
        },
        {
            "name": "TotalSpentDonutComponent",
            "id": "component-TotalSpentDonutComponent-715e0a9a1d6dae077a2267dcc458ec56b4e7ea506ac061697e64b64dba6f582ff67619f0f9363045d5b2f148a73d79cd014c48d78986489eb1f43b2dfbfe82d0",
            "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-total-spent-donut",
            "styleUrls": [
                "./total-spent-donut.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./total-spent-donut.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categoryHighlighted",
                    "defaultValue": "'-1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "spendingCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Category[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "categoryHighlightedChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chartHeight",
                    "defaultValue": "250",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "chartOption",
                    "defaultValue": "{\r\n    tooltip: {\r\n      show: true,\r\n      position: this.getTooltipPosition,\r\n      formatter: this.getFormattedTooltip,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.0)',\r\n      borderWidth: 0,\r\n      shadowColor: 'rgba(0, 0, 0, 0.0)',\r\n      textStyle: {\r\n        fontWeight: 'bolder',\r\n        fontSize: 10,\r\n      },\r\n      extraCssText: 'text-align: center; width:90px; white-space:pre-wrap; line-height: 16px;',\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        label: {\r\n          show: true,\r\n          position: 'inside',\r\n          fontSize: 12,\r\n          formatter: (params) => (params.data['percent']/100)\r\n            .toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 1 }),\r\n        },\r\n        emphasis: {\r\n          scaleSize: 10,\r\n          label: {\r\n            show: true,\r\n            fontWeight: 'bold',\r\n            fontSize: 14,\r\n          },\r\n        },\r\n        radius: ['40%', '90%'],\r\n      },\r\n    ],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "chartWidth",
                    "defaultValue": "250",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "echartsInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ECharts",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "hoveredSlice",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "mergeOption",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "getFormattedTooltip",
                    "args": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTooltipPosition",
                    "args": [
                        {
                            "name": "point",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dom",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rect",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "size",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "point",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dom",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rect",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "size",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChartInit",
                    "args": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setChartMergeOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateChartHighlight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\nimport { EChartsOption, ECharts } from 'echarts';\r\n\r\nimport { getCompactFormattedCurrency } from '../../shared/number-formatter'\r\n\r\nexport interface Category {\r\n  id: string;\r\n  name: string;\r\n  value: number;\r\n  percent: number;\r\n  color: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-total-spent-donut',\r\n  templateUrl: './total-spent-donut.component.html',\r\n  styleUrls: ['./total-spent-donut.component.scss']\r\n})\r\nexport class TotalSpentDonutComponent implements OnChanges {\r\n\r\n  @Input() spendingCategories: Category[];\r\n  @Input() categoryHighlighted: string = '-1';\r\n  @Output() categoryHighlightedChange = new EventEmitter<string>();\r\n\r\n  echartsInstance: ECharts;\r\n  chartHeight = 250;\r\n  chartWidth = 250;\r\n\r\n  mergeOption: EChartsOption = {};\r\n\r\n  chartOption: EChartsOption = {\r\n    tooltip: {\r\n      show: true,\r\n      position: this.getTooltipPosition,\r\n      formatter: this.getFormattedTooltip,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.0)',\r\n      borderWidth: 0,\r\n      shadowColor: 'rgba(0, 0, 0, 0.0)',\r\n      textStyle: {\r\n        fontWeight: 'bolder',\r\n        fontSize: 10,\r\n      },\r\n      extraCssText: 'text-align: center; width:90px; white-space:pre-wrap; line-height: 16px;',\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        label: {\r\n          show: true,\r\n          position: 'inside',\r\n          fontSize: 12,\r\n          formatter: (params) => (params.data['percent']/100)\r\n            .toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 1 }),\r\n        },\r\n        emphasis: {\r\n          scaleSize: 10,\r\n          label: {\r\n            show: true,\r\n            fontWeight: 'bold',\r\n            fontSize: 14,\r\n          },\r\n        },\r\n        radius: ['40%', '90%'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor( ) {  }\r\n\r\n  ngOnChanges(): void {    \r\n    this.setChartMergeOption();\r\n    this.updateChartHighlight();\r\n  }\r\n\r\n  onChartInit(ec: ECharts): void {\r\n    this.echartsInstance = ec;\r\n  }\r\n\r\n  setChartMergeOption(): void {\r\n\r\n    this.mergeOption = {\r\n      series: [{\r\n        data: this.spendingCategories.map( (item) => ({\r\n          ...item,\r\n          itemStyle: { color: item['color'], },\r\n        }))\r\n      }],\r\n    };\r\n\r\n  }\r\n\r\n  updateChartHighlight() {\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.dispatchAction({ type: 'downplay' });\r\n      this.echartsInstance.dispatchAction({ \r\n        type: 'highlight', \r\n        dataIndex: parseInt(this.categoryHighlighted),\r\n      });\r\n\r\n      this.echartsInstance.dispatchAction({ type: 'hideTip' });\r\n      this.echartsInstance.dispatchAction({ \r\n        type: 'showTip', \r\n        seriesIndex: 0,\r\n        dataIndex: parseInt(this.categoryHighlighted),\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  hoveredSlice = (event: object) => {\r\n    this.categoryHighlightedChange.emit(event['dataIndex']+'')\r\n  }\r\n  \r\n  getFormattedTooltip(params) {\r\n    const label = params.data.code ? params.data.code : params.data.name;\r\n\r\n    return `<div style=\"font-size: 1em; margin-bottom: 8px\">${label}</div>` \r\n         + `<div style=\"font-size: 1.5em;\">${getCompactFormattedCurrency(params.data.value)}</div>`;\r\n  }\r\n\r\n  getTooltipPosition(point, params, dom, rect, size) {\r\n    return [\r\n      (size.viewSize[0]/2) - size.contentSize[0]/2,\r\n      (size.viewSize[1]/2) - size.contentSize[1]/2,\r\n    ];\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.total-spent-chart {\r\n  // height: 400px;\r\n}\r\n\r\n.total-spent-chart-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n",
                    "styleUrl": "./total-spent-donut.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 67
            },
            "implements": [
                "OnChanges"
            ],
            "templateData": "\r\n<div class=\"total-spent-chart-wrapper\">\r\n  <div class=\"total-spent-chart\" echarts \r\n    [options]=\"chartOption\"\r\n    (chartInit)=\"onChartInit($event)\"\r\n    [merge]=\"mergeOption\"\r\n    (chartMouseOver)=\"hoveredSlice($event)\"\r\n    (chartMouseOut)=\"hoveredSlice({ dataIndex: -1 })\"\r\n\r\n    [style.height]=\"chartHeight+'px'\"\r\n    [style.width]=\"chartWidth+'px'\"\r\n  ></div>\r\n</div>\r\n"
        },
        {
            "name": "TotalSpentDonutComponent",
            "id": "component-TotalSpentDonutComponent-d1382b5d0ef57c6597e6a0dfe9b29eedea8c35fce2015e4b0e1ccd04e07ed92d418fa8334dab0ef2417455825fa60d24183b918676cc7f5a4515a1dd66a3be27-1",
            "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "total-spent-donut",
            "styleUrls": [
                "./total-spent-donut.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./total-spent-donut.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categoryHighlighted",
                    "defaultValue": "'-1'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "spendingCategories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "ExpenseCategory[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "categoryHighlightedChange",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "chartHeight",
                    "defaultValue": "250",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "chartOption",
                    "defaultValue": "{\r\n    tooltip: {\r\n      show: true,\r\n      position: this.getTooltipPosition,\r\n      formatter: this.getFormattedTooltip,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.0)',\r\n      borderWidth: 0,\r\n      shadowColor: 'rgba(0, 0, 0, 0.0)',\r\n      textStyle: {\r\n        fontWeight: 'bolder',\r\n        fontSize: 10,\r\n      },\r\n      extraCssText: 'text-align: center; width:90px; white-space:pre-wrap; line-height: 16px;',\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        label: {\r\n          show: true,\r\n          position: 'inside',\r\n          fontSize: 12,\r\n          formatter: (params) => (params.data['percent']/100)\r\n            .toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 1 }),\r\n        },\r\n        emphasis: {\r\n          scaleSize: 10,\r\n          label: {\r\n            show: true,\r\n            fontWeight: 'bold',\r\n            fontSize: 14,\r\n          },\r\n        },\r\n        radius: ['40%', '90%'],\r\n      },\r\n    ],\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "chartWidth",
                    "defaultValue": "250",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "echartsInstance",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ECharts",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "hoveredSlice",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "mergeOption",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EChartsOption",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "getFormattedTooltip",
                    "args": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 106,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTooltipPosition",
                    "args": [
                        {
                            "name": "point",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dom",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rect",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "size",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 112,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "point",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "params",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dom",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rect",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "size",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onChartInit",
                    "args": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ec",
                            "type": "ECharts",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setChartMergeOption",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateChartHighlight",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\nimport { EChartsOption, ECharts } from 'echarts';\r\nimport { ExpenseCategory } from '../lib-ui-charts.models';\r\nimport { getCompactFormattedCurrency } from '../shared/number-formatter'\r\n\r\n@Component({\r\n  selector: 'total-spent-donut',\r\n  templateUrl: './total-spent-donut.component.html',\r\n  styleUrls: ['./total-spent-donut.component.scss']\r\n})\r\nexport class TotalSpentDonutComponent implements OnChanges {\r\n\r\n  @Input() spendingCategories: ExpenseCategory[];\r\n  @Input() categoryHighlighted: string = '-1';\r\n  @Output() categoryHighlightedChange = new EventEmitter<string>();\r\n\r\n  echartsInstance: ECharts;\r\n  chartHeight = 250;\r\n  chartWidth = 250;\r\n\r\n  mergeOption: EChartsOption = {};\r\n\r\n  chartOption: EChartsOption = {\r\n    tooltip: {\r\n      show: true,\r\n      position: this.getTooltipPosition,\r\n      formatter: this.getFormattedTooltip,\r\n      backgroundColor: 'rgba(0, 0, 0, 0.0)',\r\n      borderWidth: 0,\r\n      shadowColor: 'rgba(0, 0, 0, 0.0)',\r\n      textStyle: {\r\n        fontWeight: 'bolder',\r\n        fontSize: 10,\r\n      },\r\n      extraCssText: 'text-align: center; width:90px; white-space:pre-wrap; line-height: 16px;',\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        label: {\r\n          show: true,\r\n          position: 'inside',\r\n          fontSize: 12,\r\n          formatter: (params) => (params.data['percent']/100)\r\n            .toLocaleString(\"en\", { style: \"percent\", minimumFractionDigits: 1 }),\r\n        },\r\n        emphasis: {\r\n          scaleSize: 10,\r\n          label: {\r\n            show: true,\r\n            fontWeight: 'bold',\r\n            fontSize: 14,\r\n          },\r\n        },\r\n        radius: ['40%', '90%'],\r\n      },\r\n    ],\r\n  };\r\n\r\n  constructor( ) {  }\r\n\r\n  ngOnChanges(): void {    \r\n    this.setChartMergeOption();\r\n    this.updateChartHighlight();\r\n  }\r\n\r\n  onChartInit(ec: ECharts): void {\r\n    this.echartsInstance = ec;\r\n  }\r\n\r\n  setChartMergeOption(): void {\r\n\r\n    this.mergeOption = {\r\n      series: [{\r\n        data: this.spendingCategories.map( (item) => ({\r\n          ...item,\r\n          itemStyle: { color: item['color'], },\r\n        }))\r\n      }],\r\n    };\r\n\r\n  }\r\n\r\n  updateChartHighlight() {\r\n    if (this.echartsInstance) {\r\n      this.echartsInstance.dispatchAction({ type: 'downplay' });\r\n      this.echartsInstance.dispatchAction({ \r\n        type: 'highlight', \r\n        dataIndex: parseInt(this.categoryHighlighted),\r\n      });\r\n\r\n      this.echartsInstance.dispatchAction({ type: 'hideTip' });\r\n      this.echartsInstance.dispatchAction({ \r\n        type: 'showTip', \r\n        seriesIndex: 0,\r\n        dataIndex: parseInt(this.categoryHighlighted),\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  hoveredSlice = (event: object) => {\r\n    this.categoryHighlightedChange.emit(event['dataIndex']+'')\r\n  }\r\n  \r\n  getFormattedTooltip(params) {\r\n    const label = params.data.code ? params.data.code : params.data.name;\r\n    return `<div style=\"font-size: 1em; margin-bottom: 8px\">${label}</div>` \r\n         + `<div style=\"font-size: 1.5em;\">${getCompactFormattedCurrency(params.data.value)}</div>`;\r\n  }\r\n\r\n  getTooltipPosition(point, params, dom, rect, size) {\r\n    return [\r\n      (size.viewSize[0]/2) - size.contentSize[0]/2,\r\n      (size.viewSize[1]/2) - size.contentSize[1]/2,\r\n    ];\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\r\n.total-spent-chart {\r\n  // height: 400px;\r\n}\r\n\r\n.total-spent-chart-wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n",
                    "styleUrl": "./total-spent-donut.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 58
            },
            "implements": [
                "OnChanges"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TotalSpentDonutComponent-1",
            "templateData": "\r\n<div class=\"total-spent-chart-wrapper\">\r\n  <div class=\"total-spent-chart\" echarts \r\n    [options]=\"chartOption\"\r\n    (chartInit)=\"onChartInit($event)\"\r\n    [merge]=\"mergeOption\"\r\n    (chartMouseOver)=\"hoveredSlice($event)\"\r\n    (chartMouseOut)=\"hoveredSlice({ dataIndex: -1 })\"\r\n\r\n    [style.height]=\"chartHeight+'px'\"\r\n    [style.width]=\"chartWidth+'px'\"\r\n  ></div>\r\n</div>\r\n"
        },
        {
            "name": "UnderConstructionComponent",
            "id": "component-UnderConstructionComponent-7af0a3e79d8d957efd0f4e50981acdd482a428850dd236e11407ab695bbc2ad6b3806df6ae83cbd4e28104a9d0882f0d1737c8578fcd1b95207bd80b56782cc1",
            "file": "src/app/public/components/under-construction/under-construction.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-under-construction",
            "styleUrls": [
                "./under-construction.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./under-construction.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-under-construction',\r\n  templateUrl: './under-construction.component.html',\r\n  styleUrls: ['./under-construction.component.scss']\r\n  \r\n})\r\nexport class UnderConstructionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../styles/variables\";\r\n@import \"../../../styles/elements\";\r\n@import \"../../../styles/global\";\r\n\r\n\r\n.construction{\r\n   \r\n    width:100%;\r\n    height: 100%;\r\n    margin:auto;\r\n    background-color: $vvbackground;\r\n  \r\n\r\n    .construction-box{\r\n        margin:auto;\r\n        max-width: 300px;\r\n    }\r\n\r\n}\r\n.crane{\r\n    margin:20vh auto 10px auto;\r\n    width:200px;\r\n    height:auto;\r\n    display: block;\r\n}\r\n\r\n",
                    "styleUrl": "./under-construction.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"construction\">\r\n \r\n  <img class=\"crane\" src=\"../../../assets/under-construction/under-construction.png\"  width=\"67%\" height=\"auto\" alt=\"crane\"/>\r\n  <div class=\"construction-box\">\r\n   \r\n    <p class=\"h-sub\">This page is</p>\r\n    <h1>\r\n      Under Construction\r\n    </h1>\r\n  </div>\r\n</div>"
        }
    ],
    "modules": [
        {
            "name": "APIStoreModule",
            "id": "module-APIStoreModule-daf37ca4cbfbd228c264769a9ffb3ebc5aa2ef67f0c677729534f7672b600ea700025d0df73c91a1bcc696202d9d0aa940d955ff834d5988df1d67042a44df83",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/store/api.store.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CandidateCardService } from './services/candidate.card.service';\r\nimport { environment } from 'src/environments/environment';\r\nimport { OfficeSummaryService } from './services/office-summary.service';\r\nimport { OfficeService } from './services/office.service';\r\nimport { LastUpdatedService } from './services/last-updated.service';\r\nimport { ElectionService } from './services/election.service';\r\nimport { CandidateDetailsService } from './services/candidate.details.service';\r\nimport { CandidateNavigationService } from './services/candidate.navigation.service';\r\nimport { CandidateQuickViewService } from './services/candidate.quickview.service';\r\nimport { CandidateService } from './services/candidate.service';\r\nimport { YearService } from './services/year.service';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    CandidateCardService,\r\n    CandidateDetailsService,\r\n    CandidateNavigationService,\r\n    CandidateQuickViewService,\r\n    CandidateService,\r\n    ElectionService,\r\n    LastUpdatedService,\r\n    OfficeSummaryService,\r\n    OfficeService,\r\n    YearService,\r\n  ],\r\n  exports: [],\r\n})\r\nexport class APIStoreModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "CandidateCardService"
                        },
                        {
                            "name": "CandidateDetailsService"
                        },
                        {
                            "name": "CandidateNavigationService"
                        },
                        {
                            "name": "CandidateQuickViewService"
                        },
                        {
                            "name": "CandidateService"
                        },
                        {
                            "name": "ElectionService"
                        },
                        {
                            "name": "LastUpdatedService"
                        },
                        {
                            "name": "OfficeService"
                        },
                        {
                            "name": "OfficeSummaryService"
                        },
                        {
                            "name": "YearService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-3f24af0dd804408051d877c45334c9bbb47f6f729873b3983c260b2af53be3a6545bcc19d643a0ea973a038bba18d4a831857ca53478fbaae30f7811063f5507",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { VvChartsModule } from './vv-charts/vv-charts.module';\r\nimport { CandidateQuickViewModule } from './candidate-quick-view/candidate-quick-view.module';\r\nimport { CandidateModule } from './candidate/candidate.module';\r\n\r\nimport { APIStoreModule } from './store/api.store.module';\r\nimport { PublicModule } from './public/public.module';\r\nimport { NavigationMenuModule } from './navigation-menu/navigation-menu.module';\r\nimport { CandidateDetailsModule } from './candidate-details/candidate-details.module';\r\n\r\n@NgModule({\r\n  exports: [\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    ChartsModule,\r\n    HttpClientModule,\r\n    VvChartsModule,\r\n    CandidateQuickViewModule,\r\n    CandidateModule,\r\n    APIStoreModule,\r\n    PublicModule,\r\n    NavigationMenuModule,\r\n    CandidateDetailsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "APIStoreModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CandidateDetailsModule"
                        },
                        {
                            "name": "CandidateModule"
                        },
                        {
                            "name": "CandidateQuickViewModule"
                        },
                        {
                            "name": "NavigationMenuModule"
                        },
                        {
                            "name": "PublicModule"
                        },
                        {
                            "name": "VvChartsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-29ae7ebb81f0d6ecd386dd9a4fd918d17aaf975c70d02c8145961a2294ee2a0b8a6efe19bbeb8edc49813c80184edf03d8321f798797e9c1acf2806697273b06",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CandidateDetailsModule",
            "id": "module-CandidateDetailsModule-6a36acf1e6920527ce58512398bd1eed002a4630deb8aed27a44b1f23d5bcb7afdc4a77e2105f3429f093a1c8bc9547e5c21320a7dd678ae81051425496eed07",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/candidate-details/candidate-details.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { VvChartsModule } from '../vv-charts/vv-charts.module';\r\n\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { CandidateDetailsHeaderComponent } from './candidate-details-header/candidate-details-header.component';\r\nimport { DetailsRaisedByIndustryComponent } from './details-raised-by-industry/details-raised-by-industry.component';\r\nimport { DetailsContainerOutsideMoneyComponent } from './details-container-outside-money/details-container-outside-money.component';\r\n\r\nimport { DetailsTabTitleComponent } from './details-tab-title/details-tab-title.component';\r\nimport { DetailsTabRaisedByIndustryComponent } from './details-tab-raised-by-industry/details-tab-raised-by-industry.component';\r\nimport { DetailsTabRaisedByLocationComponent } from './details-tab-raised-by-location/details-tab-raised-by-location.component';\r\nimport { DetailsTabOutsideMoneyComponent } from './details-tab-outside-money/details-tab-outside-money.component';\r\nimport { CandidateDetailsRoutingModule } from './candidate-details-routing.module';\r\nimport { DetailsRaisedSpentModule } from '../details-raised-spent/details-raised-spent.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DetailsComponent,\r\n    CandidateDetailsHeaderComponent,\r\n    DetailsRaisedByIndustryComponent,\r\n    DetailsContainerOutsideMoneyComponent,\r\n    DetailsTabTitleComponent,\r\n    DetailsTabRaisedByIndustryComponent,\r\n    DetailsTabRaisedByLocationComponent,\r\n    DetailsTabOutsideMoneyComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatDividerModule,\r\n    FontAwesomeModule,\r\n    SharedModule,\r\n    VvChartsModule,\r\n    DetailsRaisedSpentModule,\r\n    CandidateDetailsRoutingModule,\r\n  ],\r\n  exports: [\r\n    DetailsComponent,\r\n    CandidateDetailsHeaderComponent,\r\n    DetailsRaisedByIndustryComponent,\r\n    DetailsContainerOutsideMoneyComponent,\r\n    DetailsTabTitleComponent,\r\n    DetailsTabRaisedByIndustryComponent,\r\n    DetailsTabRaisedByLocationComponent,\r\n    DetailsTabOutsideMoneyComponent,\r\n  ],\r\n})\r\nexport class CandidateDetailsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CandidateDetailsHeaderComponent"
                        },
                        {
                            "name": "DetailsComponent"
                        },
                        {
                            "name": "DetailsContainerOutsideMoneyComponent"
                        },
                        {
                            "name": "DetailsRaisedByIndustryComponent"
                        },
                        {
                            "name": "DetailsTabOutsideMoneyComponent"
                        },
                        {
                            "name": "DetailsTabRaisedByIndustryComponent"
                        },
                        {
                            "name": "DetailsTabRaisedByLocationComponent"
                        },
                        {
                            "name": "DetailsTabTitleComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CandidateDetailsRoutingModule"
                        },
                        {
                            "name": "DetailsRaisedSpentModule"
                        },
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "VvChartsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CandidateDetailsHeaderComponent"
                        },
                        {
                            "name": "DetailsComponent"
                        },
                        {
                            "name": "DetailsContainerOutsideMoneyComponent"
                        },
                        {
                            "name": "DetailsRaisedByIndustryComponent"
                        },
                        {
                            "name": "DetailsTabOutsideMoneyComponent"
                        },
                        {
                            "name": "DetailsTabRaisedByIndustryComponent"
                        },
                        {
                            "name": "DetailsTabRaisedByLocationComponent"
                        },
                        {
                            "name": "DetailsTabTitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CandidateDetailsRoutingModule",
            "id": "module-CandidateDetailsRoutingModule-c1d938038c8e274d47c720be63c9642caf7db77006139ef8a88eb4ce72651cacbe859965380b1d9bcd712a8a998155cbc269ae7759b22ba059c4bdbaafd10526",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/candidate-details/candidate-details-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DetailsComponent } from './details/details.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'details/:id', component: DetailsComponent },\r\n  ];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CandidateDetailsRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CandidateModule",
            "id": "module-CandidateModule-9a608750ca1ea6caa5889e681aa73c8fce5399514b7b92fb060abac464eccc97e61bef8db300eb69a5cf9139ab87ecee6e8e4bf67b80c246c912600ec33b2b40",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/candidate/candidate.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { CandidateCardComponent } from './candidate-card/candidate-card.component';\r\n\r\nimport { VvChartsModule } from '../vv-charts/vv-charts.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CandidateCardComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    FontAwesomeModule,\r\n\r\n    VvChartsModule,\r\n  ],\r\n  exports: [\r\n    CandidateCardComponent,\r\n  ]\r\n})\r\nexport class CandidateModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CandidateCardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "VvChartsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CandidateCardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CandidateQuickViewModule",
            "id": "module-CandidateQuickViewModule-f3296ad0043eb389e614bfbffc2fc80bb8821ccb9af6433864dfa0a443ed33d2c78472c4563198d3c87ac45d4a4e49a813ec037352ef1e42bdd382d955be1a30",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/candidate-quick-view/candidate-quick-view.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { VvChartsModule } from '../vv-charts/vv-charts.module';\r\nimport { CandidateModule } from '../candidate/candidate.module';\r\n\r\nimport { ExpandedChartTitleComponent } from './expanded-chart-title/expanded-chart-title.component';\r\nimport { ExpandedOutsideMoneyComponent } from './expanded-outside-money/expanded-outside-money.component';\r\nimport { ContributionsByGroupComponent } from './contributions-by-group/contributions-by-group.component';\r\nimport { ExpandedAverageDonationComponent } from './expanded-average-donation/expanded-average-donation.component';\r\nimport { ExpandedRaisedVsSpentComponent } from './expanded-raised-vs-spent/expanded-raised-vs-spent.component';\r\nimport { ExpandedRaisedInVsOutComponent } from './expanded-raised-in-vs-out/expanded-raised-in-vs-out.component';\r\nimport { ExpandedQuickViewComponent } from './expanded-quick-view/expanded-quick-view.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExpandedChartTitleComponent,\r\n    ExpandedOutsideMoneyComponent,\r\n    ContributionsByGroupComponent,\r\n    ExpandedAverageDonationComponent,\r\n    ExpandedRaisedVsSpentComponent,\r\n    ExpandedRaisedInVsOutComponent,\r\n    ExpandedQuickViewComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    FontAwesomeModule,\r\n    VvChartsModule,\r\n    CandidateModule,\r\n  ],\r\n  exports: [\r\n    ExpandedOutsideMoneyComponent,\r\n    ContributionsByGroupComponent,\r\n    ExpandedRaisedVsSpentComponent,\r\n    ExpandedRaisedInVsOutComponent,\r\n    ExpandedQuickViewComponent,\r\n  ],\r\n})\r\nexport class CandidateQuickViewModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContributionsByGroupComponent"
                        },
                        {
                            "name": "ExpandedAverageDonationComponent"
                        },
                        {
                            "name": "ExpandedChartTitleComponent"
                        },
                        {
                            "name": "ExpandedOutsideMoneyComponent"
                        },
                        {
                            "name": "ExpandedQuickViewComponent"
                        },
                        {
                            "name": "ExpandedRaisedInVsOutComponent"
                        },
                        {
                            "name": "ExpandedRaisedVsSpentComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CandidateModule"
                        },
                        {
                            "name": "VvChartsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ContributionsByGroupComponent"
                        },
                        {
                            "name": "ExpandedOutsideMoneyComponent"
                        },
                        {
                            "name": "ExpandedQuickViewComponent"
                        },
                        {
                            "name": "ExpandedRaisedInVsOutComponent"
                        },
                        {
                            "name": "ExpandedRaisedVsSpentComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DetailsRaisedSpentModule",
            "id": "module-DetailsRaisedSpentModule-beb9ce963431103a7e375caa8a6d3cab35c9f3e972c61cfab12f9cbf9277c16109a1b991567906061b1fa0e4f5aa50f1b2a87f904fc9e4a8b243f0f5b6190bae",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/details-raised-spent/details-raised-spent.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { VvChartsModule } from '../vv-charts/vv-charts.module';\r\n\r\nimport { DetailsTotalRaisedComponent } from './components/details-total-raised/details-total-raised.component';\r\nimport { DetailsTotalSpentComponent } from './components/details-total-spent/details-total-spent.component';\r\nimport { DetailsRaisedSpentSummaryComponent } from './components/details-raised-spent-summary/details-raised-spent-summary.component';\r\nimport { DetailsTabRaisedVSpentComponent } from './components/details-tab-raised-v-spent/details-tab-raised-v-spent.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DetailsTotalRaisedComponent,\r\n    DetailsTotalSpentComponent,\r\n    DetailsRaisedSpentSummaryComponent,\r\n    DetailsTabRaisedVSpentComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    MatDividerModule,\r\n    FontAwesomeModule,\r\n    SharedModule,\r\n    VvChartsModule,\r\n  ],\r\n  exports: [\r\n    DetailsTotalRaisedComponent,\r\n    DetailsTotalSpentComponent,\r\n    DetailsRaisedSpentSummaryComponent,\r\n    DetailsTabRaisedVSpentComponent,\r\n  ],\r\n})\r\nexport class DetailsRaisedSpentModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DetailsRaisedSpentSummaryComponent"
                        },
                        {
                            "name": "DetailsTabRaisedVSpentComponent"
                        },
                        {
                            "name": "DetailsTotalRaisedComponent"
                        },
                        {
                            "name": "DetailsTotalSpentComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "VvChartsModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DetailsRaisedSpentSummaryComponent"
                        },
                        {
                            "name": "DetailsTabRaisedVSpentComponent"
                        },
                        {
                            "name": "DetailsTotalRaisedComponent"
                        },
                        {
                            "name": "DetailsTotalSpentComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ElectionYearSelectorModule",
            "id": "module-ElectionYearSelectorModule-451ea051aa9cb4f457e9c2de003637263e854d8fc7567016998e102b1ef393d3a73613f10b26fd1cae909d98a569efa242de911572a6cc6c76534c82b95192b2",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/election-year-selector/election-year-selector.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\n\r\nimport { APIStoreModule } from '../store/api.store.module';\r\nimport { ElectionYearSelectorComponent } from './election-year-selector.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ElectionYearSelectorComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DropdownModule,\r\n    FormsModule,\r\n    APIStoreModule,\r\n  ],\r\n  exports: [\r\n    ElectionYearSelectorComponent,\r\n  ],\r\n  providers: [],\r\n})\r\nexport class ElectionYearSelectorModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ElectionYearSelectorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "APIStoreModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ElectionYearSelectorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "GraphQLModule",
            "id": "module-GraphQLModule-05fff750848b23cc75d09011e4663d4fdc93c726810e171c0adc43199be9b3cc0cbce5ffcf70fad7a79948c1d317dc592f8b887e057130f54b97754fdd86d52f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/graphql/graphql.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { APOLLO_OPTIONS, ApolloModule } from 'apollo-angular';\r\nimport { HttpLink } from 'apollo-angular/http';\r\nimport { InMemoryCache } from '@apollo/client/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nconst local_dev_url = 'http://localhost:3000';\r\nconst remote_prod_url = 'https://opensandiego-voters-voice.herokuapp.com'\r\nconst uri = `${local_dev_url}/graphql`;\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    ApolloModule,\r\n  ],  \r\n  declarations: [  ],  \r\n  providers: [\r\n    {\r\n      provide: APOLLO_OPTIONS,\r\n      useFactory: (httpLink: HttpLink) => {\r\n        return {\r\n          cache: new InMemoryCache(),\r\n          link: httpLink.create({\r\n            uri: uri,\r\n          }),\r\n        };\r\n      },\r\n      deps: [HttpLink],\r\n    },\r\n  ], \r\n  exports: [],\r\n  bootstrap: []\r\n})\r\nexport class GraphQLModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LibUiChartsModule",
            "id": "module-LibUiChartsModule-ed119d82d9bc2066eaee0adeb5c5cf5334647746d1658e34e463d8e8777ef623f237980a759b9ab586da64f2bdc964d6d702312ffdcc62d284e239075e6d282f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lib-ui-charts/src/lib/lib-ui-charts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { LibUiChartsComponent } from './lib-ui-charts.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LibUiChartsComponent\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    LibUiChartsComponent\r\n  ]\r\n})\r\nexport class LibUiChartsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LibUiChartsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LibUiChartsComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NavigationMenuModule",
            "id": "module-NavigationMenuModule-86dda5e37ae679c00f38be1167cbd8f151fc10d413af0dcd1742a582a3242694a5a758f94eef1a78e57f94ed8e1c9b347765a480124f40986bd306f21bf26892",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/navigation-menu/navigation-menu.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FaIconLibrary, FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faUniversity, faBalanceScale, faMapMarkedAlt, faQuestion, faBars, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { PublicModule } from '../public/public.module';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { SideMenuService } from './services/side-menu.service';\r\nimport { SideMenuComponent } from './components/side-menu/side-menu.component';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { ElectionYearSelectorModule } from '../election-year-selector/election-year-selector.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    HeaderComponent,\r\n    SideMenuComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatSidenavModule,\r\n    RouterModule,\r\n    FontAwesomeModule,\r\n    PublicModule,\r\n    MenuModule,\r\n    PanelMenuModule,\r\n    ElectionYearSelectorModule,\r\n  ],\r\n  exports: [\r\n    HomeComponent,\r\n    HeaderComponent,\r\n  ],\r\n  providers: [SideMenuService]\r\n})\r\nexport class NavigationMenuModule {\r\n  constructor(library: FaIconLibrary) {\r\n    // Add an icon to the library for convenient access in other components\r\n    library.addIcons(faUniversity, faBalanceScale, faMapMarkedAlt, faQuestion, faBars, faChevronRight);\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "SideMenuService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "SideMenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ElectionYearSelectorModule"
                        },
                        {
                            "name": "PublicModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OfficeModule",
            "id": "module-OfficeModule-72e48c79465d4a0bb1ed8a69607fd808ff054faad0a4ed32ca2c50871851ff644c46a5785d995af39d90c0b880ce8fbaaa3f23c2a5ce56dc9307fa3e340f75e3",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/office/office.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OfficeComponent } from './components/office/office.component';\r\nimport { OfficeRoutingModule } from './office-routing.module';\r\nimport { CandidateModule } from '../candidate/candidate.module';\r\nimport { CandidateQuickViewModule } from '../candidate-quick-view/candidate-quick-view.module';\r\nimport { CandidateDetailsModule } from '../candidate-details/candidate-details.module';\r\nimport { CardListComponent } from './components/card-list/card-list.component';\r\nimport { QuickViewContainerComponent } from './components/quick-view-container/quick-view-container.component';\r\nimport { OfficeDistrictComponent } from './components/office-districts/office-districts.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OfficeComponent,\r\n    OfficeDistrictComponent,\r\n    QuickViewContainerComponent,\r\n    CardListComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CandidateModule,\r\n    CandidateQuickViewModule,\r\n    OfficeRoutingModule,\r\n    CandidateDetailsModule,\r\n  ],\r\n  exports: [\r\n    OfficeComponent,\r\n  ]\r\n})\r\nexport class OfficeModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardListComponent"
                        },
                        {
                            "name": "OfficeComponent"
                        },
                        {
                            "name": "OfficeDistrictComponent"
                        },
                        {
                            "name": "QuickViewContainerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CandidateDetailsModule"
                        },
                        {
                            "name": "CandidateModule"
                        },
                        {
                            "name": "CandidateQuickViewModule"
                        },
                        {
                            "name": "OfficeRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "OfficeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OfficeRoutingModule",
            "id": "module-OfficeRoutingModule-102fab06ef199a18383f22603c29f7db4117eb4b3d37910f5832cac17b1ebbd80c9bc897cd23bf212145fb12bffaef63248213e4067dd122a482429af30727d9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/office/office-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DetailsComponent } from '../candidate-details/details/details.component';\r\nimport { OfficeDistrictComponent } from './components/office-districts/office-districts.component';\r\nimport { QuickViewContainerComponent } from './components/quick-view-container/quick-view-container.component';\r\nimport { OfficeDistrictResolverService } from './office-district-resolver.service';\r\n\r\nconst officeRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OfficeDistrictComponent,\r\n    data: { type: '' },\r\n    children: [\r\n      {\r\n        path: ':candidateId',\r\n        data: { type: 'candidate' },\r\n        component: QuickViewContainerComponent,\r\n      }\r\n    ],\r\n  },\r\n  {\r\n    path: ':candidateId',\r\n    data: { type: 'candidate' },\r\n    children: [\r\n      {\r\n        path: 'details',\r\n        component: DetailsComponent,\r\n        data: { type: 'details' },\r\n      },\r\n    ],\r\n  }, \r\n];\r\n\r\nconst districts: Routes = [\r\n  {\r\n    path: ':district_number',\r\n    data: { type: 'district' },\r\n    children: officeRoutes,\r\n    resolve: {\r\n      office: OfficeDistrictResolverService,\r\n    },\r\n  },\r\n];\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: ':office_name',\r\n    children: districts,\r\n    data: { \r\n      type: 'office_prefix',\r\n    },\r\n  },\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OfficeRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PublicModule",
            "id": "module-PublicModule-af8ad9674867fbc89974b331ea41bcd6fea1b6822a60d292cf02320f94b154b34c2c4847ab86769003779e48eb3c9aba77a2f6d01377f89cf4366f0822afc989",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/public/public.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\nimport { faBalanceScale, faMapMarkedAlt, faQuestion, faUniversity } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { FaqComponent } from './components/faq/faq.component';\r\nimport { SplashComponent } from './components/splash/splash.component';\r\nimport { SplashHeroComponent } from './components/splash-hero/splash-hero.component';\r\nimport { OfficeSummaryCardComponent } from './components/office-summary-card/office-summary-card.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { UnderConstructionComponent } from './components/under-construction/under-construction.component';\r\nimport { PublicRoutingModule } from './public-routing.module';\r\nimport { RoundCurrencyDisplayPipe } from './pipes/round-currency-display.pipe';\r\nimport { RoutingService } from './services/routing.service';\r\nimport { BreadcrumbComponent } from './components/breadcrumb/breadcrumb.component';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { OfficeSummaryComponent } from './components/office-summary/office-summary.component';\r\nimport { APIStoreModule } from '../store/api.store.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AboutComponent,\r\n    FaqComponent,\r\n    SplashComponent,\r\n    SplashHeroComponent,\r\n    OfficeSummaryComponent,\r\n    OfficeSummaryCardComponent,\r\n    FooterComponent,\r\n    UnderConstructionComponent,\r\n    RoundCurrencyDisplayPipe,\r\n    BreadcrumbComponent,\r\n    NotFoundComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PublicRoutingModule,\r\n    FontAwesomeModule,\r\n    BreadcrumbModule,\r\n    APIStoreModule,\r\n  ],\r\n  exports: [\r\n    AboutComponent,\r\n    FaqComponent,\r\n    SplashComponent,\r\n    UnderConstructionComponent,\r\n    FooterComponent,\r\n    BreadcrumbComponent,\r\n  ],\r\n  providers: [RoutingService],\r\n})\r\nexport class PublicModule { \r\n  constructor(library: FaIconLibrary) {\r\n    // Add an icon to the library for convenient access in other components\r\n    library.addIcons(faUniversity, faBalanceScale, faMapMarkedAlt, faQuestion);\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "RoutingService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "BreadcrumbComponent"
                        },
                        {
                            "name": "FaqComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "NotFoundComponent"
                        },
                        {
                            "name": "OfficeSummaryCardComponent"
                        },
                        {
                            "name": "OfficeSummaryComponent"
                        },
                        {
                            "name": "RoundCurrencyDisplayPipe"
                        },
                        {
                            "name": "SplashComponent"
                        },
                        {
                            "name": "SplashHeroComponent"
                        },
                        {
                            "name": "UnderConstructionComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "APIStoreModule"
                        },
                        {
                            "name": "PublicRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AboutComponent"
                        },
                        {
                            "name": "BreadcrumbComponent"
                        },
                        {
                            "name": "FaqComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "SplashComponent"
                        },
                        {
                            "name": "UnderConstructionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PublicRoutingModule",
            "id": "module-PublicRoutingModule-4f2af660513e478d2d64aa77a59d5e93f3da766f277d47fcd69d6775cbc510ac9887ee7ecf66e8aabca233a47dcada4d5f382846298a6b0f834a52bf0fed68ad",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/public/public-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n \r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { FaqComponent } from './components/faq/faq.component';\r\nimport { NotFoundComponent } from './components/not-found/not-found.component';\r\nimport { SplashComponent } from './components/splash/splash.component';\r\nimport { UnderConstructionComponent } from './components/under-construction/under-construction.component';\r\nimport { OfficeSummaryComponent } from './components/office-summary/office-summary.component';\r\nimport { OfficeSummaryResolverService } from './resolvers/office-summary-resolver.service';\r\nimport { YearResolverService } from './resolvers/year-resolver.service';\r\n \r\nconst routes: Routes = [\r\n  { \r\n    path: '',\r\n    resolve: {\r\n      year: YearResolverService,\r\n    },\r\n    children: [\r\n      { path: 'home', component: SplashComponent, },\r\n      { path: '', redirectTo: '/year/2022', pathMatch: 'full', },\r\n      // { path: 'years', component: SplashComponent, children: [{ path: '', component: YearsComponent, }], },\r\n    ]\r\n  },\r\n  { \r\n    path: 'year/:year',\r\n    data: { type: 'year' },\r\n    resolve: {\r\n      office: OfficeSummaryResolverService,\r\n    },\r\n    children: [\r\n      {\r\n        path: '',\r\n        data: { type: '' },\r\n        component: SplashComponent,\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: OfficeSummaryComponent,\r\n          }\r\n        ],\r\n      },\r\n      {\r\n        path: 'office',\r\n        data: { breadcrumb: null, startRoute: true, type: '' },\r\n        loadChildren: () => \"import('../office/office.module').then(m => m.OfficeModule)\",\r\n      }\r\n    ],\r\n  },\r\n  { path: 'splash', redirectTo: '', pathMatch: 'full' },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'faq', component: FaqComponent },\r\n  { path: 'under-construction', component: UnderConstructionComponent },\r\n  { path: '404', component: NotFoundComponent },\r\n  { path: '**', pathMatch: 'full', redirectTo: '404' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PublicRoutingModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RaisedVsSpentBarModule",
            "id": "module-RaisedVsSpentBarModule-606e4ee045528029a578504704e78c7c77a24366e91d2c1cc7332a45074ff305ba67e6a2d6ecba5c25b3ba982e1664f4a3df6f26009193d2a86907b9eaf1b966",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\n\r\nimport { RaisedVsSpentBarComponent } from './raised-vs-spent-bar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RaisedVsSpentBarComponent,\r\n  ],\r\n  imports: [\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n  ],\r\n  exports: [\r\n    RaisedVsSpentBarComponent,\r\n  ],\r\n  providers: []\r\n})\r\nexport class RaisedVsSpentBarModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RaisedVsSpentBarComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "RaisedVsSpentGQLModule",
            "id": "module-RaisedVsSpentGQLModule-701b9ee107e25b7221f2c40bae9abffa08fb6458060c049088f370045166db398801423a9da394c0a589a2f2e56073e0d6686bf952ac05796c02ca0cbbb7fa35",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/graphql/raised-vs-spent-gql/raised-vs-spent-gql.module.ts",
            "methods": [],
            "sourceCode": "import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { RaisedVsSpentBarModule } from 'lib-ui-charts';\r\nimport { GraphQLModule } from '../graphql.module';\r\nimport { RaisedVsSpentGQLComponent } from './raised-vs-spent-gql.component';\r\nimport { RaisedVsSpentGQL } from './raised-vs-spent-gql.query';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    GraphQLModule,\r\n    RaisedVsSpentBarModule,\r\n  ],\r\n  declarations: [\r\n    RaisedVsSpentGQLComponent,\r\n  ],  \r\n  providers: [ RaisedVsSpentGQL ], \r\n  exports: [ RaisedVsSpentGQLComponent ],\r\n  bootstrap: []\r\n})\r\nexport class RaisedVsSpentGQLModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "RaisedVsSpentGQL"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "RaisedVsSpentGQLComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "GraphQLModule"
                        },
                        {
                            "name": "RaisedVsSpentBarModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "RaisedVsSpentGQLComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-9ed875548e4e949c418b6ce8aa9bff71438c8ba5ae3be7e0e95795a269f6ced818bdf85f6287456ea1f6c3156b396563746812a188034bf82f0517fea1d7446a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TopCategoriesTableComponent } from './components/top-categories-table/top-categories-table.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { SidenavService } from './services/sidenav.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TopCategoriesTableComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n  ],\r\n  exports: [\r\n    TopCategoriesTableComponent,\r\n  ],\r\n  providers: [SidenavService]\r\n})\r\nexport class SharedModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "SidenavService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TopCategoriesTableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TopCategoriesTableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TotalSpentDonutModule",
            "id": "module-TotalSpentDonutModule-93a6cbc1231804f600f8ac107d52fd9c192c9b622227b88892547e19aea317c564aa06612fc77380df7877fc13325a8e45766d131164907d46f3484ed8570c6e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\n\r\nimport { TotalSpentDonutComponent } from './total-spent-donut.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TotalSpentDonutComponent,\r\n  ],\r\n  imports: [\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n  ],\r\n  exports: [\r\n    TotalSpentDonutComponent,\r\n  ],\r\n  providers: []\r\n})\r\nexport class TotalSpentDonutModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TotalSpentDonutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "VvChartsModule",
            "id": "module-VvChartsModule-3a912a0b496a3c7d05c47ed3f605dc26081831f97cf5e14bca2edb53d373c28cd31689c8c2007a04ecf1e8bdcdd344f4a042671294a375a0e732cba48a9d9e50",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/vv-charts/vv-charts.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\n\r\nimport { ContributionsByGroupTableComponent } from './contributions-by-group-table/contributions-by-group-table.component';\r\nimport { RoundCurrencyPipe } from './round-currency.pipe';\r\nimport { TotalSpentDonutComponent } from './total-spent-donut/total-spent-donut.component';\r\nimport { RaisedByIndustryBarComponent } from './raised-by-industry-bar/raised-by-industry-bar.component';\r\nimport { RaisedByLocationBarComponent } from './raised-by-location-bar/raised-by-location-bar.component';\r\nimport { RaisedByOutsideMoneyBarComponent } from './raised-by-outside-money-bar/raised-by-outside-money-bar.component';\r\nimport { OutsideSpendingBarComponent } from './outside-spending-bar/outside-spending-bar.component';\r\nimport { TotalRaisedBarComponent } from './total-raised-bar/total-raised-bar.component';\r\nimport { RaisedVsSpentBarComponent } from './raised-vs-spent-bar/raised-vs-spent-bar.component';\r\nimport { RaisedInVsOutDonutComponent } from './raised-in-vs-out-donut/raised-in-vs-out-donut.component';\r\nimport { OutsideMoneyStackedBarComponent } from './outside-money-stacked-bar/outside-money-stacked-bar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ContributionsByGroupTableComponent,\r\n    RoundCurrencyPipe,\r\n    TotalSpentDonutComponent,\r\n    RaisedByIndustryBarComponent,\r\n    RaisedByLocationBarComponent,\r\n    RaisedByOutsideMoneyBarComponent,\r\n    OutsideSpendingBarComponent,\r\n    TotalRaisedBarComponent,\r\n    RaisedVsSpentBarComponent,\r\n    RaisedInVsOutDonutComponent,\r\n    OutsideMoneyStackedBarComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    FontAwesomeModule,\r\n    ChartsModule,\r\n    NgxEchartsModule.forRoot({\r\n      echarts: () => import('echarts'),\r\n    }),\r\n  ],\r\n  exports: [\r\n    ContributionsByGroupTableComponent,\r\n    TotalSpentDonutComponent,\r\n    RaisedByIndustryBarComponent,\r\n    RaisedByLocationBarComponent,\r\n    RaisedByOutsideMoneyBarComponent,\r\n    OutsideSpendingBarComponent,\r\n    TotalRaisedBarComponent,\r\n    RaisedVsSpentBarComponent,\r\n    RaisedInVsOutDonutComponent,\r\n    OutsideMoneyStackedBarComponent,\r\n  ],\r\n  providers: [RoundCurrencyPipe]\r\n})\r\nexport class VvChartsModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ContributionsByGroupTableComponent"
                        },
                        {
                            "name": "OutsideMoneyStackedBarComponent"
                        },
                        {
                            "name": "OutsideSpendingBarComponent"
                        },
                        {
                            "name": "RaisedByIndustryBarComponent"
                        },
                        {
                            "name": "RaisedByLocationBarComponent"
                        },
                        {
                            "name": "RaisedByOutsideMoneyBarComponent"
                        },
                        {
                            "name": "RaisedInVsOutDonutComponent"
                        },
                        {
                            "name": "RaisedVsSpentBarComponent"
                        },
                        {
                            "name": "RoundCurrencyPipe"
                        },
                        {
                            "name": "TotalRaisedBarComponent"
                        },
                        {
                            "name": "TotalSpentDonutComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ContributionsByGroupTableComponent"
                        },
                        {
                            "name": "OutsideMoneyStackedBarComponent"
                        },
                        {
                            "name": "OutsideSpendingBarComponent"
                        },
                        {
                            "name": "RaisedByIndustryBarComponent"
                        },
                        {
                            "name": "RaisedByLocationBarComponent"
                        },
                        {
                            "name": "RaisedByOutsideMoneyBarComponent"
                        },
                        {
                            "name": "RaisedInVsOutDonutComponent"
                        },
                        {
                            "name": "RaisedVsSpentBarComponent"
                        },
                        {
                            "name": "TotalRaisedBarComponent"
                        },
                        {
                            "name": "TotalSpentDonutComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AmountOver999",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AmountOver9999",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AmountOver99999",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AmountOver999999",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "AmountsUnder1000",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "BothZero",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 0,\r\n    spent: 0,\r\n  },\r\n})"
            },
            {
                "name": "ByIndustry",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ByLocation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details/details.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 200,\r\n    spent: 300,\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 2000, percent: 20, color: '#800000', name: 'Expenditure A',},\r\n      { id: '1', value: 3000, percent: 30, color: '#b30000', name: 'Expenditure B',},\r\n      { id: '2', value: 4000, percent: 40, color: '#cc0000', name: 'Expenditure C',},\r\n      { id: '3', value: 5000, percent: 50, color: '#ff0000', name: 'Expenditure D',},\r\n      { id: '4', value: 6000, percent: 60, color: '#ff9999', name: 'Expenditure E',},\r\n    ]\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/top-categories-table/top-categories-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultColors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DuplicatedIndustries",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.db-remote.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'https://opensandiego-voters-voice.herokuapp.com'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  apiUrl: 'https://opensandiego-voters-voice.herokuapp.com'\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000'\r\n}"
            },
            {
                "name": "EqualInAndOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ExpandedCardView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "fakeActivatedRoute",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\r\n} as ActivatedRoute"
            },
            {
                "name": "fakeActivatedRoute",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "{\r\n} as ActivatedRoute"
            },
            {
                "name": "FiveIndustries",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FiveIndustries",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GreenText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GreenText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GreyBackgroundWhiteText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HighInsideLowOutside",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HundredThousands",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 654321,\r\n    spent: 543210,\r\n  },\r\n})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LargeDifferenceFavoringInside",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LargeDifferenceFavoringOutside",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LargerRaised",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 654321,\r\n    spent: 54321,\r\n  },\r\n})"
            },
            {
                "name": "LargerSpent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 650,\r\n    spent: 50321,\r\n  },\r\n})"
            },
            {
                "name": "local_dev_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/graphql/graphql.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'http://localhost:3000'"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LowInsideHighOutside",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LowOutsideFitOverLap1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LowOutsideFitOverLap2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Millions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 5432109,\r\n    spent: 6543210,\r\n  },\r\n})"
            },
            {
                "name": "MinimalOutsideFit1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MinimalOutsideFit2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "mockCandidate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Candidate",
                "defaultValue": "{\r\n  id: 'mock|id',\r\n  full_name: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  image_url: null,\r\n  website: 'https://www.google.com/',\r\n  agency: 'City of San Diego',\r\n  office: 'Mayor',\r\n  district: null,\r\n  year: '2020',\r\n  in_general_election: true,\r\n  full_office_name: 'Mayor San Diego',\r\n  jurisdiction: 'City',\r\n  total_contributions: '150000',\r\n  contributor_count: '3250',\r\n}"
            },
            {
                "name": "mockCandidateCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate-card.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CandidateCard",
                "defaultValue": "{\r\n  id: 'mock|id',\r\n  name: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  candidateImgURL: null,\r\n  website: 'https://www.google.com/',\r\n  office: 'Mayor',\r\n  district: null,\r\n  year: '2020',\r\n  raised: '150000',\r\n  donors: '3250',\r\n}"
            },
            {
                "name": "mockCandidateDetailsHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.mock-candidate-details.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CandidateDetailsHeader",
                "defaultValue": "{\r\n  id: 'mock|id',\r\n  candidateName: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  imageUrl: null,\r\n  website: 'https://www.google.com/',\r\n  raised: '150000',\r\n  donors: '3250',\r\n  averageDonation: '250',\r\n}"
            },
            {
                "name": "mockCandidateQuickView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.mock-candidate.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CandidateQuickView",
                "defaultValue": "{\r\n  id: 'mock|id',\r\n  raisedVsSpent: {\r\n    id: 'mock|id',\r\n    raised: '150000',\r\n    spent: '170000',\r\n    averageDonation: '1237',\r\n  },\r\n  donationsByGroupData: {\r\n    id: 'mock|id',\r\n    groups: [\r\n    {\r\n      name: 'ABC 1',\r\n      amount: '12345',\r\n      percent: '50',\r\n    },\r\n    {\r\n      name: 'ABC 2',\r\n      amount: '1234',\r\n      percent: '30',\r\n    },\r\n    {\r\n      name: 'ABC 3',\r\n      amount: '123',\r\n      percent: '10',\r\n    },\r\n    {\r\n      name: 'ABC 4',\r\n      amount: '12',\r\n      percent: '5',\r\n    },\r\n    {\r\n      name: 'ABC 5',\r\n      amount: '1',\r\n      percent: '1',\r\n    },\r\n  ],\r\n  },\r\n  raisedInOut: {\r\n    id: 'mock|id',\r\n    inside: '12345',\r\n    outside: '4321',\r\n    areaName: 'City of San Diego',\r\n    jurisdiction: 'City',\r\n    // jurisdictionSuffix: '1',\r\n  },\r\n  outsideMoney: {\r\n    id: 'mock|id',\r\n    support: '56789',\r\n    oppose: '9876',\r\n  },\r\n}"
            },
            {
                "name": "mockHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CandidateDetailsHeader",
                "defaultValue": "{\r\n    id: 'mock|id',\r\n    imageUrl: null,\r\n    candidateName: 'John Jones',\r\n    description: 'Former Fire Fighter and Active Reservist',\r\n    website: 'https://www.google.com/',\r\n    raised: '150000',\r\n    donors: '3250',\r\n    averageDonation: '200',\r\n}"
            },
            {
                "name": "OfficesListView",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OneCategory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 200,    percent: 1, color: '#800000', name: 'Books', code: 'ABC',},\r\n    ]\r\n  }\r\n})"
            },
            {
                "name": "OneEmptyCode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 200,    percent: 30, color: '#800000', name: 'Books', code: 'ABC',},\r\n      { id: '1', value: 20000,  percent: 40, color: '#b30000', name: 'Salaries', code: 'DEF',},\r\n      { id: '3', value: 7000,   percent: 40, color: '#ff0000', name: 'Empty string for code', code: '',},\r\n    ]\r\n  }\r\n})"
            },
            {
                "name": "OneIndustry",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OneIndustry",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OneNoNameNoCode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 200,    percent: 30, color: '#800000', name: 'Books', code: 'ABC',},\r\n      { id: '1', value: 20000,  percent: 40, color: '#b30000', name: 'Salaries', code: 'DEF',},\r\n      { id: '3', value: 7000,   percent: 40, color: '#ff0000',},\r\n    ]\r\n  }\r\n})"
            },
            {
                "name": "OutsideMoney",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RaisedNull",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: null,\r\n    spent: 4321,\r\n  },\r\n})"
            },
            {
                "name": "remote_prod_url",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/graphql/graphql.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://opensandiego-voters-voice.herokuapp.com'"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Sample1",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sample1NoCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 1000, percent: 1, color: '#800000', name: 'Expenditure text',},\r\n      { id: '1', value: 9000, percent: 9, color: '#b30000', name: 'Expenditure with more text',},\r\n      { id: '2', value: 30000, percent: 30, color: '#cc0000', name: 'Expenditure with even more text',},\r\n      { id: '3', value: 40000, percent: 40, color: '#ff0000', name: 'Expenditure with yet some more text',},\r\n      { id: '4', value: 50000, percent: 50, color: '#ff9999', name: 'Expenditure 50',},\r\n    ]\r\n  }\r\n})"
            },
            {
                "name": "Sample2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sample2NoCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 200,    percent: 1, color: '#800000', name: 'Books',},\r\n      { id: '1', value: 20000,  percent: 9, color: '#b30000', name: 'Salaries',},\r\n      { id: '2', value: 1000,   percent: 30, color: '#cc0000', name: 'Marketing',},\r\n      { id: '3', value: 7000,   percent: 40, color: '#ff0000', name: 'Lots of Stuff',},\r\n      { id: '4', value: 5000,   percent: 50, color: '#ff9999', name: 'More Stuff',},\r\n      { id: '4', value: 130,    percent: 50, color: '#ff9999', name: 'Stuff',},\r\n      { id: '4', value: 1200,   percent: 50, color: '#ff9999', name: 'Other',},\r\n    ]\r\n  }\r\n})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "spendingCodes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-total-spent/spending-codes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any[]",
                "defaultValue": "[\r\n  [ 'CMP', 'campaign paraphernalia/misc.'],\r\n  [ 'CNS', 'campaign consultants'],\r\n  [ 'CTB', 'contribution'], // (explain nonmonetary)*\r\n  [ 'CVC', 'civic donations'],\r\n  [ 'FIL', 'candidate filing/ballot fees'],\r\n  [ 'FND', 'fundraising events'],\r\n  [ 'IND', 'independent expenditure supporting/opposing others'], // (explain)*\r\n  [ 'LEG', 'legal defense'],\r\n  [ 'LIT', 'campaign literature and mailings'],\r\n  [ 'MBR', 'member communications'],\r\n  [ 'MTG', 'meetings and appearances'],\r\n  [ 'OFC', 'office expenses'],\r\n  [ 'PET', 'petition circulating'],\r\n  [ 'PHO', 'phone banks'],\r\n  [ 'POL', 'polling and survey research'],\r\n  [ 'POS', 'postage, delivery and messenger services'],\r\n  [ 'PRO', 'professional services (legal, accounting)'],\r\n  [ 'PRT', 'print ads'],\r\n  [ 'RAD', 'radio airtime and production costs'],\r\n  [ 'RFD', 'returned contributions'],\r\n  [ 'SAL', 'campaign workers’ salaries'],\r\n  [ 'TEL', 't.v. or cable airtime and production costs'],\r\n  [ 'TRC', 'candidate travel, lodging, and meals'],\r\n  [ 'TRS', 'staff/spouse travel, lodging, and meals'],\r\n  [ 'TSF', 'transfer between committees of the same candidate/sponsor'],\r\n  [ 'VOT', 'voter registration'],\r\n  [ 'WEB', 'information technology costs (internet, e-mail)'],\r\n]"
            },
            {
                "name": "SpentNoDefined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 1234,\r\n  },\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CandidateDetailsHeaderComponent>",
                "defaultValue": "(args: CandidateDetailsHeaderComponent) => ({\r\n  moduleMetadata: {\r\n    providers: [\r\n      { provide: CandidateDetailsService, useClass: MockCandidateDetailsService },\r\n      // See: https://www.joshuacolvin.net/mocking-activated-route-data-in-angular/\r\n      { \r\n        provide: ActivatedRoute,\r\n        useValue: {\r\n          paramMap: of({\r\n            // candidateId: '',\r\n            get: (key: string) => {\r\n              switch (key) {\r\n                case 'candidateId':\r\n                  return '';\r\n              }\r\n            }\r\n          }),\r\n        },\r\n      }\r\n    ]\r\n  },\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details/details.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsComponent>",
                "defaultValue": "(args: DetailsComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsContainerOutsideMoneyComponent>",
                "defaultValue": "(args: DetailsContainerOutsideMoneyComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsRaisedByIndustryComponent>",
                "defaultValue": "(args: DetailsRaisedByIndustryComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsTabOutsideMoneyComponent>",
                "defaultValue": "(args: DetailsTabOutsideMoneyComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsTabRaisedByIndustryComponent>",
                "defaultValue": "(args: DetailsTabRaisedByIndustryComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsTabRaisedByLocationComponent>",
                "defaultValue": "(args: DetailsTabRaisedByLocationComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsTabTitleComponent>",
                "defaultValue": "(args: DetailsTabTitleComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CandidateCardComponent>",
                "defaultValue": "(args: CandidateCardComponent) => ({\r\n  moduleMetadata: {\r\n    providers: [\r\n      { provide: CandidateCardService, useClass: MockCandidateCardService },\r\n      { provide: ActivatedRoute, useValue: fakeActivatedRoute },\r\n    ],\r\n    imports: [\r\n      RouterTestingModule,\r\n    ],\r\n    exports: [\r\n    ]\r\n  },\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ContributionsByGroupComponent>",
                "defaultValue": "(args: ContributionsByGroupComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpandedChartTitleComponent>",
                "defaultValue": "(args: ExpandedChartTitleComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpandedAverageDonationComponent>",
                "defaultValue": "(args: ExpandedAverageDonationComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpandedQuickViewComponent>",
                "defaultValue": "(args: ExpandedQuickViewComponent) => ({\r\n  moduleMetadata: {\r\n    providers: [\r\n      { provide: CandidateQuickViewService, useClass: MockCandidateQuickViewService },\r\n    ],\r\n    imports: [\r\n    ],\r\n    exports: [\r\n    ]\r\n  },\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpandedOutsideMoneyComponent>",
                "defaultValue": "(args: ExpandedOutsideMoneyComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpandedRaisedInVsOutComponent>",
                "defaultValue": "(args: ExpandedRaisedInVsOutComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ExpandedRaisedVsSpentComponent>",
                "defaultValue": "(args: ExpandedRaisedVsSpentComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ContributionsByGroupTableComponent>",
                "defaultValue": "(args: ContributionsByGroupTableComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<OutsideMoneyStackedBarComponent>",
                "defaultValue": "(args: OutsideMoneyStackedBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<OutsideSpendingBarComponent>",
                "defaultValue": "(args: OutsideSpendingBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RaisedByIndustryBarComponent>",
                "defaultValue": "(args: RaisedByIndustryBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RaisedByLocationBarComponent>",
                "defaultValue": "(args: RaisedByLocationBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RaisedByOutsideMoneyBarComponent>",
                "defaultValue": "(args: RaisedByOutsideMoneyBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RaisedInVsOutDonutComponent>",
                "defaultValue": "(args: RaisedInVsOutDonutComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<RaisedVsSpentBarComponent>",
                "defaultValue": "(args: RaisedVsSpentBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TotalRaisedBarComponent>",
                "defaultValue": "(args: TotalRaisedBarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TotalSpentDonutComponent>",
                "defaultValue": "(args: TotalSpentDonutComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsRaisedSpentSummaryComponent>",
                "defaultValue": "(args: DetailsRaisedSpentSummaryComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsTabRaisedVSpentComponent>",
                "defaultValue": "(args: DetailsTabRaisedVSpentComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsTotalSpentComponent>",
                "defaultValue": "(args: DetailsTotalSpentComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DetailsTotalRaisedComponent>",
                "defaultValue": "(args: DetailsTotalRaisedComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/top-categories-table/top-categories-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TopCategoriesTableComponent>",
                "defaultValue": "(args: TopCategoriesTableComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "TenMillions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 65432109,\r\n    spent: 54321098,\r\n  },\r\n})"
            },
            {
                "name": "TenThousands",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 30001,\r\n    spent: 70002,\r\n  },\r\n})"
            },
            {
                "name": "Thousands",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    raised: 6001,\r\n    spent: 4002,\r\n  },\r\n})"
            },
            {
                "name": "TwoCategories",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 300,    percent: 30, color: '#800000', name: 'Books', code: 'ABC',},\r\n      { id: '1', value: 4000,  percent: 40, color: '#b30000', name: 'Salaries', code: 'DEF',},\r\n    ]\r\n  }\r\n})"
            },
            {
                "name": "TwoIndustries",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "TwoIndustries",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "uri",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/graphql/graphql.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`${local_dev_url}/graphql`"
            }
        ],
        "functions": [
            {
                "name": "getCompactFormattedCurrency",
                "file": "src/app/shared/number-formatter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "decimalDigits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "decimalDigits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getCompactFormattedCurrency",
                "file": "projects/lib-ui-charts/src/lib/shared/number-formatter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "decimalDigits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "decimalDigits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getFormattedCurrency",
                "file": "src/app/shared/number-formatter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Formats number as a currency and uses compact format (for example: 10K) only \nwhen value is greater than 9999.</p>\n",
                "args": [
                    {
                        "name": "value",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "maxDecimalDigits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "maxDecimalDigits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getFormattedCurrency",
                "file": "projects/lib-ui-charts/src/lib/shared/number-formatter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Formats number as a currency and uses compact format (for example: 10K) only \nwhen value is greater than 9999.</p>\n",
                "args": [
                    {
                        "name": "value",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "maxDecimalDigits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0"
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "maxDecimalDigits",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "0",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "SortOrder",
                "childs": [
                    {
                        "name": "High",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "Low",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.ts"
            }
        ],
        "groupedVariables": {
            "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts": [
                {
                    "name": "AmountOver999",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AmountOver9999",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AmountOver99999",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AmountOver999999",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "AmountsUnder1000",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "EqualInAndOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HighInsideLowOutside",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LargeDifferenceFavoringInside",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LargeDifferenceFavoringOutside",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LowInsideHighOutside",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LowOutsideFitOverLap1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LowOutsideFitOverLap2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MinimalOutsideFit1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MinimalOutsideFit2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RaisedInVsOutDonutComponent>",
                    "defaultValue": "(args: RaisedInVsOutDonutComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts": [
                {
                    "name": "BothZero",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 0,\r\n    spent: 0,\r\n  },\r\n})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 200,\r\n    spent: 300,\r\n  },\r\n})"
                },
                {
                    "name": "HundredThousands",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 654321,\r\n    spent: 543210,\r\n  },\r\n})"
                },
                {
                    "name": "LargerRaised",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 654321,\r\n    spent: 54321,\r\n  },\r\n})"
                },
                {
                    "name": "LargerSpent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 650,\r\n    spent: 50321,\r\n  },\r\n})"
                },
                {
                    "name": "Millions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 5432109,\r\n    spent: 6543210,\r\n  },\r\n})"
                },
                {
                    "name": "RaisedNull",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: null,\r\n    spent: 4321,\r\n  },\r\n})"
                },
                {
                    "name": "SpentNoDefined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 1234,\r\n  },\r\n})"
                },
                {
                    "name": "TenMillions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 65432109,\r\n    spent: 54321098,\r\n  },\r\n})"
                },
                {
                    "name": "TenThousands",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 30001,\r\n    spent: 70002,\r\n  },\r\n})"
                },
                {
                    "name": "Thousands",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    raised: 6001,\r\n    spent: 4002,\r\n  },\r\n})"
                }
            ],
            "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts": [
                {
                    "name": "ByIndustry",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ByLocation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OutsideMoney",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsTabTitleComponent>",
                    "defaultValue": "(args: DetailsTabTitleComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "projects/lib-ui-charts/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "fakeActivatedRoute",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\r\n} as ActivatedRoute"
                },
                {
                    "name": "mockHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CandidateDetailsHeader",
                    "defaultValue": "{\r\n    id: 'mock|id',\r\n    imageUrl: null,\r\n    candidateName: 'John Jones',\r\n    description: 'Former Fire Fighter and Active Reservist',\r\n    website: 'https://www.google.com/',\r\n    raised: '150000',\r\n    donors: '3250',\r\n    averageDonation: '200',\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CandidateDetailsHeaderComponent>",
                    "defaultValue": "(args: CandidateDetailsHeaderComponent) => ({\r\n  moduleMetadata: {\r\n    providers: [\r\n      { provide: CandidateDetailsService, useClass: MockCandidateDetailsService },\r\n      // See: https://www.joshuacolvin.net/mocking-activated-route-data-in-angular/\r\n      { \r\n        provide: ActivatedRoute,\r\n        useValue: {\r\n          paramMap: of({\r\n            // candidateId: '',\r\n            get: (key: string) => {\r\n              switch (key) {\r\n                case 'candidateId':\r\n                  return '';\r\n              }\r\n            }\r\n          }),\r\n        },\r\n      }\r\n    ]\r\n  },\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-details/details/details.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details/details.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details/details.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsComponent>",
                    "defaultValue": "(args: DetailsComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsContainerOutsideMoneyComponent>",
                    "defaultValue": "(args: DetailsContainerOutsideMoneyComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FiveIndustries",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OneIndustry",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsRaisedByIndustryComponent>",
                    "defaultValue": "(args: DetailsRaisedByIndustryComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "TwoIndustries",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsTabOutsideMoneyComponent>",
                    "defaultValue": "(args: DetailsTabOutsideMoneyComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsTabRaisedByIndustryComponent>",
                    "defaultValue": "(args: DetailsTabRaisedByIndustryComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsTabRaisedByLocationComponent>",
                    "defaultValue": "(args: DetailsTabRaisedByLocationComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate/candidate-card/candidate-card.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ExpandedCardView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "fakeActivatedRoute",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "{\r\n} as ActivatedRoute"
                },
                {
                    "name": "OfficesListView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CandidateCardComponent>",
                    "defaultValue": "(args: CandidateCardComponent) => ({\r\n  moduleMetadata: {\r\n    providers: [\r\n      { provide: CandidateCardService, useClass: MockCandidateCardService },\r\n      { provide: ActivatedRoute, useValue: fakeActivatedRoute },\r\n    ],\r\n    imports: [\r\n      RouterTestingModule,\r\n    ],\r\n    exports: [\r\n    ]\r\n  },\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ContributionsByGroupComponent>",
                    "defaultValue": "(args: ContributionsByGroupComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "GreenText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpandedChartTitleComponent>",
                    "defaultValue": "(args: ExpandedChartTitleComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpandedAverageDonationComponent>",
                    "defaultValue": "(args: ExpandedAverageDonationComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpandedQuickViewComponent>",
                    "defaultValue": "(args: ExpandedQuickViewComponent) => ({\r\n  moduleMetadata: {\r\n    providers: [\r\n      { provide: CandidateQuickViewService, useClass: MockCandidateQuickViewService },\r\n    ],\r\n    imports: [\r\n    ],\r\n    exports: [\r\n    ]\r\n  },\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpandedOutsideMoneyComponent>",
                    "defaultValue": "(args: ExpandedOutsideMoneyComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpandedRaisedInVsOutComponent>",
                    "defaultValue": "(args: ExpandedRaisedInVsOutComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ExpandedRaisedVsSpentComponent>",
                    "defaultValue": "(args: ExpandedRaisedVsSpentComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ContributionsByGroupTableComponent>",
                    "defaultValue": "(args: ContributionsByGroupTableComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<OutsideMoneyStackedBarComponent>",
                    "defaultValue": "(args: OutsideMoneyStackedBarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultColors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "GreenText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "GreyBackgroundWhiteText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<OutsideSpendingBarComponent>",
                    "defaultValue": "(args: OutsideSpendingBarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DuplicatedIndustries",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FiveIndustries",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OneIndustry",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RaisedByIndustryBarComponent>",
                    "defaultValue": "(args: RaisedByIndustryBarComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "TwoIndustries",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RaisedByLocationBarComponent>",
                    "defaultValue": "(args: RaisedByLocationBarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RaisedByOutsideMoneyBarComponent>",
                    "defaultValue": "(args: RaisedByOutsideMoneyBarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<RaisedVsSpentBarComponent>",
                    "defaultValue": "(args: RaisedVsSpentBarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/vv-charts/total-raised-bar/total-raised-bar.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TotalRaisedBarComponent>",
                    "defaultValue": "(args: TotalRaisedBarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Sample1",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Sample2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TotalSpentDonutComponent>",
                    "defaultValue": "(args: TotalSpentDonutComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 2000, percent: 20, color: '#800000', name: 'Expenditure A',},\r\n      { id: '1', value: 3000, percent: 30, color: '#b30000', name: 'Expenditure B',},\r\n      { id: '2', value: 4000, percent: 40, color: '#cc0000', name: 'Expenditure C',},\r\n      { id: '3', value: 5000, percent: 50, color: '#ff0000', name: 'Expenditure D',},\r\n      { id: '4', value: 6000, percent: 60, color: '#ff9999', name: 'Expenditure E',},\r\n    ]\r\n  },\r\n})"
                },
                {
                    "name": "OneCategory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 200,    percent: 1, color: '#800000', name: 'Books', code: 'ABC',},\r\n    ]\r\n  }\r\n})"
                },
                {
                    "name": "OneEmptyCode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 200,    percent: 30, color: '#800000', name: 'Books', code: 'ABC',},\r\n      { id: '1', value: 20000,  percent: 40, color: '#b30000', name: 'Salaries', code: 'DEF',},\r\n      { id: '3', value: 7000,   percent: 40, color: '#ff0000', name: 'Empty string for code', code: '',},\r\n    ]\r\n  }\r\n})"
                },
                {
                    "name": "OneNoNameNoCode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 200,    percent: 30, color: '#800000', name: 'Books', code: 'ABC',},\r\n      { id: '1', value: 20000,  percent: 40, color: '#b30000', name: 'Salaries', code: 'DEF',},\r\n      { id: '3', value: 7000,   percent: 40, color: '#ff0000',},\r\n    ]\r\n  }\r\n})"
                },
                {
                    "name": "Sample1NoCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 1000, percent: 1, color: '#800000', name: 'Expenditure text',},\r\n      { id: '1', value: 9000, percent: 9, color: '#b30000', name: 'Expenditure with more text',},\r\n      { id: '2', value: 30000, percent: 30, color: '#cc0000', name: 'Expenditure with even more text',},\r\n      { id: '3', value: 40000, percent: 40, color: '#ff0000', name: 'Expenditure with yet some more text',},\r\n      { id: '4', value: 50000, percent: 50, color: '#ff9999', name: 'Expenditure 50',},\r\n    ]\r\n  }\r\n})"
                },
                {
                    "name": "Sample2NoCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 200,    percent: 1, color: '#800000', name: 'Books',},\r\n      { id: '1', value: 20000,  percent: 9, color: '#b30000', name: 'Salaries',},\r\n      { id: '2', value: 1000,   percent: 30, color: '#cc0000', name: 'Marketing',},\r\n      { id: '3', value: 7000,   percent: 40, color: '#ff0000', name: 'Lots of Stuff',},\r\n      { id: '4', value: 5000,   percent: 50, color: '#ff9999', name: 'More Stuff',},\r\n      { id: '4', value: 130,    percent: 50, color: '#ff9999', name: 'Stuff',},\r\n      { id: '4', value: 1200,   percent: 50, color: '#ff9999', name: 'Other',},\r\n    ]\r\n  }\r\n})"
                },
                {
                    "name": "TwoCategories",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\r\n  props: {\r\n    spendingCategories: [\r\n      { id: '0', value: 300,    percent: 30, color: '#800000', name: 'Books', code: 'ABC',},\r\n      { id: '1', value: 4000,  percent: 40, color: '#b30000', name: 'Salaries', code: 'DEF',},\r\n    ]\r\n  }\r\n})"
                }
            ],
            "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsRaisedSpentSummaryComponent>",
                    "defaultValue": "(args: DetailsRaisedSpentSummaryComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsTabRaisedVSpentComponent>",
                    "defaultValue": "(args: DetailsTabRaisedVSpentComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsTotalSpentComponent>",
                    "defaultValue": "(args: DetailsTotalSpentComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DetailsTotalRaisedComponent>",
                    "defaultValue": "(args: DetailsTotalRaisedComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/shared/components/top-categories-table/top-categories-table.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/top-categories-table/top-categories-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/top-categories-table/top-categories-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TopCategoriesTableComponent>",
                    "defaultValue": "(args: TopCategoriesTableComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.db-remote.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.db-remote.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'https://opensandiego-voters-voice.herokuapp.com'\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  apiUrl: 'https://opensandiego-voters-voice.herokuapp.com'\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  apiUrl: 'http://localhost:3000'\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/graphql/graphql.module.ts": [
                {
                    "name": "local_dev_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/graphql/graphql.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'http://localhost:3000'"
                },
                {
                    "name": "remote_prod_url",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/graphql/graphql.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://opensandiego-voters-voice.herokuapp.com'"
                },
                {
                    "name": "uri",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/graphql/graphql.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`${local_dev_url}/graphql`"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate.service.ts": [
                {
                    "name": "mockCandidate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Candidate",
                    "defaultValue": "{\r\n  id: 'mock|id',\r\n  full_name: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  image_url: null,\r\n  website: 'https://www.google.com/',\r\n  agency: 'City of San Diego',\r\n  office: 'Mayor',\r\n  district: null,\r\n  year: '2020',\r\n  in_general_election: true,\r\n  full_office_name: 'Mayor San Diego',\r\n  jurisdiction: 'City',\r\n  total_contributions: '150000',\r\n  contributor_count: '3250',\r\n}"
                }
            ],
            "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate-card.service.ts": [
                {
                    "name": "mockCandidateCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate-card.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CandidateCard",
                    "defaultValue": "{\r\n  id: 'mock|id',\r\n  name: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  candidateImgURL: null,\r\n  website: 'https://www.google.com/',\r\n  office: 'Mayor',\r\n  district: null,\r\n  year: '2020',\r\n  raised: '150000',\r\n  donors: '3250',\r\n}"
                }
            ],
            "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.mock-candidate-details.service.ts": [
                {
                    "name": "mockCandidateDetailsHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.mock-candidate-details.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CandidateDetailsHeader",
                    "defaultValue": "{\r\n  id: 'mock|id',\r\n  candidateName: 'Johnson Jones',\r\n  description: 'Place Holder for a Description',  \r\n  imageUrl: null,\r\n  website: 'https://www.google.com/',\r\n  raised: '150000',\r\n  donors: '3250',\r\n  averageDonation: '250',\r\n}"
                }
            ],
            "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.mock-candidate.service.ts": [
                {
                    "name": "mockCandidateQuickView",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.mock-candidate.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CandidateQuickView",
                    "defaultValue": "{\r\n  id: 'mock|id',\r\n  raisedVsSpent: {\r\n    id: 'mock|id',\r\n    raised: '150000',\r\n    spent: '170000',\r\n    averageDonation: '1237',\r\n  },\r\n  donationsByGroupData: {\r\n    id: 'mock|id',\r\n    groups: [\r\n    {\r\n      name: 'ABC 1',\r\n      amount: '12345',\r\n      percent: '50',\r\n    },\r\n    {\r\n      name: 'ABC 2',\r\n      amount: '1234',\r\n      percent: '30',\r\n    },\r\n    {\r\n      name: 'ABC 3',\r\n      amount: '123',\r\n      percent: '10',\r\n    },\r\n    {\r\n      name: 'ABC 4',\r\n      amount: '12',\r\n      percent: '5',\r\n    },\r\n    {\r\n      name: 'ABC 5',\r\n      amount: '1',\r\n      percent: '1',\r\n    },\r\n  ],\r\n  },\r\n  raisedInOut: {\r\n    id: 'mock|id',\r\n    inside: '12345',\r\n    outside: '4321',\r\n    areaName: 'City of San Diego',\r\n    jurisdiction: 'City',\r\n    // jurisdictionSuffix: '1',\r\n  },\r\n  outsideMoney: {\r\n    id: 'mock|id',\r\n    support: '56789',\r\n    oppose: '9876',\r\n  },\r\n}"
                }
            ],
            "src/app/details-raised-spent/components/details-total-spent/spending-codes.ts": [
                {
                    "name": "spendingCodes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/details-raised-spent/components/details-total-spent/spending-codes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "defaultValue": "[\r\n  [ 'CMP', 'campaign paraphernalia/misc.'],\r\n  [ 'CNS', 'campaign consultants'],\r\n  [ 'CTB', 'contribution'], // (explain nonmonetary)*\r\n  [ 'CVC', 'civic donations'],\r\n  [ 'FIL', 'candidate filing/ballot fees'],\r\n  [ 'FND', 'fundraising events'],\r\n  [ 'IND', 'independent expenditure supporting/opposing others'], // (explain)*\r\n  [ 'LEG', 'legal defense'],\r\n  [ 'LIT', 'campaign literature and mailings'],\r\n  [ 'MBR', 'member communications'],\r\n  [ 'MTG', 'meetings and appearances'],\r\n  [ 'OFC', 'office expenses'],\r\n  [ 'PET', 'petition circulating'],\r\n  [ 'PHO', 'phone banks'],\r\n  [ 'POL', 'polling and survey research'],\r\n  [ 'POS', 'postage, delivery and messenger services'],\r\n  [ 'PRO', 'professional services (legal, accounting)'],\r\n  [ 'PRT', 'print ads'],\r\n  [ 'RAD', 'radio airtime and production costs'],\r\n  [ 'RFD', 'returned contributions'],\r\n  [ 'SAL', 'campaign workers’ salaries'],\r\n  [ 'TEL', 't.v. or cable airtime and production costs'],\r\n  [ 'TRC', 'candidate travel, lodging, and meals'],\r\n  [ 'TRS', 'staff/spouse travel, lodging, and meals'],\r\n  [ 'TSF', 'transfer between committees of the same candidate/sponsor'],\r\n  [ 'VOT', 'voter registration'],\r\n  [ 'WEB', 'information technology costs (internet, e-mail)'],\r\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/number-formatter.ts": [
                {
                    "name": "getCompactFormattedCurrency",
                    "file": "src/app/shared/number-formatter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimalDigits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimalDigits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFormattedCurrency",
                    "file": "src/app/shared/number-formatter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Formats number as a currency and uses compact format (for example: 10K) only \nwhen value is greater than 9999.</p>\n",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "maxDecimalDigits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "maxDecimalDigits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/lib-ui-charts/src/lib/shared/number-formatter.ts": [
                {
                    "name": "getCompactFormattedCurrency",
                    "file": "projects/lib-ui-charts/src/lib/shared/number-formatter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "decimalDigits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "decimalDigits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFormattedCurrency",
                    "file": "projects/lib-ui-charts/src/lib/shared/number-formatter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Formats number as a currency and uses compact format (for example: 10K) only \nwhen value is greater than 9999.</p>\n",
                    "args": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "maxDecimalDigits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0"
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "maxDecimalDigits",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "0",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.ts": [
                {
                    "name": "SortOrder",
                    "childs": [
                        {
                            "name": "High",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "Low",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            },
            {
                "name": "routes",
                "filename": "src/app/public/public-routing.module.ts",
                "module": "PublicRoutingModule",
                "children": [
                    {
                        "path": "",
                        "resolve": {
                            "year": "YearResolverService"
                        },
                        "children": [
                            {
                                "path": "home",
                                "component": "SplashComponent"
                            },
                            {
                                "path": "",
                                "redirectTo": "/year/2022",
                                "pathMatch": "full"
                            }
                        ]
                    },
                    {
                        "path": "year/:year",
                        "data": {
                            "type": "year"
                        },
                        "resolve": {
                            "office": "OfficeSummaryResolverService"
                        },
                        "children": [
                            {
                                "path": "",
                                "data": {
                                    "type": ""
                                },
                                "component": "SplashComponent",
                                "children": [
                                    {
                                        "path": "",
                                        "component": "OfficeSummaryComponent"
                                    }
                                ]
                            },
                            {
                                "path": "office",
                                "data": {
                                    "breadcrumb": null,
                                    "startRoute": true,
                                    "type": ""
                                },
                                "loadChildren": "../office/office.module#OfficeModule",
                                "children": [
                                    {
                                        "kind": "module",
                                        "children": [
                                            {
                                                "name": "routes",
                                                "filename": "src/app/office/office-routing.module.ts",
                                                "module": "OfficeRoutingModule",
                                                "children": [
                                                    {
                                                        "path": ":office_name",
                                                        "children": "districts",
                                                        "data": {
                                                            "type": "office_prefix"
                                                        }
                                                    }
                                                ],
                                                "kind": "module"
                                            }
                                        ],
                                        "module": "OfficeModule"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "path": "splash",
                        "redirectTo": "",
                        "pathMatch": "full"
                    },
                    {
                        "path": "about",
                        "component": "AboutComponent"
                    },
                    {
                        "path": "faq",
                        "component": "FaqComponent"
                    },
                    {
                        "path": "under-construction",
                        "component": "UnderConstructionComponent"
                    },
                    {
                        "path": "404",
                        "component": "NotFoundComponent"
                    },
                    {
                        "path": "**",
                        "pathMatch": "full",
                        "redirectTo": "404"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/lib-ui-charts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LibUiChartsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/lib-ui-charts.models.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ExpenseCategory",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/lib-ui-charts.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LibUiChartsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BothZero",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HundredThousands",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargerRaised",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargerSpent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Millions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RaisedNull",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SpentNoDefined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TenMillions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TenThousands",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Thousands",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/raised-vs-spent-bar/raised-vs-spent-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RaisedVsSpentBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/shared/number-formatter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getCompactFormattedCurrency",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/shared/number-formatter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getFormattedCurrency",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneCategory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneEmptyCode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneNoNameNoCode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample1NoCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample2NoCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TwoCategories",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/lib/total-spent-donut/total-spent-donut.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TotalSpentDonutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/lib-ui-charts/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockCandidateDetailsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeActivatedRoute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/candidate-details-header/candidate-details-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CandidateDetailsHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.mock-candidate-details.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockCandidateDetailsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.mock-candidate-details.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCandidateDetailsHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-container-outside-money/details-container-outside-money.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsContainerOutsideMoneyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FiveIndustries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneIndustry",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TwoIndustries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-raised-by-industry/details-raised-by-industry.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsRaisedByIndustryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-outside-money/details-tab-outside-money.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsTabOutsideMoneyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-raised-by-industry/details-tab-raised-by-industry.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsTabRaisedByIndustryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-raised-by-location/details-tab-raised-by-location.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsTabRaisedByLocationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ByIndustry",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ByLocation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutsideMoney",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-title/details-tab-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details-tab-title/details-tab-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsTabTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details/details.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details/details.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-details/details/details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/contributions-by-group/contributions-by-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContributionsByGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-average-donation/expanded-average-donation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpandedAverageDonationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GreenText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-chart-title/expanded-chart-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpandedChartTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-outside-money/expanded-outside-money.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpandedOutsideMoneyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.mock-candidate.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockCandidateQuickViewService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.mock-candidate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCandidateQuickView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-quick-view/expanded-quick-view.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpandedQuickViewComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-raised-in-vs-out/expanded-raised-in-vs-out.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpandedRaisedInVsOutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate-quick-view/expanded-raised-vs-spent/expanded-raised-vs-spent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExpandedRaisedVsSpentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate-card.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockCandidateCardService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate-card.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCandidateCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate.service.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockCandidateService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.mock-candidate.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "mockCandidate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ExpandedCardView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fakeActivatedRoute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OfficesListView",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/candidate/candidate-card/candidate-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CandidateCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-raised-spent-summary/details-raised-spent-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsRaisedSpentSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-tab-raised-v-spent/details-tab-raised-v-spent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsTabRaisedVSpentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-total-raised/details-total-raised.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsTotalRaisedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-total-spent/details-total-spent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DetailsTotalSpentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/details-raised-spent/components/details-total-spent/spending-codes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "spendingCodes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/election-year-selector/election-year-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElectionYearSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/election-year-selector/election-year-selector.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Year",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql/graphql.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "local_dev_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql/graphql.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "remote_prod_url",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql/graphql.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "uri",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql/raised-vs-spent-gql/raised-vs-spent-gql.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RaisedVsSpentGQLComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql/raised-vs-spent-gql/raised-vs-spent-gql.query.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RaisedVsSpentGQL",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/graphql/raised-vs-spent-gql/raised-vs-spent-gql.query.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedVsSpent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation-menu/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation-menu/components/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation-menu/components/side-menu/side-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation-menu/interfaces/district.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "District",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/navigation-menu/services/side-menu.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SideMenuService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/office/components/card-list/card-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/office/components/office-districts/office-districts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfficeDistrictComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/office/components/office/office.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfficeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/office/components/office/office.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "pathParam",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/office/components/quick-view-container/quick-view-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuickViewContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/office/office-district-resolver.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OfficeDistrictResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/faq/faq.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FaqComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/not-found/not-found.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotFoundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/office-summary-card/office-summary-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfficeSummaryCardComponent",
                "coveragePercent": 14,
                "coverageCount": "1/7",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/office-summary/office-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OfficeSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/splash-hero/splash-hero.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SplashHeroComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/splash/splash.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SplashComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/public/components/under-construction/under-construction.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UnderConstructionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/public/interfaces/office-summary-with-route.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OfficeSummaryWithRoute",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/public/pipes/round-currency-display.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RoundCurrencyDisplayPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/public/resolvers/office-summary-resolver.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OfficeSummaryResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/public/resolvers/year-resolver.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "YearResolverService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/public/services/routing.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RoutingService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/top-categories-table/top-categories-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/top-categories-table/top-categories-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/top-categories-table/top-categories-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopCategoriesTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/top-categories-table/top-categories-table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Category",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/candidate.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Candidate",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/candidate.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateTree",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/interfaces/candidateCard.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateCard",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/number-formatter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getCompactFormattedCurrency",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/number-formatter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getFormattedCurrency",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/services/sidenav.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SidenavService",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-header.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateDetailsHeader",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-outside-money.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateDetailsOutsideMoney",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-outside-money.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-raised-group.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateDetailsRaisedByGroup",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-raised-group.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-raised-location.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateDetailsRaisedByLocation",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-raised-location.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Location",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-raised-spent.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateDetailsRaisedSpent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-raised-spent.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedGroup",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-raised-spent.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedSpentSummary",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate-details-raised-spent.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SpentGroup",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.card.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateCard",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.navigation.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateNavigation",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.quickview.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CandidateQuickView",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.quickview.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DonationsByGroup",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.quickview.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.quickview.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OutsideMoney",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.quickview.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedInOut",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.quickview.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedVsSpent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/candidate.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Candidate",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/elections.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Election",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/last-updated.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LastUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/office.summary.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OfficeSummary",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/interfaces/office.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Office",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/candidate.card.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CandidateCardService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/candidate.details.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CandidateDetailsService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/candidate.navigation.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CandidateNavigationService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/candidate.quickview.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CandidateQuickViewService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/candidate.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CandidateService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/candidate.service.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "options",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/election.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ElectionService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/last-updated.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LastUpdatedService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/office-summary.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OfficeSummaryService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/office.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OfficeService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/services/year.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "YearService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContributionsByGroupTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/contributions-by-group-table/contributions-by-group-table.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ContributionGroup",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/donationsByGroup.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DonationsByGroup",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/donationsByGroup.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Group",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/outsideMoney.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OutsideMoney",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/raisedInOut.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedInOut",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/interfaces/raisedVsSpent.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedVsSpent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-money-stacked-bar/outside-money-stacked-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutsideMoneyStackedBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultColors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GreenText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GreyBackgroundWhiteText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/outside-spending-bar/outside-spending-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OutsideSpendingBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DuplicatedIndustries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FiveIndustries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OneIndustry",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TwoIndustries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RaisedByIndustryBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-industry-bar/raised-by-industry-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedByIndustry",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RaisedByLocationBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-location-bar/raised-by-location-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedByLocations",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RaisedByOutsideMoneyBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-by-outside-money-bar/raised-by-outside-money-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedByOutsideMoney",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountOver999",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountOver9999",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountOver99999",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountOver999999",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AmountsUnder1000",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EqualInAndOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HighInsideLowOutside",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeDifferenceFavoringInside",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeDifferenceFavoringOutside",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LowInsideHighOutside",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LowOutsideFitOverLap1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LowOutsideFitOverLap2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MinimalOutsideFit1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MinimalOutsideFit2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-in-vs-out-donut/raised-in-vs-out-donut.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RaisedInVsOutDonutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/raised-vs-spent-bar/raised-vs-spent-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RaisedVsSpentBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/round-currency.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RoundCurrencyPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TotalRaisedBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-raised-bar/total-raised-bar.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RaisedCategory",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample1",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sample2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TotalSpentDonutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/vv-charts/total-spent-donut/total-spent-donut.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Category",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.db-remote.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}